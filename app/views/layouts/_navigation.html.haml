- current_module = Ekylibre::Modules.module_of(controller.controller_path, action_name)
%nav#top

  = link_to("#side", id: "menu", "data-toggle" => "side") do
    %i

  -#= link_to(backend_root_path, id: "brand") do
    %i
    %h1= "Ekylibre"

  = link_to(backend_root_path, id: "home") do
    %i
    = :home.tl


  = link_to(Ekylibre::Modules.human_name(current_module), {controller: "/backend/dashboards", action: current_module}, id: "module") if current_module

  .collapse

    - if current_module
      %ul#modules
        - for mod in Ekylibre::Modules.hash.keys
          - next unless authorized?(controller: "/backend/dashboards", action: mod)
          %li.separator
          :ruby
            attrs = {:id => "#{mod}-module"}
            attrs[:class] = :active if current_module == mod
          %li{attrs}
            = link_to(controller: "/backend/dashboards", action: mod) do
              %i
              = Ekylibre::Modules.human_name(mod)

    %ul#user
      %li.separator
      %li.dropdown
        = link_to("#", "data-toggle" => "dropdown") do
          = Entity.of_company.full_name
          %i
        %ul#user-menu.dropdown-menu
          %li
            = link_to(backend_myself_path, :class => :user) do
              %i
              = current_user.person.full_name
          %li
            = link_to(destroy_user_session_path, :method => :delete, :class => :signout) do
              %i
              = Authentication::SessionsController.human_action_name(:destroy)
