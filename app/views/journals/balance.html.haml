=form_tag({}, :method=>:get) do
  .search
    %table
      %tr 
        %td.crit=journal_period_crit
        %td.submit{:rowspan=>5}=submit_tag tg(:display), :name=>nil
      %tr
        %td.crit=journal_entries_states_crit
      %tr
        %td.crit=accounts_range_crit
      %tr
        %td.crit
          -centralized = @current_company.preferences.find(:all, :order=>"id", :conditions=>["name LIKE ? ", "third_%_accounts"]).collect{|p| p.value.to_s}.join(" ")
          %label=tc(:centralize)
          =text_field_tag("centralize", params[:centralize]||centralized, :size=>30)
      %tr
        %td.crit
          -max = @current_company.accounts.maximum(Account.connection.length("COALESCE(number, '')")).to_i
          %label=tc(:subtotals_at_level)
          -for level in 1..max-1
            -name = "level_#{level}"
            =check_box_tag(name, "1", params[name]=="1")
            %label{:for=>name}=level
          
-if @balance
  %table.list
    %tr
      %th{:rowspan=>2}=tc(:account_number)
      %th{:rowspan=>2}=tc(:account_name)
      %th{:colspan=>2}=tc(:total)
      %th{:colspan=>2}=tc(:balance)
    %tr
      %th=JournalEntry.human_attribute_name("debit")
      %th=JournalEntry.human_attribute_name("credit")
      %th=JournalEntry.human_attribute_name("debit")
      %th=JournalEntry.human_attribute_name("credit")
    -for line in @balance
      -d = line[0].size-1
      -if line[1].to_i > 0
        -account = @current_company.accounts.find(line[1])
        %tr{:class=>cycle(:odd, :even)}
          %td.code=link_to(account.number, :action=>:account, :id=>account.id)
          %td=link_to(account.name, :action=>:account, :id=>account.id)
          %td.dec=number_to_accountancy(line[2])
          %td.dec=number_to_accountancy(line[3])
          %td.dec=number_to_accountancy(line[4]) if line[4].to_f > 0
          %td.dec=number_to_accountancy(-line[4].to_f) if line[4].to_f < 0
      -elsif line[1].to_i == -1
        %tr.total
          %th{:colspan=>2}=tg(:total)
          %td.dec=number_to_accountancy(line[2])
          %td.dec=number_to_accountancy(line[3])
          %td.dec=number_to_accountancy(line[4]) if line[4].to_f > 0
          %td.dec=number_to_accountancy(-line[4].to_f) if line[4].to_f < 0
      -elsif line[1].to_i == -2
        %tr.subtotal
          %td{:colspan=>2, :style=>"padding-left: #{d*8+4}px"}=tc(:subtotal, :name=>line[0])
          %td.dec=number_to_accountancy(line[2])
          %td.dec=number_to_accountancy(line[3])
          %td.dec=number_to_accountancy(line[4]) if line[4].to_f > 0
          %td.dec=number_to_accountancy(-line[4].to_f) if line[4].to_f < 0
      -elsif line[1].to_i == -3
        %tr.centralize{:class=>cycle(:odd, :even)}
          %td=line[0]
          %td=tc(:centralized_account, :name=>line[0])
          %td.dec=number_to_accountancy(line[2])
          %td.dec=number_to_accountancy(line[3])
          %td.dec=number_to_accountancy(line[4]) if line[4].to_f > 0
          %td.dec=number_to_accountancy(-line[4].to_f) if line[4].to_f < 0
.end
