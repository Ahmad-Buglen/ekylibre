=sales_steps if params[:step]

=toolbar do |t|
  -t.update @sales_order if @sales_order.draft?
  -if @sales_order.can_confirm?
    -t.confirm @sales_order, :method=>:post, :confirm=>tc(:are_you_sure_you_want_to_confirm)
  -if @sales_order.can_invoice?
    -t.invoice @sales_order, :method=>:post, :confirm=>tc(:are_you_sure_you_want_to_invoice)
  -for event in [:propose, :finish, :correct, :refuse]
    -t.send(event, @sales_order, :method=>:post, :confirm=>tc(:are_you_sure)) if @sales_order.send("can_#{event}?")
  -t.abort(@sales_order, :method=>:post, :confirm=>tc(:are_you_sure)) if @sales_order.can_abort?
  -t.print :sales_order, :id=>@sales_order.id

=attributes_list(@sales_order) do |l|
  -l.attribute :client, :label=>:label, :url=>{:controller=>:relations, :action=>:entity}
  -l.attribute :number
  -l.attribute :state_label
  -l.attribute :responsible, :label=>:full_name
  -l.attribute :created_on
  -l.attribute :confirmed_on
  -l.attribute :payment_delay, :label=>:name
  -l.attribute :nature
  -l.attribute :currency unless @sales_order.currency == @current_company.default_currency
  -l.attribute :comment unless @sales_order.comment.blank?
  -l.attribute :contact, :label=>:address
  -l.attribute :delivery_contact, :label=>:address
  -l.attribute :invoice_contact, :label=>:address
  -l.attribute :letter_format
  -if @sales_order.letter_format?
    -l.attribute :subject
    -l.attribute :function_title
    -l.attribute :introduction, :field=>:textarea
    -l.attribute :conclusion, :field=>:textarea


-if ["products", ""].include? params[:step].to_s
  %h2=SalesOrder.human_attribute_name("lines")
  -@sales_order_line = @sales_order.lines.new
  -if @sales_order.draft?
    =toolbar do |t|
      -t.link(:sales_order_line_create, :order_id=>@sales_order.id) 
    =render :partial=>"sales_order_line_row_form"
  =kame :sales_order_lines
  %table.kame
    %tr.total
      %th=SalesOrder.human_attribute_name(:pretax_amount)
      %td=number_to_management(@sales_order.pretax_amount)
    %tr.important.total
      %th=SalesOrder.human_attribute_name(:amount)
      %td=number_to_management(@sales_order.amount)
  -if @sales_order.subscriptions.size>0
    %h2=tl :subscriptions
    =kame :sales_order_subscriptions


-if ["products", "summary", ""].include? params[:step].to_s
  %h2=tc :incoming_payments
  =toolbar do |t|
    -t.link(:incoming_payment_use_create, :expense_type=>:sales_order, :expense_id=>@sales_order.id, :controller=>:finances) unless @sales_order.finished?
  =kame :sales_order_payment_uses

      
-if ["deliveries", ""].include? params[:step].to_s
  -if @sales_order.deliverable?
    %h2=tc :undelivered
    =toolbar do |t|
      -t.link :outgoing_delivery_create, :sales_order=>@sales_order.id
    =kame :sales_order_undelivered_lines
  %h2=SalesOrder.human_attribute_name("deliveries")
  =kame :sales_order_deliveries


-if ["summary", ""].include? params[:step].to_s
  %h2=SalesOrder.human_attribute_name(:sales_invoices)
  =kame :sales_order_invoices


-if ["products", "summary", ""].include? params[:step].to_s
  %h2=tc :financial_state
  %table.kame
    -for k, v in @sales_order.stats(:with_balance=>true)
      %tr.total
        %th=tc(k)
        %td=number_to_management(v)
  
