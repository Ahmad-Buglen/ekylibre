-location_id = nil
=formalize do |f|
  -f.error :product
  -f.error :stock
  -f.title :identification
  -f.field :product, :name
  -f.field :product, :code
  -f.field :product, :code2
  -f.field :product, :ean13
  -f.field :product, :catalog_name
  -f.field :product, :comment, :field=>:textarea
  -f.title :nature
  -f.field :product, :shelf_id, :choices=>{:reflection=>:shelves}, :new=>{:action=>:shelf_create}
  -f.field :product, :unit_id, :choices=>{:reflection=>:units}, :new=>{:controller=>:company, :action=>:unit_create}
  -f.field :product, :weight
  -f.field :product, :price
  -f.field :product, :nature, :field=>:radio, :choices=>Product.natures
  -f.field :product, :service_coeff, :html_options=>{:id=>:service_coeff}
=formalize(:id=>:subscriptions) do |f|
  -f.field :product, :subscription_nature_id,  :choices=>{:reflection=>:subscription_natures}, :new=>{:action=>:subscription_nature_create} 
  -f.field :product, :duration

=formalize do |f|
  -f.field :product, :reduction_submissive
  -f.field :product, :active
  -f.field :product, :for_sales
  -f.field :product, :for_purchases
  -f.field :product, :for_productions
  -f.field :product, :manage_stocks
=formalize(:id=>:product_form_stocks) do |f|
  -f.title :stocks_parameters
  -f.field :stock, :quantity_min
  -f.field :stock, :critic_quantity_min
  -f.field :stock, :quantity_max
  -if @locations.size > 1
    -location_id = f.field :stock, :location_id, :choices=>{:reflection=>:locations}, :new=>{:action=>:location_create}
-#price=render :partial=>'price_amount_form'

=formalize do |f|
  -f.title :accountancy
  -f.field :product, :sales_account_id, :choices=>{:reflection=>:products_accounts}, :new=>{:controller=>:accountancy, :action=>:account_create}, :html_options=>{:id=>'sales_account'}
  -f.field :product, :purchases_account_id, :choices=>{:reflection=>:charges_accounts}, :new=>{:controller=>:accountancy, :action=>:account_create}, :html_options=>{:id=>'purchases_account'}

:javascript
  window.toggleService = function() { toggleElement('service_coeff', $('product_nature_service').checked); }
  toggleService();
  window.toggleSubscription = function() { toggleElement('subscriptions', $('product_nature_subscrip').checked); }
  toggleSubscription();
  window.toggleStocks = function() { toggleElement('product_form_stocks', $('product_manage_stocks').checked); }
  toggleStocks();
  window.togglePurchasesAccount = function() { toggleElement('purchases_account', $('product_for_purchases').checked); }
  togglePurchasesAccount();
  window.toggleSalesAccount = function() { 
    toggleElement('sales_account', $('product_for_sales').checked); 
    /*toggleElement('price', $('product_for_sales').checked); */
  }
  toggleSalesAccount();

=observe_field("product_nature_service", :frequency =>0.25, :function => "toggleService();")
-if request.url.to_s.include? "update"
  =observe_field(location_id, :url=>{:action=>:change_quantities}, :frequency=>0.25, :with=>"location_id")
=observe_field("product_manage_stocks", :frequency=>0.25, :function=> "toggleStocks();")
=observe_field("product_nature_subscrip", :frequency=>0.25, :function=>"toggleSubscription();")
=observe_field("product_for_purchases", :frequency=>0.25, :function=>"togglePurchasesAccount();")
=observe_field("product_for_sales", :frequency=>0.25, :function=>"toggleSalesAccount();")
