-if @operation != :update and @payments.size>0
  .payments
    -for mode in @modes
      =radio_button(:price, :mode , mode, :checked=>( mode=="new" ? true : false))+"&nbsp;"+content_tag(:label, tc(mode), :for=>'price_mode_'+mode)

=error_messages_for 'payment'

-if @operation != :update and @payments.size>0
  =formalize(:id=>:existing_payment) do |f|
    -f.field tc(:unused_payment), select(:pay, :part, @payments.collect{|x| [tc(:payment_label, :amount=>x.amount.to_s, :date=>x.created_at.to_date, :mode=>x.mode.name, :usable_amount=>(x.amount - x.parts_amount).to_s) , x.id]})

=formalize(:id=>:new_payment) do |f|
  -f.title :title
  -f.field :payment, :amount
  -f.field :payment, :to_bank_on
  -f.field :payment, :mode_id, :choices=>@current_company.payment_modes.collect{|x| [x.name, x.id ]}, :new=>{:action=>:payment_modes_create}
  -f.field :payment, :downpayment
  -f.title :check
  -f.field :payment, :embanker_id, :choices=>@current_company.users.collect{|x| [x.first_name+" "+x.last_name, x.id]}
  -f.field :payment, :paid_on
  -f.field :payment, :check_number
  -f.field :payment, :account_number
  -f.field :payment, :bank


:javascript
  function payment_type(){
    if ($('price_mode_new').checked) {
      $('existing_payment').hide();
      $('new_payment').show();
    } else {
      $('existing_payment').show();
      $('new_payment').hide();
    } 
  }
  payment_type();

=observe_field "price_mode_new", :function=>"payment_type();", :frequency => 0.25
