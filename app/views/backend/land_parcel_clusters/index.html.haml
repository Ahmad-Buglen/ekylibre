:ruby
  #TODO add filter by campaign
  data = []
  lp = LandParcelCluster.all
  total_net_surface_area = lp.map(&:net_surface_area).flatten.sum
  lp.find_each do |land_parcel_cluster|

    popup_content = []

    # for support
    popup_content << {label: LandParcelCluster.human_attribute_name(:work_number), value: land_parcel_cluster.work_number}
    popup_content << {label: LandParcelCluster.human_attribute_name(:identification_number), value: land_parcel_cluster.identification_number}
    popup_content << {label: LandParcelCluster.human_attribute_name(:net_surface_area), value: land_parcel_cluster.net_surface_area.in_hectare.round(4).l}

    popup_content << render('popup', support: land_parcel_cluster)

    item = {
      name:        land_parcel_cluster.name,
      shape:      land_parcel_cluster.shape,
      land_parcel_count:  land_parcel_cluster.members_at.count,
      popup: {header: true, content: popup_content}
    }
    data << item
  end

- main_toolbar do |t|
  - t.new

= janus do |j|
  - j.face :map do
    %span.title= LandParcelCluster.human_attribute_name(:net_surface_area)
    %span.value= total_net_surface_area.in_hectare.round(2).l
    = visualization do |v|
      - v.serie :main, data
      - v.background "Esri.WorldImagery"
      - v.background "OpenStreetMap.HOT"
      - v.background "OpenStreetMap.Mapnik"
      - v.background "Thunderforest.Landscape"
      - v.choropleth :land_parcel_count, :main
      - v.control :zoom
      - v.control :scale
      - v.control :fullscreen
      - v.control :layer_selector
        
  - j.face :list do
    = main_list

