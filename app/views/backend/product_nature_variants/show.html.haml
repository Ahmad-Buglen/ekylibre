= main_toolbar do |t|
  - t.edit resource

= beehive do |b|
  - b.cell do
    = attributes_list(resource) do |l|
      - l.attribute :name
      - l.attribute :commercial_name
      - l.attribute :unit_name
      - if resource.picture.exists?
        = image_tag(resource.picture.url(:thumb))

  - b.tabbox do
    - b.cell(:products) do
      = list(:products)
    -b.cell(:prices) do
      = toolbar do |t|
        - t.new(:params => {:controller => :catalog_prices, :variant_id => resource.id})
      = list(:prices)
    -b.cell(:prices_evolutions) do
      - if @product_nature_variant.prices.count > 0
          :ruby
            #
            prices = CatalogPrice.of_variant(@product_nature_variant)
        
            started_on = prices.reorder(:started_at).first.started_at.to_date
            stopped_on = prices.reorder(:started_at).last.stopped_at.to_date
        
            series = []
            categories = {}
            date = started_on
            while date < stopped_on
              categories[date.year.to_s + date.month.to_s.rjust(2, '0')] = date.l(:format => "%b %Y")
              date = date >> 1
            end
        
            for usage in [:purchase, :sale, :stock, :cost]
              items = prices.of_usage(usage)
        
              item_h = items.sort.inject({}) do |hash, pair|
                hash[pair.started_at.l(:format => "%b %Y")] = pair.amount.to_d
                hash
              end
        
              for cat in categories.keys
                item_h[cat] ||= 0.0
              end
              series << {name: usage.tl ,data: item_h.collect{|k,v| v.to_s.to_f } }
            end
        
          = line_chart(series,legend: { layout: 'vertical', align: 'bottom', vertical_align: 'bottom', border_width: 0 }, x_axis: { categories: categories.values})
        - else
          %strong= :no_data.tl
