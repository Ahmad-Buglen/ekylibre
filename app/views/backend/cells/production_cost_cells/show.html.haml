:ruby
  # prepare an array of hash

  unit = @activity_production.activity.size_unit_name.to_sym
  unit ||= :hectare

  unit_item = Nomen::Unit[unit]

  currency = Preference[:currency]
  currency_item = Nomen::Currency[currency]

  series = []
  categories = [:input_cost.tl, :doer_cost.tl, :tool_cost.tl]
  global_cost_per_hectare = []
  ordered_interventions = @activity_production.interventions.includes(targets: :product, tools: [:product, :intervention], inputs: :product, doers: [:product, :intervention]).reorder(:started_at)

  data_pie = []
  ordered_interventions.find_each do |intervention|
    cost = []
    data_bar = []
    for role in [:input, :doer, :tool]
      intervention_cost = intervention.cost_per_area(role, unit)
      if cost_per_hectare = intervention_cost
        cost << intervention_cost
      else
        cost_per_hectare = 0.0
      end
      data_bar << cost_per_hectare.round(2).to_s.to_f
    end
    cost_sum = cost.compact.sum.round(2).to_s.to_f
    series << { name: intervention.name, data: data_bar }
    data_pie << {name: intervention.name, y: cost_sum }
    global_cost_per_hectare << cost_sum
  end
  series << {type: 'pie', name: :total.tl, data: data_pie, center: [50, 50], size: 100, show_in_legend: false, data_labels: { enabled: false }}

  # build chart title
  label_measure = currency_item.human_name + '/' + unit_item.human_name
  symbol_measure = currency_item.symbol + '/' + unit_item.symbol
  chart_title = :production_cost.tl + ' : ' + global_cost_per_hectare.compact.sum.round(2).to_s + ' ' + label_measure +' (' + symbol_measure + ')'


= column_highcharts(series, title: chart_title, tooltip: {point_format: "{point.y: 1.2f} #{symbol_measure}"}, y_axis: {title: {text: :cost_per_net_surface_area.tl + ' (' + symbol_measure + ')'}, stack_labels: {enabled: true, format: "{total} " + symbol_measure}, labels: { format: "{value}" }}, x_axis: { categories: categories}, legend: true, plot_options: { column: {stacking: 'normal'}})
