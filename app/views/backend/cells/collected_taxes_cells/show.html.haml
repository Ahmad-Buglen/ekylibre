- if @financial_years
  :ruby
    #
    taxes = Tax.all

    started_at = @financial_years.started_at
    stopped_at = @financial_years.stopped_at

    series = []
    categories = {}
    date = started_at
    while date < stopped_at
      categories[date.year.to_s + date.month.to_s.rjust(2, '0')] = date.l(:format => "%b %Y")
      date = date + 1.month
    end

    for tax in taxes
      items_collected = tax.lasts_of_periods(started_at, stopped_at, mode = :collect)
      if items_collected.count > 0
        item_h = items_collected.sort.inject({}) do |hash, pair|
          hash[pair.printed_at.l(:format => "%b %Y")] = (pair.cumulated_absolute_debit - pair.cumulated_absolute_credit).to_d
          hash
        end
        series << {name: tax.name + " " + Tax.human_attribute_name(:collect_taxes) ,data: item_h.collect{|k,v| v.to_s.to_f } }
      end
      items_paid = tax.lasts_of_periods(started_at, stopped_at, mode = :deduction)
      if items_paid.count > 0
        item_h = items_paid.sort.inject({}) do |hash, pair|
          hash[pair.printed_at.l(:format => "%b %Y")] = (pair.cumulated_absolute_debit - pair.cumulated_absolute_credit).to_d
          hash
        end
        series << {name: tax.name + " " + Tax.human_attribute_name(:deduction_taxes) ,data: item_h.collect{|k,v| v.to_s.to_f } }
      end

    end

  = bar_chart(series,legend: { layout: 'vertical', align: 'bottom', vertical_align: 'bottom', border_width: 0 }, x_axis: { title: {text: :taxes.tl}, categories: categories.values}, y_axis: {title: {text: :values.tl}})
- else
  = no_data