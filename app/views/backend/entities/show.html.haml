= main_toolbar do |t|
  - t.export :entity, resource
  - t.edit resource
  - t.destroy(resource, :method => :delete, "data-confirm" => tg(:are_you_sure_you_want_to_delete)) if resource.destroyable?

= beehive do |b|
  - b.hbox do
    - if resource.addresses.count > 0 or resource.picture
      - b.cell :coordinates do
        - if resource.picture.file?
          .picture= image_tag(resource.picture.url(:identity))
        - for address in resource.addresses.order(:canal, :by_default)
          .info
            %span.title{:class => "canal-"+address.canal.to_s}= address.canal.text
            %span.value
              - if address.email?
                = mail_to(address.coordinate, address.coordinate)
              - elsif address.phone? or address.mobile?
                %a{:href => "tel:#{address.coordinate}"}= address.coordinate
              - elsif address.mail?
                = link_to(address.coordinate, "https://maps.google.fr/?q=#{URI.encode(address.coordinate)}")
              - elsif address.website?
                = link_to(address.coordinate, address.coordinate)
              - else
                = address.coordinate
        - if EntityLink.of_entity(resource).actives.any?
          .info
            %span.title= :related_people.tl
            %span.value= Entity.related_to(resource).map{|p| link_to(p.full_name, controller: p.type.tableize, action: :show, id: p.id)}.to_sentence.html_safe

    - b.cell :details do
      = attributes_list(resource) do |l|
        - l.attribute :last_name
        - l.attribute :first_name unless resource.first_name.blank?
        - l.attribute :nature if resource.nature
        - l.attribute :number
        - l.attribute :active
        - l.custom Entity.human_attribute_name("country"), image_tag("countries/"+resource.country+".png")+" "+t("countries."+resource.country) unless resource.country.blank?
        - l.attribute :siren unless resource.siren.blank?
        - l.attribute :activity_code unless resource.activity_code.blank?
        - l.attribute :vat_number unless resource.vat_number.blank?
        - l.attribute :born_on unless resource.born_on.blank?
        - l.attribute :dead_on unless resource.dead_on.blank?
        - l.attribute :prospect
        - l.attribute :client
        - if resource.client
          -#l.attribute :category, :label => :name, url: true
          - l.attribute :first_met_on unless resource.first_met_on.blank?
          - l.attribute :proposer, :label => :full_name unless resource.proposer.nil?
          - l.attribute :vat_subjected
          - l.attribute :reminder_submissive unless resource.reminder_submissive?
          - l.attribute :authorized_payments_count unless resource.authorized_payments_count.blank?
          - l.attribute :deliveries_conditions unless resource.deliveries_conditions.blank?
          - l.attribute :client_account, url: true
        - l.attribute :supplier
        - if resource.supplier
          - l.attribute :supplier_account, url: true
        - l.attribute :transporter

    - b.cell :historic do
      = historic_of(resource)

  - b.hbox do
    - b.cell(tl(:x_observations, count: resource.observations.count)) do
      = toolbar do |t|
        - t.new(params: {controller: :observations, entity_id: resource.id})
      = list(:observations)

    -# b.cell(tl(:x_subscriptions, count: resource.subscriptions.count)) do
      = toolbar do |t|
        - t.new(params: {controller: :subscriptions, entity_id: resource.id})
      = list(:subscriptions)

    - b.cell(tl(:x_events, count: resource.participations.count)) do
      -#=toolbar do |t|
        - t.new(params: {controller: :events, entity_id: resource.id})
      = list(:event_participations)

    - b.cell(tl(:x_entity_links, count: EntityLink.of_entity(resource).count)) do
      = toolbar do |t|
        - t.new(params: {controller: :entity_links, entity_id: resource.id})
      = list(:links)

  - b.hbox do
    - b.cell(tl(:x_mandates, count: resource.mandates.count)) do
      = toolbar do |t|
        - t.new(params: {controller: :mandates, entity_id: resource.id})
      = list(:mandates)


    - if File.exist?(Pathname.new(__FILE__).dirname.join("_extra.html.haml"))
      - b.cell("Extra") do
        =  render "extra"

    - b.cell(tl(:x_sales, count: resource.sales.count)) do
      = toolbar do |t|
        - t.new(params: {controller: :sales, :client_id => resource.id})
      = list(:sales)

    - b.cell(tl(:x_incoming_payments, count: resource.incoming_payments.count)) do
      = toolbar do |t|
        - t.new(params: {controller: :incoming_payments, :payer_id => resource.id})
      = list(:incoming_payments)

  - b.hbox do
    - b.cell(tl(:x_purchases, count: resource.purchases.count)) do
      = toolbar do |t|
        - t.new(params: {controller: :purchases, :supplier_id => resource.id})
      = list(:purchases)

    - b.cell(tl(:x_outgoing_payments, count: resource.outgoing_payments.count)) do
      = toolbar do |t|
        - t.new(params: {controller: :outgoing_payments, :payee_id => resource.id})
      = list(:outgoing_payments)