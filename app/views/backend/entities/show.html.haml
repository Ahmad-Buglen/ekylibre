- main_toolbar do |t|
  - t.export :entity, resource
  - t.edit resource
  - t.destroy(resource, method: :delete, "data-confirm" => :are_you_sure_you_want_to_delete.tl) if resource.destroyable?

= main_informations do
  = render "coordinates"


= janus do |j|
  - j.face :timeline do
    - if resource.contact?
      - content_for :entity_tools do
        - {outgoing_call: :call, outgoing_email: :email, quote: :quote, document: :writing}.each do |nature, term|
          %span.timeline-tool{class: "tl-#{nature.to_s.dasherize}"}
            = link_to({controller: :tasks, action: :new, nature: nature, state: :done, entity_id: resource.id, executor_id: current_user.person_id, redirect: request.fullpath}, title: "new_#{term}".tl, class: "btn btn-#{nature.to_s.dasherize}") do
              %i

        -# %span.timeline-tool{class: "tl-call"}
          = link_to({controller: :tasks, action: :new, nature: :outgoing_call, state: :done, entity_id: resource.id, executor_id: current_user.person_id, redirect: request.fullpath}, class: "btn btn-outgoing-call") do
            %i
            = :new_call.tl
    = timeline(resource, id: :entity) do |l|
      - l.side :observations, at: :observed_at
      - if resource.sale_opportunities.any? or resource.client?
        - l.side :sale_opportunities, new: resource.client?
      - if resource.sales.any? or resource.client?
        - l.side :sales, new: resource.client?
      - if resource.purchases.any? or resource.supplier?
        - l.side :purchases, new: resource.supplier?
      - if resource.incoming_payments.any? or resource.client?
        - l.side :incoming_payments, new: false
      - if resource.outgoing_payments.any? or resource.supplier?
        - l.side :outgoing_payments, new: false
      - l.side :tasks, at: :due_at, new: false # , params: {entity_id: resource.id, executor_id: current_user.person_id, state: :todo}
      - l.side :direct_links, at: :started_at
      - l.side :indirect_links, new: false
      -# l.side :addresses, new: false
      - l.side :events, at: :started_at, params: {controller: :events, nature: :meeting, participations: {"0" => {participant_id: resource.id, state: :accepted}, "1" => {participant_id: current_user.person_id, state: :accepted}}}
      - l.side :issues, params: {target_type: "Entity", nature: "issue", gravity: 2, priority: 2, without_geolocation: 1}, at: :observed_at
      - l.side :versions, new: false
  - j.face :cobbles do
    = cobbles do |c|
      - c.cobble :general_informations do
        = attributes_list(resource, without_stamps: true) do |l|
          - l.attribute :last_name
          - l.attribute :first_name unless resource.first_name.blank?
          - l.attribute :nature if resource.nature
          - l.attribute :number
          - l.attribute :active
          - l.custom Entity.human_attribute_name(:country), image_tag("countries/#{resource.country}.png") + " " + resource.country.l unless resource.country.blank?
          - l.attribute :siren unless resource.siren.blank?
          - l.attribute :activity_code unless resource.activity_code.blank?
          - l.attribute :vat_number unless resource.vat_number.blank?
          - l.attribute :born_at unless resource.born_at.blank?
          - l.attribute :dead_at unless resource.dead_at.blank?
          - l.attribute :prospect
          - l.attribute :client
          - if resource.balance != 0
            - l.attribute :balance, currency: true
          - if resource.client
            -#l.attribute :category, :label => :name, url: true
            - l.attribute :first_met_at unless resource.first_met_at.blank?
            - l.attribute :proposer, :label => :full_name unless resource.proposer.nil?
            - l.attribute :vat_subjected
            - l.attribute :reminder_submissive unless resource.reminder_submissive?
            - l.attribute :authorized_payments_count unless resource.authorized_payments_count.blank?
            - l.attribute :deliveries_conditions unless resource.deliveries_conditions.blank?
            - l.attribute :client_account, url: true
          - l.attribute :supplier
          - if resource.supplier
            - l.attribute :supplier_account, url: true
          - l.attribute :transporter
          - if resource.custom_fields.any?
            - l.custom_fields

      -# if cash = resource.cash
        - c.cobble(:cash_balance) do
          - balance = cash.balance
          .big-info{class: (balance < 0 ? :positive : balance > 0 ? :negative : :caution)}
            %span.title= cash.name
            %span.value= balance.l(currency: cash.currency)

      - c.cobble(:events, title: :x_events.tl(count: resource.participations.count)) do
        = cobble_toolbar do |t|
          - t.new params: {controller: :events, action: :new, nature: :meeting, participations: {"0" => {participant_id: resource.id, state: :accepted}, "1" => {participant_id: current_user.person_id, state: :accepted}}}
        - if resource.participations.any?
          = cobble_list(:event_participations)

      - c.cobble(:issues, title: :x_issues.tl(count: resource.issues.count)) do
        = cobble_toolbar do |t|
          - t.new(params: {controller: :issues, target_id: resource.id, target_type: resource.class.name})
        - if resource.issues.any?
          = cobble_list(:issues)

      - c.cobble(:entity_links, title: :x_entity_links.tl(count: EntityLink.of_entity(resource).count)) do
        = cobble_toolbar do |t|
          - t.new(params: {controller: :entity_links, entity_id: resource.id})
        - if EntityLink.of_entity(resource).any?
          = cobble_list(:links)

      - c.cobble(:tasks, title: :x_tasks.tl(count: resource.tasks.count)) do
        = cobble_toolbar do |t|
          - t.new(params: {controller: :tasks, entity_id: resource.id, executor_id: current_user.person_id, state: :todo})
        - if resource.tasks.any?
          = cobble_list(:tasks)

      - c.cobble(:sale_opportunities, title: :x_sale_opportunities.tl(count: resource.sale_opportunities.count)) do
        = cobble_toolbar do |t|
          - t.new(params: {controller: :sale_opportunities, third_id: resource.id})
        - if resource.sale_opportunities.any?
          = cobble_list(:sale_opportunities)

      - c.cobble(:sales, title: :x_sales.tl(count: resource.sales.count)) do
        = cobble_toolbar do |t|
          - t.new(params: {controller: :sales, :client_id => resource.id})
        - if resource.sales.any?
          = cobble_list(:sales)

      - c.cobble(:incoming_payments, title: :x_incoming_payments.tl(count: resource.incoming_payments.count)) do
        = cobble_toolbar do |t|
          - t.new(params: {controller: :incoming_payments, :payer_id => resource.id})
        - if resource.incoming_payments.any?
          = cobble_list(:incoming_payments)

      - c.cobble(:subscriptions, title: :x_subscriptions.tl(count: resource.subscriptions.count)) do
        = cobble_toolbar do |t|
          - t.new(params: {controller: :subscriptions, entity_id: resource.id})
        - if resource.subscriptions.any?
          = cobble_list(:subscriptions)

      - c.cobble(:purchases, title: :x_purchases.tl(count: resource.purchases.count)) do
        = cobble_toolbar do |t|
          - t.new(params: {controller: :purchases, :supplier_id => resource.id})
        - if resource.purchases.any?
          = cobble_list(:purchases)

      - c.cobble(:outgoing_payments, title: :x_outgoing_payments.tl(count: resource.outgoing_payments.count)) do
        = cobble_toolbar do |t|
          - t.new(params: {controller: :outgoing_payments, :payee_id => resource.id})
        - if resource.outgoing_payments.any?
          = cobble_list(:outgoing_payments)


