= f.object.errors.inspect if Rails.env.development? && f.object.errors.any?
= field_set do
  = f.input :name
  = f.input :nature, as: :radio_buttons, show: '.{{value}}-nature-options'
  = f.input :production_system_reference_name
  = f.input :family, collection: Nomen::ActivityFamily.selection, input_html: {data: {activity_family: true}}
  - family = Nomen::ActivityFamily[f.object.family]
  = f.input :with_cultivation, as: :hidden
  = f.input :cultivation_variety, collection: ((family and family.cultivation_variety) ? Nomen::Variety.selection(family.cultivation_variety) : []), wrapper_html: {style: "display: #{(family and family.cultivation_variety) ? 'block' : 'none'}"}
  -#= f.input :with_supports, as: :hidden
  -# = f.input :support_variety, collection: ((family and family.support_variety) ? Nomen::Variety.selection(family.support_variety) : []), wrapper_html: {style: "display: #{(family and family.support_variety) ? 'block' : 'none'}"}
  = f.input :production_cycle, as: :radio_buttons, show: '.{{value}}-production-cycle-options'
  .perennial-production-cycle-options
    = f.input :production_campaign, as: :radio_buttons
  -#.main-nature-options
    = f.input :size_indicator_name
    = f.input :size_unit_name
  = f.input :use_countings
  = f.input :use_gradings, show: '#gradings'
  #gradings
    = f.input :use_grading_calibre, show: '#grading_calibre'
    #grading_calibre
      = f.input :grading_calibre_indicator_name
      = f.input :grading_calibre_unit_name
    = f.input :measure_grading_items_count
    = f.input :measure_grading_net_mass, show: '#grading_net_mass'
    #grading_net_mass
      = f.input :grading_net_mass_unit_name
    = f.input :measure_grading_sizes, show: '#grading_sizes'
    #grading_sizes
      = f.input :grading_sizes_indicator_name
      = f.input :grading_sizes_unit_name
  = f.input :description
  = f.custom_fields

.auxiliary-nature-options
  = field_set(Activity.human_attribute_name(:distributions)) do
    = f.nested_association(:distributions)
