- components.each do |component|
  .component
    .component-block
      .component-title
        %span= "#{component.name} (#{component.id}): "
        - if component.part_product_nature_variant
          = link_to component.part_product_nature_variant.name, backend_product_nature_variant_path(component.part_product_nature_variant)
        - if component.part_replacements.any?
          %span= product.last_replacement(component).intervention_parameter.product.name
      - if resource.remaining_working_lifespan || resource.remaining_lifespan
        .component-status
          = lights(product.wear_status(component))
        .component-life
          %span= :x_hours_worked.tl count: product.working_life_of(component).to_f(:hour).round
      .component-wear
        - if product.replaced_at(component)
          %span{title: product.replaced_at(component).l }= relative_distance_in_words product.replaced_at(component)
        - else
          = :original_component.tl
      .component-details
        = button_tag :details ,type: :button, class: "btn", data: { toggle: :modal, target: "#show_component_details_#{component.id}"}

      .component-documentation
        - if component.part_product_nature_variant
          = dropdown_menu_button(:documentation.tl, icon: false) do |menu|
            - component.part_product_nature_variant.attachments.each do |attachment|
              - menu.item attachment.name, {controller: 'backend/documents', id: attachment.document_id, action: :show, format: :pdf }
      .component-replacement
        - target_attributes = { product_id: resource.id }
        - component_attributes = { component_id: component.id }
        = tool_to :replace.ta, {action: :new, controller: :interventions, "procedure_name"=>"equipment_maintenance", "actions"=>["curative_maintenance"], "trouble_encountered"=>"0", "trouble_description"=>"", "prescription_id"=>"", "group_parameters_attributes"=>{ "0"=> { "reference_name"=>"work", "targets_attributes"=> { "0"=> { "reference_name"=>"equipment", "product_id"=>resource.id }, }, "inputs_attributes"=> { "0"=> { "reference_name"=>"replacement_part", "component_id"=>component.id } } } }, redirect: request.fullpath}
    = modal(id: "show_component_details_#{component.id}", title: Product.human_attribute_name(:part_replacements), close_button: true) do
      = render "component_infos", component: component
    = render 'composition', product: product, components: component.children


  / %table
  /   .component
  /     %td
  /       = tool_to "Remplacer l'élément", {}
  /     / %td
  /     /   = dropdown_menu_button(:documentation.tl, icon: false) do |menu|
  /     /     - puts component.part_product_nature_variant.inspect
  /     /     - component.part_product_nature_variant.attachments.each do |attachment|
  /     /       - menu.item attachment.name, {controller: 'backend/documents', id: attachment.document_id, action: :show, format: :pdf }
  /     %td
  /       = "#{component.name}: "
  /       = link_to component.part_product_nature_variant.name, backend_product_nature_variant_path(component.part_product_nature_variant)

  / = render 'composition', variant: component.part_product_nature_variant
