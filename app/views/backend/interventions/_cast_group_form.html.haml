- id = "cast-#{parameter_group.name}"
- reflection = :cast_groups
- list = f.object.send(reflection).select{|v| v.reference_name.to_s == parameter_group.name.to_s}
- f.object.send(reflection).new(reference_name: parameter_group.name) unless list.any?
- list = f.object.send(reflection).select{|v| v.reference_name.to_s == parameter_group.name.to_s}
.nested-association.nested-cast_group
  .intervention-cast-group{id: id}
    -#= f.simple_fields_for(reflection, list) do |c|
      = render "cast_group_fields", f: c, parameter_group: parameter_group
  .links= link_to_add_association "add_x".tl(x: parameter_group.human_name), f, reflection, partial: "cast_group_fields", data: {association_insertion_node: "##{id}", association_insertion_method: :append}, render_options: {locals: {thing: reflection, parameter_group: parameter_group}}, class: 'nested-add'

