%li.cast
  .cost
    - price = product_parameter.price
    - if product_parameter.cost && price["price_origin_id"]
      %p= link_to(price["price_detail"], {controller: price["price_origin"], action: :edit, id: price["price_origin_id"], redirect: request.fullpath})
      %h4= price["price_origin"].tl
    - elsif price["price_origin_id"] == nil && price["price_origin"] == :none
      %p= link_to(price["price_detail"], {controller: :catalog_items, action: :new, variant_id: product_parameter.variant.id, catalog_id: price["price_catalog_id"], redirect: request.fullpath})
      .picto{class: "picto-question"}
  - actor = product_parameter.product
  - variant = product_parameter.variant



  - if actor
    .picture
      - if actor.picture.file?
        = image_tag(actor.picture.url(:thumb))
      - elsif pictogram = actor.category.pictogram
        .picto{class: "picto-#{pictogram.gsub('_', '-')}"}
      - else
        .picto{class: "picto-question"}

    .details
      %h3= link_to(actor.name, {controller: actor.class.table_name, action: :show, id: actor.id})
      %p= product_parameter.name
      %p= product_parameter.model_name.human
      - if actor.is_a?(Product) && !actor.population_counting_unitary? && variant && product_parameter.quantity_unit_name && product_parameter.quantity
        %p
          - if product_parameter.quantity_indicator == 'population'
            = :x_thing.tl(x: product_parameter.quantity.round(2).l, thing: variant.unit_name.mb_chars.downcase)
          - else
            = product_parameter.quantity.round(2).l
  - elsif variant
    .picture
      - if variant.picture.file?
        = image_tag(variant.picture.url(:thumb))
      - elsif pictogram = variant.category.pictogram
        .picto{class: "picto-#{pictogram.gsub('_', '-')}"}
      - else
        .picto{class: "picto-question"}

    .details
      %h3= link_to(variant.name, {controller: variant.class.table_name, action: :show, id: variant.id})
      %p= product_parameter.name
      %p= product_parameter.model_name.human
      - if !variant.population_counting_unitary?
        %p= :x_thing.tl(x: (product_parameter.quantity_value || 0).round(2).l,
                        thing: variant.unit_name.mb_chars.downcase)

  - else
    .picture
      .picto{class: "picto-question"}
    .details
      %h3= product_parameter.name
      %p= product_parameter.model_name.human


