= content_tag(:div,
id: :intervention_template_form,
data: { template: @intervention_template.to_json,
  product_parameters_attributes: @intervention_template.product_parameters.to_json,
  procedure_names: procedure_parameters(@procedure) }) do
  = field_set do
    = f.input :name, input_html: { 'v-model': 'template.name' }
    = f.input :active, input_html: { 'v-model': 'template.active' }
    = f.input :description, wrapper: :bootstrap, type: :text, input_html: { 'v-model': 'template.description' }

  = field_set :product_parameters do
    = simple_fields_for f.object.product_parameters.new do |p|
      .list_of_procedures{ 'v-for': 'procedure in procedure_names' }
        .nested-association.nested-parameters
          .nested-fields.nested-product-parameter
            {{ procedure.name }}

            .parameters{ 'v-for': '(parameter, index) in attributesForProcedure(procedure)' }
              = p.input :product_nature, wrapper_html: { 'v-if': 'isEquipment(procedure)' },
                input_html: { 'v-model': 'parameter.product_name',
                'v-on:click.stop': 'completeDropdown(index, procedure)',
                '@keyup': 'completeDropdown(index, procedure)',
                class: 'selector-search' }
              = p.input :product_nature_variant, wrapper_html: { 'v-if': '!isEquipment(procedure)' },
                input_html: { 'v-if': '!isEquipment(procedure)',
                'v-model': 'parameter.product_name',
                'v-on:click.stop': 'completeDropdown(index, procedure)',
                '@keyup': 'completeDropdown(index, procedure)',
                class: 'selector-search' }
              .items-menu.choices-selector.intervention-template-unroll{ 'v-if': 'parameter.showList' }
                %ul.items-list
                  %li.item{ 'v-on:click.stop': "updateProduct(index, '', '')" }
                  %li.item{ 'v-for': 'prod in parameter.productList',
                  'v-on:click.stop': 'updateProduct(index, procedure, prod.id, prod.label)' }
                    {{ prod.label }}
              = p.input :quantity, input_html: { 'v-model': 'parameter.quantity' }
              %select{ 'v-model': 'parameter.unit' }
                %option{ 'v-for': 'unity in procedure.unities' }
                  {{ unity.human_name }}
              %a.remove-link{ href: '#', 'v-on:click': 'removeParameter(index)' }
                Remove parameter
        .links
          %a.nested-add.add_fields{ href: '#', '@click.stop': 'addParameter(procedure)' }
            Add {{ procedure.name }}
  %button{ 'v-on:click.prevent': 'saveTemplate' }
    Test
  - f.clear_actions!
