- purchases = purchase_affair.purchase_invoices

.list-content{ data: { outgoing_payment_purchase_affair: purchase_affair.id } }
  = hidden_field_tag 'purchase_affairs[]', nil, data: { outgoing_payment_purchase_affair_selection: true }
  .check
    - checked = purchase_affair.third.supplier_payment_mode_id == params[:outgoing_payment_list][:mode_id].to_i
    = check_box_tag :check, '1', checked, data: { outgoing_payment_purchase_affair_selector: true, outgoing_payment_selected_amount: 0 }
  .invoiced-at
    = purchases.minimum(:invoiced_at)&.l
  .reference
    = link_to purchase_affair.class.model_name.human + ' ' + purchase_affair.number, backend_purchase_affair_path(purchase_affair)
  .accepted-for-payment
    - if purchases.pluck(:reconciliation_state).uniq == ['accepted']
      %i
  .payment-at
    = purchases.minimum(:payment_at)&.l
  .amount{ data: { outgoing_payment_purchase_affair_amount: purchase_affair.balance } }
    = purchase_affair.balance.l(currency: f.object.mode.currency)
