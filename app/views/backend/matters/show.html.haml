= main_toolbar do |t|
  - t.edit resource
  - t.destroy(resource, :method=>:delete, "data-confirm" => tg(:are_you_sure_you_want_to_delete)) if resource.destroyable?

= beehive do |b|
  - b.hbox do
    - b.cell :general do
      - if resource.picture.exists?
        .picture= image_tag(resource.picture.url(:identity))
      .info
        %span.title= Matter.human_attribute_name(:net_mass)
        %span.value= resource.net_mass.l

    - b.cell :details do
      = attributes_list do |l| # liste des champs à afficher
        - l.attribute :name
        - l.attribute :variety, url: true
        -#l.attribute :group, url: true # on affiche l'attribut name de l'entité ProductGroup associé par l'attribut group de l'entité courante Product avec un lien vers ce groupe
        - l.attribute :born_at
        - l.attribute :dead_at
        - l.attribute :identification_number
        - l.attribute :description

  - b.hbox do
    - b.cell(:variable_indicators) do
      :ruby
        indicators = resource.variable_indicators.delete_if{|i| ![:measure, :decimal].include?(i.datatype)}
        series = []
        now, window = (Time.now + 7.days), 1.day
        min = (resource.born_at ? resource.born_at : now - window)
        min = now - window if (now - min) < window
        for indicator in indicators # [:population, :nitrogen_concentration].collect{|i| Nomen::Indicators[i] }
          items = ProductIndicatorDatum.where(indicator_name: indicator.name, product: resource).where("? < measured_at AND measured_at < ?", min, now).order(:measured_at)
          next unless items.any?
          data = []
          data << [min.to_usec, resource.get(indicator, at: min).to_f.to_s.to_f]
          data += items.inject({}) do |hash, pair|
            hash[pair.measured_at.to_usec] = pair.value.to_d
            hash
          end.collect{|k,v| [k, v.to_s.to_f] }
          data << [now.to_usec, resource.get(indicator, at: now).to_f.to_s.to_f]
          series << {name: indicator.human_name, data: data, step: "right"}
        end

      = line_chart(series, legend: { layout: 'vertical', align: 'bottom', vertical_align: 'bottom'}, y_axis: {title: { text: :indicator.tl}}, x_axis: {type: 'datetime', title: { enabled: true, text: :months.tl}, min: min.to_usec})

    - b.cell(tl(:x_indicators, :count => resource.indicator_data.count)) do
      = list(:indicators)

  - b.hbox do
    - b.cell(:interventions) do
      = toolbar do |t|
        - t.new(:params => {:controller => :interventions})
      = list(:intervention_casts)
    - b.cell(:places) do
      = list(:places)

  - b.hbox do
    - b.cell(:groups) do
      = list(:groups)

