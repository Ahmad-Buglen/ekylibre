- main_toolbar do |t|
  - t.edit resource
  - t.destroy(resource, method: :delete, "data-confirm" => :are_you_sure_you_want_to_delete.tl) if resource.destroyable?
  - t.new(params: {controller: :issues, target_id: resource.id, target_type: resource.class.name}, tool: 'new-issue')

= main_informations attachment: true do
  = render 'picture'
  = infos do
    -#
      .med-info.important
        - icon = resource.category.pictogram
        %span.title= Matter.human_attribute_name(:variant)
        %span.value
          %i.picto{class: "picto-#{icon}"}
          = link_to(resource.variant_name, controller: :product_nature_variants, action: :show, id: resource.variant_id)
    - if resource.born_at && resource.age && resource.age >= 1.day
      = resource_info(:age) do |age|
        %i.picto{class: "picto-clock-o"}
        = human_age(age, display: 2)
    - unless resource.population_counting_unitary?
      .med-info.important
        %span.title= Nomen::Indicator.find(:population).human_name
        %span.value= resource.population.l + " " + resource.unit_name
    - if resource.has_indicator?(:net_mass)
      = resource_info(:net_mass, important: true)
    - if resource.current_ownership && resource.current_ownership.external?
      = resource_info(:owner, important: true) do |owner|
        = owner.name


= cobbles do |c|

  - c.cobble :details do
    = attributes_list do |l| # liste des champs à afficher
      - l.attribute :name
      - l.attribute :variant, url: true
      - l.attribute :variety
      -#l.attribute :group, url: true # on affiche l'attribut name de l'entité ProductGroup associé par l'attribut group de l'entité courante Product avec un lien vers ce groupe
      - l.attribute :born_at
      - l.attribute :dead_at
      - l.attribute :identification_number
      - l.attribute :description
      - l.custom_fields

  - c.cobble(:variable_indicators) do
    = variable_readings(resource)

  -# c.cobble(tl(:x_readings, count: resource.readings.count)) do
    = cobble_list(:readings)

  - count = 0
  - map = visualization do |v|
    - v.background "OpenStreetMap.HOT"
    - v.background "OpenStreetMap.Mapnik"
    - v.background "Thunderforest.Landscape"
    - v.background "Esri.WorldImagery"
    - if resource.container
      - shape = resource.container.shape
      - if shape
        - v.serie resource.container.id, [{name: resource.container.name, shape: shape}]
        - v.simple resource.container.name , resource.container.id, fill_color: cycle(theme_colors)
        - count += 1
    - v.control :zoom
    - v.control :scale
    - v.control :fullscreen
    - v.control :layer_selector
  - if count > 0
    - c.cobble :container do
      = map

  - c.cobble(:interventions) do
    = cobble_toolbar do |t|
      - t.new(params: {controller: :interventions})
    = cobble_list(:intervention_product_parameters)

  -# c.cobble(:groups) do
    = cobble_list(:groups)
= render "timeline"

