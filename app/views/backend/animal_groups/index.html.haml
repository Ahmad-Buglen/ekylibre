:ruby
  data = AnimalGroup.all.collect do |group|
    next unless group.container and group.container.shape

    popup_content = []

    if group.members_at.any?
      popup_content << {label: AnimalGroup.human_attribute_name(:members_count), value: group.members_at.count }
    end

    if container = group.container
      popup_content << {label: AnimalGroup.human_attribute_name(:container), value: link_to(container.name, backend_product_path(container)) }
    end

    if issues = Issue.where(target_id: group.id, target_type: group.class.name ).reorder(:observed_at)
      popup_content << {label: AnimalGroup.human_attribute_name(:issues_count), value: issues.count }
    end

    if issues.any? and last_issue = issues.last
      popup_content << {label: AnimalGroup.human_attribute_name(:last_issue), value: link_to( last_issue.name, backend_issue_path(last_issue)) }
    end

    popup_content << render('popup', animal_group: group)

    {name: group.name, shape: group.container.shape, members_count: group.members_at.count, issues_count: issues.count, popup: {header: true, content: popup_content} }
  end

-# = kujaku

- main_toolbar do |t|
  - t.new

= janus do |j|
  - j.face :map do
    = visualization do |v|
      - v.serie :main, data
      - v.background "OpenStreetMap.HOT"
      - v.background "OpenStreetMap.Mapnik"
      - v.background "Thunderforest.Landscape"
      - v.background "Esri.WorldImagery"
      - v.choropleth :members_count, :main
      - v.control :zoom
      - v.control :scale
      - v.control :fullscreen
      - v.control :layer_selector

  - j.face :list do
    = main_list
