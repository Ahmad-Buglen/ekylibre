= field_set do
  - # TODO: Manage variables in :new parameters
  = f.input :reference_number
  = f.referenced_association :sender,  source: :suppliers, input_html: {data: {delivery_purchase: true}}
  = f.referenced_association :purchase
  = f.referenced_association :address, source: :own_mails
  = f.input :mode
  = f.input :received_at
  = f.custom_fields

.add
  - id = rand(1_000_000).to_s(36)
  %span= :add_item.tl
  %span.input-append= text_field_tag(:variant_id, nil, data: {selector: url_for(controller: :product_nature_variants, action: :unroll, scope: :stockables_or_depreciables), selector_new_item: url_for(action: :new, controller: :product_nature_variants), value_field: "##{id}"})
  = hidden_field_tag(:variant_id, nil, id: id)
  = link_to(:add.tl, {action: :new, controller: :incoming_parcel_items, external: "false"}, class: "btn", remote: true, data: {update: '#items', update_at: 'bottom', with: "##{id}"})

  :ruby
    # Trick to force form as multipart...
    # TODO: find a better way to force multipart
    f.input :mode, as: :file

#items.subforms
  = f.backend_fields_for(:items) do |i|
    = render "backend/incoming_parcel_items/form", f: i
