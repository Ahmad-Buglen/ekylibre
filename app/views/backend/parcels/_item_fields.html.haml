- item ||= f.object
%tr.nested-fields.delivery-item.outgoing-parcel-item
  %td.act
    - if f.object.destroyable?
      = link_to_remove_association(content_tag(:i) + h(:destroy.tl), f, 'data-no-turbolink' => true, class: 'destroy remove remove-item')
  %td
    - scopes = {deliverables: true}
    - scopes[:of_variant] = item.variant if item.variant && item.source_product.blank?
    = f.referenced_association(:source_product, wrapper: :nested, source: {controller: 'backend/matters', scope: scopes}, input_html: {data: {product_of_delivery_item: {url: backend_product_path("RECORD_ID", format: :json)}}}, hint: content_tag(:span, item.variant ? item.variant.name : nil, class: 'item-variant-name'))
  -# %td= f.input :parted, wrapper: :nested, input_html: {class: "item-parted"}
  %td
    .item-quantifier
      .item-quantifier-population
        :ruby
          hint = :x_unit.tl(quantity: "[QTY]", unit: "[UNT]")
            .gsub("[QTY]", content_tag(:span, item.source_product ? item.source_product.population : '&ndash;'.html_safe, class: "item-population-total"))
            .gsub("[UNT]", content_tag(:span, h(item.variant ? item.variant.unit_name : '#'), class: "item-population-unit-name").html_safe)
        = f.input :population, wrapper: :nested_append, hint: hint.html_safe do
          = f.input_field :population, class: "item-population", placeholder: (item.source_product ? item.source_product.population.to_s : nil)
          %span.add-on.item-population-unit-name= item.variant ? item.variant.unit_name : '#'
    -# .errors= item.errors.inspect
  %td= f.referenced_association(:analysis, wrapper: :nested)
