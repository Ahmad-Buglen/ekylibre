= field_set do
  = f.input :name
  = f.association :activity, as: :hidden
  = f.association :activity, disabled: true
  = f.association :campaign, as: :hidden
  = f.association :campaign, disabled: true
  - if variety = f.object.activity.cultivation_variety
    = f.referenced_association :cultivation_variant, source: {scope: {of_variety: variety}}
  - if variety = f.object.activity.support_variety
    = f.referenced_association :support_variant, source: {scope: {of_variety: variety}}
    .with-supports= f.variant_quantifier_of :support_variant
  = f.input :started_at
  = f.input :stopped_at
  = f.input :irrigated
  = f.input :nitrate_fixing
  = f.custom_fields

:ruby
  currency = Nomen::Currencies[Preference[:currency]]
  currency_symbol = currency.symbol || currency.name
  precision = currency.precision

- if f.object.activity and f.object.auxiliary?
  :ruby
    unless f.object.distributions.any?
      f.object.activity_distributions.each do |distribution|
        if production = Production.find_by(activity_id: distribution.main_activity_id, campaign_id: f.object.campaign_id)
          f.object.distributions.build(affectation_percentage: distribution.affectation_percentage, main_production_id: production.id)
        end
      end
    end
  = field_set(Production.human_attribute_name(:distributions)) do
    = f.nested_association(:distributions, locals: {campaign: f.object.campaign})

.with-supports
  = field_set(Production.human_attribute_name(:supports)) do
    = render "supports_form", f: f

= field_set(Production.human_attribute_name(:budget)) do
  .items.budgets
    %table.table
      %thead
        %tr
          %th= ProductionBudget.human_attribute_name(:variant)
          %th= ProductionBudget.human_attribute_name(:quantity)
          %th= ProductionBudget.human_attribute_name(:computation_method)
          %th= ProductionBudget.human_attribute_name(:unit_price)
          %th= ProductionBudget.human_attribute_name(:amount)
          %th.with-some-supports
            %span= ProductionBudget.human_attribute_name(:amount)
            %span= "/"
            - unit = Nomen::Units[f.object.support_variant_unit]
            %span.working-unit= (unit ? unit.symbol : "?")
          %th
      %tfoot
        %tr.total
          %th{colspan: 4}= :gross_profit.tl
          %td{data: {check_positive: ".amount"}}
            %span.amount{data: {difference: "#revenues-amount - #expenses-amount", calculate_round: precision}}
            %span.currency= currency_symbol
          %td.with-some-supports{data: {check_positive: ".amount"}}
            %span.amount{data: {difference: "#revenues-amount-per-working-unit - #expenses-amount-per-working-unit", calculate_round: precision}}
            %span.currency= currency_symbol
          %th
      %tbody
        = render "budgets_form", direction: :expense, f: f, currency_symbol: currency_symbol, currency: currency
        = render "budgets_form", direction: :revenue, f: f, currency_symbol: currency_symbol, currency: currency
