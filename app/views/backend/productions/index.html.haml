= kujaku do |k|
  - k.helper do
    %label= Production.human_attribute_name(:campaign)
    = select_tag(:campaign_id, options_for_select(Campaign.order(harvest_year: :desc).collect{|u| [u.name, u.id]}, campaign.id))
  - k.text
  - k.helper do
    %label= Production.human_attribute_name(:variant)
    = select_tag(:cultivation_variant_id, options_for_select([[]] + ProductNatureVariant.where(id: Production.pluck(:cultivation_variant_id)).order(:name).collect{|u| [u.name, u.id]}, params[:cultivation_variant_id]))

:ruby
  data = []
  ProductionSupport.of_campaign(campaign).includes({production: [:activity, :campaign, :cultivation_variant]}, :storage).find_each do |support|

    popup_content = []

    # for support
    popup_content << {label: Campaign.model_name.human, value: support.campaign_name}
    popup_content << {label: Activity.model_name.human, value: support.activity_name}
    popup_content << {label: Production.model_name.human, value: link_to(support.production_name, backend_production_path(support.production))}
    popup_content << {label: ProductionSupport.model_name.human, value: link_to(support.name, backend_production_support_path(support))}

    if support.storage
      popup_content << {label: CultivableZone.human_attribute_name(:net_surface_area), value: support.storage_net_surface_area.in_hectare.round(2).l}
    end

    if interventions = Intervention.where(production_support: support).reorder(:started_at)
      popup_content << {label: :interventions_count.tl, value: interventions.count }
    end

    if interventions.any? and last_intervention = interventions.last
      popup_content << {label: :last_intervention.tl, value: link_to( "NÂ°" + last_intervention.number, backend_intervention_path(last_intervention)) }
    end

    popup_content << render('popup', support: support)

    item = {
      name:       support.name,
      shape:      support.shape,
      campaign:   support.campaign_name,
      activity:   support.activity_name,
      production: support.production_name,
      #variant:    support.production_variant.name,
      interventions_count: interventions.count,
      popup: {header: true, content: popup_content}
    }
    data << item
  end

- if campaign.opened?
  - main_toolbar do |t|
    - t.new variants: Activity.availables.reorder(:name).to_a.inject({}){|h,n| h[:new_production_of_activity.tl(activity: n.name)] = {activity_id: n.id, campaign_id: params[:campaign_id]}; h}

= janus do |j|
  - if data.any?
    - j.face :map do
      = visualization do |v|
        - v.serie :main, data
        - v.background "Esri.WorldImagery"
        - v.background "OpenStreetMap.HOT"
        - v.background "OpenStreetMap.Mapnik"
        - v.background "Thunderforest.Landscape"
        - v.choropleth :interventions_count, :main
        - v.categories :activity, :main
        - v.control :zoom
        - v.control :scale
        - v.control :fullscreen
        - v.control :layer_selector

  - j.face :list do
    = main_list
