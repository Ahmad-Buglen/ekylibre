= main_toolbar do |t|
  - t.edit @production

= beehive do |b|
  - b.cell do
    = attributes_list do |l|
      - l.attribute :name
      - l.attribute :variant
      - l.attribute :started_at
      - l.attribute :state
      - l.attribute :campaign
      - l.attribute :activity

  - b.hbox do
    - if Nomen::Varieties[@production.variant.variety].self_and_parents.include?(Nomen::Varieties[:milk])
      - b.cell :last_milk_result, params: {campaign_id: @production.campaign_id}

    - elsif Nomen::Varieties[@production.variant.variety].self_and_parents.include?(Nomen::Varieties[:plant])
      - b.cell :map do
        %svg{:xmlns => "http://www.w3.org/2000/svg", :version => "1.1", :class => :map, :viewBox => CultivableZone.of_production(@production).shape_view_box.join(" "), :preserveAspectRatio => "xMidYMid meet", :width => "100%", :height => "400px", "xmlns:xlink" => "http://www.w3.org/1999/xlink"}
          -CultivableZone.of_production(@production).find_each do |cultivable_zone|
            %a{'xlink:href' => backend_cultivable_zone_path(cultivable_zone)}
              %path{:d => cultivable_zone.shape_as_svg, :title => cultivable_zone.name }

      - b.cell :cropping_plan_chart do
        - if @production.supports.count > 0
          :ruby

            cultivable_zones = CultivableZone.of_production(@production).order(:id)

            if cultivable_zones.count > 0
              cultivable_zones_serie = cultivable_zones.collect do |cultivable_zone|
                        { name: cultivable_zone.name, y: cultivable_zone.area.to_s.to_f, color: cycle(*Backend::ChartsHelper::COLORS), url: backend_cultivable_zone_path(cultivable_zone) }
              end
            end

            series = []
            series << {name: CultivableZone.model_name.human, data: cultivable_zones_serie, size: "80%"}

          = pie_chart(series, tooltip: {point_format: '{point.y: 1.3f} Ha'}, title: {text: (@production.area.in_hectare.round(3)).to_s}, plot_options: { pie: { allow_point_select: true, cursor: 'pointer', show_in_legend: true}}, legend: {})
        - else
          = no_data
      - b.cell(:supports) do
        = list(:supports)

  - b.hbox do
    - b.cell(:interventions) do
      = list(:interventions)
    -#  b.cell(:markers) do
      = list(:markers)