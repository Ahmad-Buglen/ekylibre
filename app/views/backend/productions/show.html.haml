- main_toolbar do |t|
  - t.edit resource

= beehive do |b|
  -# b.hbox do
    -# b.cell do
      = attributes_list do |l|
        - l.attribute :name
        - l.attribute :variant
        - l.attribute :started_at
        - l.attribute :state
        - l.attribute :campaign
        - l.attribute :activity
  - b.cell do
    .big-infos.costs
      .big-info.cost.important
        - $total = 0
        - for type in [:input, :tool, :doer]
          - cost = (resource.cost(type) || 0.0).round.to_i
          - $total += cost
        %span.title= "total_cost".tl
        %span.value= $total.l(currency: Preference[:currency])
      - if resource.net_surface_area.to_d(:hectare) > 0.0
        .big-info.cost.important
          %span.title= "total_cost_per_area".tl
          %span.value
            %i.picto{class: "picto-land-parcels"}
            = ($total / (resource.net_surface_area.to_d(:hectare))).round(2).l(currency: Preference[:currency]) + " / Ha"


  - b.hbox do
    - if Nomen::Varieties[resource.variant.variety].self_and_parents.include?(Nomen::Varieties[:milk])
      - b.cell :last_analyses, params: {campaign_id: resource.campaign_id}
    - elsif Nomen::Varieties[resource.variant.variety].self_and_parents.include?(Nomen::Varieties[:equipment])
      - b.cell(:supports) do
        = list(:supports)
    - elsif Nomen::Varieties[resource.variant.variety].self_and_parents.include?(Nomen::Varieties[:organic_matter])
      - b.cell :map do
        = map(BuildingDivision.of_production(resource))
      - b.cell :map do
        = map(Equipment.of_production(resource))
      - b.cell(:supports) do
        = list(:supports)
    - elsif Nomen::Varieties[resource.variant.variety].self_and_parents.include?(Nomen::Varieties[:animal])
      - b.cell :map do
        = map(BuildingDivision.of_production(resource))
      - b.cell :map do
        = map(CultivableZone.of_production(resource))
      - b.cell(:supports) do
        = list(:supports)
    - elsif Nomen::Varieties[resource.variant.variety].self_and_parents.include?(Nomen::Varieties[:plant])
      - b.cell :map do
        = map(CultivableZone.of_production(resource))
      - b.cell :cropping_plan_chart do
        - if resource.supports.any?
          :ruby

            cultivable_zones = CultivableZone.of_production(resource).order(:id)

            if cultivable_zones.any?
              cultivable_zones_serie = cultivable_zones.collect do |cultivable_zone|
                        { name: cultivable_zone.name, y: cultivable_zone.area.to_s.to_f, color: cycle(*theme_colors), url: backend_cultivable_zone_path(cultivable_zone) }
              end
            end

            series = []
            series << {name: CultivableZone.model_name.human, data: cultivable_zones_serie, size: "80%"}

          = pie_chart(series, tooltip: {point_format: '{point.y: 1.3f} Ha'}, title: {text: (resource.area.in_hectare.round(3)).to_s}, plot_options: { pie: { allow_point_select: true, cursor: 'pointer', show_in_legend: true}}, legend: true)
        - else
          = no_data
      - b.cell(:supports) do
        = list(:supports)

  - b.hbox do
    - b.cell(:interventions) do
      = list(:interventions)
    
    
    -#b.cell(:markers) do
      = list(:markers)
