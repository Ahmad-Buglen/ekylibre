%h1= "Map test"

-# = backend_form_for(@cast) do |f|
  = f.shape



#map{style: "height: 400px"}



:javascript
  $(document).ready(function () {
    $('input[data-map="wkt"]').each(function () {
      var input = $(this), map, wkt = new Wkt.Wkt(), geometry, obj;
      input.attr('type', 'hidden');
      map = $('<div class="map"></div>');
      map.height("400px");
      input.after(map);
      // map.html(input.val());
      geometry = wkt.read(input.val());
      map = L.map(map[0]).fitBounds(wkt.toObject().getBounds());
      L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
      }).addTo(map);
    });
  });


  var map = L.map('map').setView(#{[@coordinates.latitude, @coordinates.longitude].inspect}, 18);

  // add an OpenStreetMap tile layer
  L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
    attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
  }).addTo(map);

  // Initialize the FeatureGroup to store editable layers
  var drawnItems = new L.FeatureGroup();
  map.addLayer(drawnItems);

  var zone = L.polygon(#{@points.inspect}).addTo(drawnItems);

  // Initialize the draw control and pass it the FeatureGroup of editable layers
  var drawControl = new L.Control.Draw({
    edit: {
      featureGroup: drawnItems
    }
  });

  map.on('draw:edited', function(e) {
    var layers = e.layers;
    $('#shape').val(JSON.stringify(layers.toGeoJSON()));
  });

  map.addControl(drawControl);

= text_field_tag("shape")