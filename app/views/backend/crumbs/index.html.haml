- if @worked_on
  :ruby
    # array of crumbs ready to be managed by VisualizationHelper
    crumbs = []
    interventions_paths = current_user.interventions_paths(on: @worked_on)
    for intervention_path in interventions_paths
      name = intervention_path.human_name
      intervention_path.each do |crumb|
        popup_content = []
        popup_content << {label: Crumb.human_attribute_name(:nature), value: crumb.nature }
        popup_content << {label: Crumb.human_attribute_name(:read_at), value: crumb.read_at.l }
        popup_content << render('form', crumb: crumb)
        crumbs << {
          name:         name,
          shape:        crumb.geolocation,
          popup:        {content: popup_content},
          read_at:      crumb.read_at,
          nature:       crumb.nature,
          started_at:   intervention_path.started_at,
          stopped_at:   intervention_path.stopped_at,
          crumb_id:     crumb.id
        }
      end
    end

    supports = []
    if interventions_paths.any?
      supports = Crumb.production_supports(interventions_paths.map(&:to_a).flatten).collect do |support|
        {activity: support.activity_name, shape: (support.shape ? support.shape_to_ewkt : nil)}
      end
    end

  = kujaku do |k|
    - k.select current_user.unconverted_crumb_days.collect{|d| [d.l, d]}, name: :worked_on, selected: @worked_on

  - if crumbs.any?
    = beehive do |b|
      - b.cell :map do
        = visualization do |v|
          - if supports.any?
            - v.serie :production_supports, supports
            - v.categories :activity, :production_supports
          - v.serie :crumbs, crumbs
          - v.paths :name, :crumbs, label: Intervention.model_name.human
          - v.background 'OpenStreetMap.HOT'
          - v.background 'Thunderforest.Transport'
          - v.background 'Thunderforest.Outdoors'
          - v.background 'Esri.WorldImagery'
          - v.control :zoom
          - v.control :scale
          - v.control :fullscreen
          - v.control :layer_selector

      -# b.cell :interventions_paths do # TODO: implement slider
        = render 'time_slider', crumbs: crumbs
      - for intervention_path in interventions_paths
        - b.cell intervention_path.human_name do
          = render 'intervention', path: intervention_path
- else
  = :no_crumbs_to_check.tl
