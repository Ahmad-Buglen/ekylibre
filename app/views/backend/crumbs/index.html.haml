:ruby
  crumbs_data = []
  Crumb.find_each do |crumb|
      begin
        shape = Charta::Geometry.new(crumb.geolocation)
      item = {
                  name:       crumb.id,
                  accuracy:   crumb.accuracy,
                  nature:     crumb.nature,
                  shape:      shape.circle(crumb.accuracy/50000)

                }
      rescue
        item = {}
      end
    crumbs_data << item
  end

  data = []
  Crumb.match(Crumb.all, natures: ProductionSupport).each do |support|
    item =  {
              name:   support.id,
              activity: support.nature,
              shape:  support.shape

            }
    data << item
  end
  actors = []
  Crumb.all.each do |crumb|
    actors << crumb.match
  end
  actors.flatten!
  actors.uniq!
  actors.sort_by!{|a| a.name}
  actors.delete_if{|a| a.variety == 'tank'}

= beehive do |b|
  -b.cell :map do
    = visualization do |v|
      - v.serie :main, data
      - v.serie :crumbs, crumbs_data
      - v.categories :activity, :main
      - v.categories :nature, :crumbs
      - v.background 'OpenStreetMap.HOT'
      - v.background 'Thunderforest.Transport'
      - v.background 'Thunderforest.Outdoors'
      - v.control :zoom
      - v.control :scale
      - v.control :fullscreen
      - v.control :layer_selector
  - b.cell :actors do
    = render 'actors', actors: actors
  - b.cell :interventions do
    = render 'interventions', actors: actors