-# Eclated automatically (2011-06-08)
=sales_steps if params[:step]

=toolbar do |t|
  -t.update @sale if @sale.draft?
  -if @sale.can_confirm?
    -t.confirm @sale, :method=>:post, :confirm=>tc(:are_you_sure_you_want_to_confirm)
  -if @sale.can_propose?
    -t.propose_and_invoice @sale, :method=>:post, :confirm=>tc(:are_you_sure_you_want_to_invoice)
  -if @sale.can_invoice?
    -t.invoice @sale, :method=>:post, :confirm=>tc(:are_you_sure_you_want_to_invoice)
  -for event in [:propose, :correct, :refuse]
    -t.send(event, @sale, :method=>:post, :confirm=>tc(:are_you_sure)) if @sale.send("can_#{event}?")
  -t.abort(@sale, :method=>:post, :confirm=>tc(:are_you_sure)) if @sale.can_abort?
  -if @sale.invoice?
    -t.print :sales_invoice, :id=>@sale.id
    -if @sale.cancelable?
      -t.cancel @sale
  -else
    -t.print :sales_order, :id=>@sale.id

=attributes_list(@sale) do |l|
  -l.attribute :client, :label=>:label, :url=>{:controller=>:relations, :action=>:entity}
  -l.attribute :number
  -l.attribute :initial_number if @sale.invoice?
  -l.attribute :state_label
  -l.attribute :responsible, :label=>:full_name
  -l.attribute :created_on
  -l.attribute :confirmed_on
  -l.attribute :invoiced_on
  -l.attribute :origin, :url=>{:action=>:sale} if @sale.invoice? and @sale.origin
  -l.attribute :payment_delay, :label=>:name
  -l.attribute :nature
  -l.attribute :currency unless @sale.currency == @current_company.default_currency
  -l.attribute :comment unless @sale.comment.blank?
  -l.attribute :contact, :label=>:address
  -l.attribute :delivery_contact, :label=>:address
  -l.attribute :invoice_contact, :label=>:address
  -l.attribute :letter_format
  -l.attribute :journal_entry, :url=>{:action=>:journal_entry, :controller=>:accountancy}
  -if @sale.letter_format?
    -l.attribute :subject
    -l.attribute :function_title
    -l.attribute :introduction, :field=>:textarea
    -l.attribute :conclusion, :field=>:textarea


-if ["products", "summary", ""].include? params[:step].to_s
  %h2=Sale.human_attribute_name("lines")
  -@sale_line = @sale.lines.new
  -if @sale.draft?
    =toolbar do |t|
      -t.link(:sale_line_create, :sale_id=>@sale.id) 
    =render :partial=>"sale_lines/row_form"
  =list :lines
  %table.kame
    %tr.total
      %th=Sale.human_attribute_name(:pretax_amount)
      %td=number_to_management(@sale.pretax_amount)
    %tr.important.total
      %th=Sale.human_attribute_name(:amount)
      %td=number_to_management(@sale.amount)
  -if @sale.subscriptions.size>0
    %h2=tl :subscriptions
    =list :subscriptions


-if ["products", "summary", ""].include? params[:step].to_s
  %h2=tc :incoming_payments
  =toolbar do |t|
    -t.link(:incoming_payment_use_create, :expense_type=>:sale, :expense_id=>@sale.id, :controller=>:finances) unless @sale.unpaid_amount.zero?
  =list :payment_uses

      
-if ["deliveries", ""].include? params[:step].to_s
  -if @sale.deliverable?
    %h2=tc :undelivered
    =toolbar do |t|
      -t.link :outgoing_delivery_create, :sale=>@sale.id
    =list :undelivered_lines
  -if @sale.deliveries.count > 0
    %h2=Sale.human_attribute_name("deliveries")
    =list :deliveries

-if ["products", "summary", ""].include? params[:step].to_s and @sale.credits.size > 0
  %h2=tc :credits
  =list :credits

-if ["products", "summary", ""].include? params[:step].to_s
  %h2=tc :financial_state
  %table.kame
    -for k, v in @sale.stats(:with_balance=>true)
      %tr.total
        %th=tc(k)
        %td=number_to_management(v)
  
