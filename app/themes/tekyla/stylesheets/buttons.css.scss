@import "active-list.css.scss";

$buttons-names: (new create) (edit update) (destroy abort) (search) (confirm validate) (cancel) (lock) (unlock) (action reflect default) (up) (down) (left) (right) (configure) (column) (table) (duplicate) (point) (mark) (unmark) (true) (false) (page) (spreadsheet) (print) (filter) (mail) (nomail) (sort) (check) (divide) (load) (logout) (increment) (decrement) (close) (help) (merge) (spread) (rgreen) (rblue) (rblack) (nav) (general-informations) (genealogy) (group) (care) (treatment) (drug) (entity) (delay) (stock) (asset) (animal) (vegetable) (document) (movement);
$buttons-states: hover whited active disabled normal;
$buttons-radius: $default-border-radius;
$buttons-formats: ("themes/tekyla/icons-16.png" 24px "&" $buttons-radius) ("themes/tekyla/icons-12.png" 18px "&.mini" 2px) ("themes/tekyla/icons-24.png" 36px "&.large" 4px);

$passive-bg: $menu-background;
$active-bg: $base-color;

input[type="submit"], a.btn {
  cursor: pointer;
}

@mixin button-normal-state($normal) {
  font-weight: bold;
  text-decoration: none;
  border: $menu-border-width solid darken($normal, 10%);
  border-width: $menu-border-width;
  border-style: solid;
  border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);
  background: $normal;
  @include background-image(linear-gradient(lighten($normal, $default-lightness-variation), darken($normal, $default-lightness-variation)));
  @include box-shadow(0 1px 0 rgba(255, 255, 255, 0.2) inset);
  @include box-shadow(0 1px 0 rgba(255, 255, 255, 0.2) inset, 0 1px 2px rgba(0, 0, 0, 0.05));
  @include border-radius($buttons-radius);
}


@mixin button($normal, $active, $selector: '&') {
  $normal-color: darken($normal, 50%);
  $normal-shadow: lighten($normal, 20%);
  a.btn {
    #{$selector} {
      white-space: nowrap;
      margin: 0;
      color: $normal-color;
      @include button-normal-state($normal);
      @include inline-block;
      vertical-align: middle;
      span {
        margin: 0 2px;
        html[dir="ltr"] &:first-child, html[dir="rtl"] &:last-child { margin-left: 0; }
        html[dir="rtl"] &:first-child, html[dir="ltr"] &:last-child { margin-right: 0; }
      }
      &, .text {
        line-height: 1em;
        color: $normal-color;
        @include text-shadow($menu-border-width $menu-border-width 1px $normal-shadow);
      }
      .icon {
        background-repeat: no-repeat;
      }
      &:focus {
        border: $menu-border-width solid $active;
      }
      &:hover {
        @include background-image(linear-gradient(lighten($active, 8%), $active));
        position: relative;
        z-index: 2;
        &, .text {
          color: #FFF;
          @include text-shadow(0 0 1px $normal-color);
          text-decoration: none;
        }
        border-width: $menu-border-width;
      }
      &:active {
        @include background-image(linear-gradient($active, darken($active, 8%)));
        border-color: rgba(0, 0, 0, 0.25) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1);
        @include box-shadow(0 2px 2px rgba(0, 0, 0, 0.3) inset, 0 -2px 2px rgba(0, 0, 0, 0.05));
        &, .text {
          color: #FFF;
          @include text-shadow(-1px -1px 1px $normal-color);
          text-decoration: none;
        }
      }
      &[disabled] {
        background: #CCC;
        cursor: default;
        pointer-events: none;
        .text {
          @include text-shadow(none);
        }
        &:hover {
          .text { color: #666; }
        }
      }
    }
  }
  input[type="submit"] {
    #{$selector} {
      padding: 3px 6px 4px;
      color: $normal-color;
      line-height: 1em;
      @include button-normal-state($normal);
      @include inline-block;
      @include text-shadow(1px 1px 1px $normal-shadow);
      &:focus {
        border: $menu-border-width solid $active;
      }
      &:hover {
        @include text-shadow(0 0 1px $normal-color);
        @include background-image(linear-gradient(lighten($active, 8%), $active));
        color: #FFF;
        text-decoration: none;
        padding: 3px 6px 4px;
        border-width: $menu-border-width;
      }
      &:active {
        padding: 4px 6px 3px 6px;
        color: #FFF;
        border-color: rgba(0, 0, 0, 0.25) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1);
        @include background-image(linear-gradient($active, darken($active, 8%)));
        @include box-shadow(0 2px 2px rgba(0, 0, 0, 0.3) inset, 0 -2px 2px rgba(0, 0, 0, 0.05));
        @include text-shadow(-1px -1px 1px $normal-color);
        text-decoration: none;
      }
      &[disabled] {
        background: #CCC;
        cursor: default;
        pointer-events: none;
        @include text-shadow(none);
        color: #666;
      }
    }
  }
}


@include button($passive-bg, $active-bg);
@include button(#D88E68, #D88E68, "&.important");

/*@mixin button-group { */
@mixin button-group() {
  button, a.btn.large, a.btn.mini, a.btn, input, select {
    @include border-radius(0);
    margin-left: -1 * $menu-border-width;
    z-index: 1;
    &:first-child {
      margin-left: 0;
    }
    html[dir="ltr"] &:first-child, html[dir="rtl"] &:last-child {
      @include border-top-left-radius($buttons-radius);
      @include border-bottom-left-radius($buttons-radius);
    }
    html[dir="ltr"] &:last-child, html[dir="rtl"] &:first-child {
      @include border-top-right-radius($buttons-radius);
      @include border-bottom-right-radius($buttons-radius);
    }
    &:focus, &:hover, &:active {
      position: relative;
      z-index: 2;
    }
  }
}

.toolbar {
  margin: 0 0 8px 0;
  @include text-align(left);
  @include button-group;
}

@each $format in $buttons-formats {
  $i: 0;
  $format-image: nth($format, 1);
  $format-interval: nth($format, 2);
  $format-selector: nth($format, 3);
  $format-radius: nth($format, 4);
  @each $buttons in $buttons-names {
    @each $icon-name in $buttons {
      $button-name: ".#{$icon-name}";
      @if $icon-name == default {
        $button-name: "";
      }
      .btn#{$button-name}, .btn.btn-#{$icon-name} {
        #{$format-selector} {
          @include border-radius($format-radius);
          padding: ($format-interval/6) ($format-interval/4);
          .icon {
            @include inline-block;
            height: $format-interval*2/3;
            width: $format-interval*2/3;
            background: image-url($format-image) no-repeat;
            background-position: (-$format-interval*$i) (-$format-interval*4);
          }
          &:hover {
            .icon { background-position: (-$format-interval*$i) (-$format-interval*1);}
          }
          &:active {
            // padding: 5px 6px 3px 6px;
            .icon { background-position: (-$format-interval*$i) (-$format-interval*1); }
          }
          &[disabled] {
            .icon { background-position: (-$format-interval*$i) (-$format-interval*3); }
          }
        }
      }
/*
      .mn.#{$icon-name} {
        #{$format-selector} {
          .icon {
            height: $format-interval*2/3;
            width: $format-interval*2/3;
            background: image-url($format-image) no-repeat;
            background-position: (-$format-interval*$i) (-$format-interval*4);
            opacity: 0.7;
          }
          &:hover {
            .icon { opacity: 1; }
          }
          &:active {
            .icon { opacity: 0.7; background-position: (-$format-interval*$i) (-$format-interval*1); }
          }
          &[disabled] {
            .icon { opacity: 0.7; background-position: (-$format-interval*$i) (-$format-interval*3); }
          }
        }
      }
*/
    }
    $i: $i + 1;
  }
}
