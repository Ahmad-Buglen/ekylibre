// General mixin for buttons
@mixin button ($background-color: $neutral-background, $color: false, $focus-background-color: $base-color, $focus-color: false, $is-input: false) {
  @if $color == false {
    $color: visible-color($background-color);
  }
  @if $focus-background-color == false {
    $focus-background-color: $background-color;
  }
  @if $focus-color == false {
    $focus-color: visible-color($focus-background-color);
  }
  $shadow-color: shadow-color-of($color);
  $focus-shadow-color: shadow-color-of($color);
  white-space: nowrap;
  margin: 0;
  @include box-sizing(content-box);
  padding: round($fs-normal*0.20) round($fs-normal*0.35);
  height: round(1.4 * $fs-normal);
  line-height: round(1.4 * $fs-normal);
  cursor: pointer;
  text-decoration: none;
  border: $menu-border-width solid darken($background-color, 10%);
  border-width: $menu-border-width;
  border-style: solid;
  border-color: rgba(#000, 0.1) rgba(#000, 0.1) rgba(#000, 0.25);
  background: $background-color;
  @include background-image(linear-gradient(lighten($background-color, $default-lightness-variation), darken($background-color, $default-lightness-variation)));
  @include box-shadow(0 1px 0 rgba(#FFF, 0.2) inset);
  @include box-shadow(0 1px 0 rgba(#FFF, 0.2) inset, 0 1px 2px rgba(#000, 0.05));
  @include border-radius($default-border-radius);
  @include inline-block;
  @include transition-duration(0.15s);
  &, & > .text {
    vertical-align: top !important;
  }
  & > .text, & > .icon, & > i {
    margin: 0 2px;
    html[dir="ltr"] &:first-child, html[dir="rtl"] &:last-child { margin-left: 0; }
    html[dir="rtl"] &:first-child, html[dir="ltr"] &:last-child { margin-right: 0; }
  }
  &, & > .text, & > .icon, & > i {
    color: $color;
    @include text-shadow(-1px -1px 0 $shadow-color);
    @include transition-duration(0.15s);
  }
  & > .icon, & > i {
    vertical-align: top !important;
    @include is-icon(round(1.4 * $fs-normal));
    @include use-icon(cog);
    @include inline-block;
  }
  &:focus {
    outline: none;
    border: $menu-border-width solid $focus-background-color;
    @include box-shadow(0 0 round($fs-normal/2) rgba($focus-background-color, 0.5));
    z-index: 2;
  }
  &:active {
    outline: none;
    @include background-image(linear-gradient($background-color, darken($background-color, 8%)));
    border-color: rgba(#000, 0.25) rgba(#000, 0.1) rgba(#000, 0.1);
    border: $menu-border-width solid $focus-background-color;
    @include box-shadow(0 2px 3px rgba(#000, 0.3) inset, 0 -2px 2px rgba(#000, 0.05), 0 0 round($fs-normal/2) rgba($focus-background-color, 0.5));
    &, & > .text, & > .icon, & > i {
      // color: $focus-color;
      @include text-shadow(-1px -1px 1px $shadow-color);
      text-decoration: none;
    }
  }
  &[disabled] {
    background: #CCC;
    cursor: default;
    pointer-events: none;
    &, & > .text, & > .icon, & > i {
      @include text-shadow(none);
    }
    &:hover {
      &, & > .text, & > .icon, & > i { color: #666; }
    }
  }
}

$button-height: round($fs-normal*0.20) * 2 + round(1.4 * $fs-normal) + $menu-border-width * 2;


input[type="submit"], input[type="button"], input[type="reset"], input[type="search"] {
  @include button($is-input: true);
  &.important {
    @include button($background-color: $important-color, $is-input: true);
  }
}

// @include button($passive-bg, $active-bg);
// @include button(#D88E68, #D88E68, "&.important");

a.btn, button {
  @include button();
  &.important {
    @include button($background-color: $important-color);
  }

  // Defines default names
  @each $symbiol in $symbiols {
    $symbol-name: nth($symbiol, 1);
    $symbol-code: nth($symbiol, 2);
    &.btn.#{$symbol-name}, &.btn-#{$symbol-name} {
      .icon, i {
        @include icon($symbol-code);
      }
    }
  }

  // Adds synonyms
  @each $renaming in (abort trash) (cancel undo) (destroy remove) (down chevron-down) (new plus) (merge resize-small) (divide resize-full) (duplicate copy) (load refresh) (statistics bar-chart) (index print) (unvalidateds ok) (close lock) {
    &.btn-#{nth($renaming, 1)} {
      .icon, i {
        @include use-icon(nth($renaming, 2));
      }
    }
  }
  &.btn-dropdown {
    .icon, i {
      font-size: $fs-normal;
      @include use-icon(caret-down);
    }
  }

  &.btn-big {
    padding: $default-gap;
    margin: $default-gap;
    height: auto;
    text-align: center;
    @include inline-block;
    $size: 64px;
    .icon, i {
      display: block;
      font-size: $size;
      line-height: $size;
      height: $size;
      text-align: center;
      min-width: $size;
      margin: 0 0 $default-gap;
    }
    min-width: round($size * 1.7);
  }
}

