@import "compass/css3";
@import "config.css.scss";

$buttons-names: (new create) (edit update) (destroy abort) (search) (confirm validate) (cancel) (lock) (unlock) (action reflect default) (up) (down) (left) (right) (configure) (column) (table) (duplicate) (point) (mark) (unmark) (true) (false) (page) (spreadsheet) (print) (filter) (mail) (nomail) (sort) (check) (divide) (load) (logout) (increment) (decrement);
$buttons-states: hover whited active disabled normal;
$buttons-radius: 3px;
$buttons-formats: ("themes/tekyla/icons-16.png" 24px "&" $buttons-radius) ("themes/tekyla/icons-12.png" 18px "&.mini" 2px);

$passive-bg: $menu-background; /*#E5E5E5;*/
/*$active-bg: #688ED8;*/
$active-bg: $base-color;

input[type="submit"], a.btn {
  cursor: pointer;
}

@mixin button-normal-state($normal) {
  font-weight: bold;
  text-decoration: none;
  border: 1px solid darken($normal, 10%);
  border-width: 1px;
  border-style: solid;
  border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);
  background: $normal;
  @include background-image(linear-gradient(lighten($normal, 4%), darken($normal, 4%)));
  @include box-shadow(0 1px 0 rgba(255, 255, 255, 0.2) inset);
  @include box-shadow(0 1px 0 rgba(255, 255, 255, 0.2) inset, 0 1px 2px rgba(0, 0, 0, 0.05));
  @include border-radius($buttons-radius);
}


@mixin button($normal: #E5E5E5, $active: #688ED8, $selector: '&') {
  $normal-color: darken($normal, 50%);
  $normal-shadow: lighten($normal, 20%);
  a.btn {
    #{$selector} { 
      white-space: nowrap;
      margin: 0;
      padding: 4px 6px;
      color: $normal-color;
      @include button-normal-state($normal);
      @include inline-block;
      height: 16px;
      vertical-align: middle;
      span { 
        margin: 0 2px;
        html[dir="ltr"] &:first-child, html[dir="rtl"] &:last-child { margin-left: 0; }
        html[dir="rtl"] &:first-child, html[dir="ltr"] &:last-child { margin-right: 0; }
      }
      &, .text { 
        line-height: 1em;
        color: $normal-color;
        @include text-shadow(1px 1px 1px $normal-shadow);
      }
      .icon { 
        background-repeat: no-repeat; 
        width: 16px;
        height: 16px;
       // display: none;
      }
      &:focus {
        border: 1px solid $active;
      }
      &:hover {
        @include background-image(linear-gradient(lighten($active, 8%), $active));
        &, .text {
          color: #FFF; 
          @include text-shadow(0 0 1px $normal-color);
          text-decoration: none;
        }
        padding: 4px 6px;
        border-width: 1px;
      }
      &:active {
        padding: 5px 6px 3px 6px;
        @include background-image(linear-gradient($active, darken($active, 8%)));
        border-color: rgba(0, 0, 0, 0.25) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1);
        @include box-shadow(0 2px 2px rgba(0, 0, 0, 0.3) inset, 0 -2px 2px rgba(0, 0, 0, 0.05));
        &, .text {
          color: #FFF; 
          @include text-shadow(-1px -1px 1px $normal-color);
          text-decoration: none;
        }
      }
      &[disabled] {
        background: #CCC;
        cursor: default;
        pointer-events: none;
        .text { 
          @include text-shadow(none);
        }
        &:hover { 
          .text { color: #666; }
        }
      }
    }
  }
  input[type="submit"] {
    #{$selector} { 
      padding: 3px 6px 4px; 
      color: $normal-color;
      line-height: 1em;
      @include button-normal-state($normal);
      @include inline-block;
      @include text-shadow(1px 1px 1px $normal-shadow);
      &:focus { 
        border: 1px solid $active;
      }
      &:hover {
        @include text-shadow(0 0 1px $normal-color);
        @include background-image(linear-gradient(lighten($active, 8%), $active));
        color: #FFF; 
        text-decoration: none;
        padding: 3px 6px 4px; 
        border-width: 1px;
      }
      &:active {
        padding: 4px 6px 3px 6px;
        color: #FFF; 
        border-color: rgba(0, 0, 0, 0.25) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1);
        @include background-image(linear-gradient($active, darken($active, 8%)));
        @include box-shadow(0 2px 2px rgba(0, 0, 0, 0.3) inset, 0 -2px 2px rgba(0, 0, 0, 0.05));
        @include text-shadow(-1px -1px 1px $normal-color);
        text-decoration: none;
      }
      &[disabled] { 
        background: #CCC;
        cursor: default;
        pointer-events: none;
        @include text-shadow(none);
        color: #666;
      }
    }
  } 
}


@include button($passive-bg, $active-bg);
@include button(#D88E68, #D88E68, "&.important");

.toolbar { 
  margin: 0 0 8px 0;
  a.btn, input[type="submit"] { 
    @include border-radius(0);
    margin: 0 -.5px;
    html[dir="ltr"] &:first-child, html[dir="rtl"] &:last-child {
      @include border-top-left-radius($buttons-radius);
      @include border-bottom-left-radius($buttons-radius);
    }
    html[dir="ltr"] &:last-child, html[dir="rtl"] &:first-child {
      @include border-top-right-radius($buttons-radius);
      @include border-bottom-right-radius($buttons-radius);
    }
  }
}

@each $format in $buttons-formats {
  $i: 0;
  $format-image: nth($format, 1);
  $format-interval: nth($format, 2);
  $format-selector: nth($format, 3);
  $format-radius: nth($format, 4);
  @each $buttons in $buttons-names { 
    @each $button-name in $buttons { 
      @if $button-name == default { 
        $button-name: ""
      } @else { 
        $button-name: ".#{$button-name}"
      }
      .btn#{$button-name}, .mn#{$button-name} {
        #{$format-selector} {
          @include border-radius($format-radius);
          padding: ($format-interval/6) ($format-interval/4);
          .icon {
            @include inline-block;
            height: $format-interval*2/3;
            width: $format-interval*2/3;
            background: image-url($format-image) no-repeat;
            background-position: (-$format-interval*$i) (-$format-interval*4);
          }
          &:hover {
            .icon { background-position: (-$format-interval*$i) (-$format-interval*1);}
          }
          &:active {
            .icon { background-position: (-$format-interval*$i) (-$format-interval*1); }
          }
          &[disabled] {
            .icon { background-position: (-$format-interval*$i) (-$format-interval*3); }
          }
        }
      }
    }
    $i: $i + 1;
  }
}
