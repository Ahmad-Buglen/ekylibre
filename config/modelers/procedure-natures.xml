<?xml version="1.0" encoding="UTF-8"?>
<procedure-natures xmlns="http://www.ekylibre.org/XML/2013/product-natures">
  <procedure-nature name="wheat-crop">
    <name xml:lang="fra">Culture de blé annuelle</name>
    <name xml:lang="eng">Annual wheat crop</name>
    <description xml:lang="fra" source="internal">Procédure modèle permettant de décrire les opérations successives pour cultiver une sole annuelle de produit végétaux</description>
    <parameters>
      <parameter name="land_parcel" type="land-parcel" properties="producible" pre-indicators-state="production::empty">
		<name xml:lang="fra">Parcelle</name>
      </parameter>
      <parameter name="manure" type="matter" nature="manure" variety="organic-matter">
		<name xml:lang="fra">Fumier</name>
      </parameter>
      <parameter name="manure-to-spread" type="matter" nature="manure" variety="organic-matter">
		<name xml:lang="fra">Fumier à épandre</name>
      </parameter>
      <parameter name="seeds" type="matter" nature="seed" variety="wheat">
		<name xml:lang="fra">Semence</name>
      </parameter>
      <parameter name="seeds-to-sow" type="matter" nature="seed" variety="wheat">
		<name xml:lang="fra">Semence à semer</name>
      </parameter>
      <parameter name="fuel" type="matter" nature="fuel" variety="diesel">
		<name xml:lang="fra">Carburant</name>
      </parameter>
      <parameter name="fertilizer" type="matter" nature="fertilizer" variety="mineral-matter">
		<name xml:lang="fra">Engrais</name>
      </parameter>
      <parameter name="fertilizer-to-spread" type="matter" nature="fertilizer" variety="mineral-matter">
		<name xml:lang="fra">Engrais à épandre</name>
      </parameter>
      <parameter name="herbicide" type="matter" nature="phytosanitary" variety="herbicide">
		<name xml:lang="fra">Herbicide</name>
      </parameter>
      <parameter name="fungicide" type="matter" nature="phytosanitary" variety="fungicide">
		<name xml:lang="fra">Fongicide</name>
      </parameter>
      <parameter name="grains" type="matter" nature="--" variety="[seeds]">
		<name xml:lang="fra">Grain de blé</name>
      </parameter>
      <parameter name="straw" type="matter" nature="--" variety="[seeds]">
		<name xml:lang="fra">Paille de blé</name>
      </parameter>
      <parameter name="culture" type="vegetal" nature="crop" variety="vegetal">
		<name xml:lang="fra">Sole de blé</name>
      </parameter>
      <parameter name="spreader" type="equipment" abilities="normal-spreading" ><!-- paramètre réprésentant des objets qui possede la compétence "Epandre"  -->
		<name xml:lang="fra">Épandeur</name>
      </parameter>
      <parameter name="plow" type="equipment" abilities="plowing" ><!-- paramètre réprésentant des objets qui possede la compétence "Labourer"  -->
		<name xml:lang="fra">Charrue</name>
      </parameter>
      <parameter name="harrow" type="equipment" abilities="superficial-plowing" ><!-- paramètre réprésentant des objets qui possede la compétence "Travailler le sol"  -->
		<name xml:lang="fra">Herse</name>
      </parameter>
      <parameter name="seeder" type="equipment" abilities="sowing" ><!-- paramètre réprésentant des objets qui possede la compétence "Semer"  -->
		<name xml:lang="fra">Semoir</name>
      </parameter>
      <parameter name="tractor" type="equipment" abilities="tow"><!-- paramètre réprésentant des objets qui possede la compétence "Tracter"  -->
		<name xml:lang="fra">Tracteur</name>
      </parameter>
      <parameter name="driver" type="human" abilities="spread-driving,plow-driving" ><!-- paramètre réprésentant des objets de type Humain qui possede la compétence "Conduire un ensemble de semis"  -->
		<name xml:lang="fra">Conducteur de tracteur</name>
      </parameter>
    </parameters>
    <operations>
      <!-- ################## EPANDRE DU FUMIER ######################### -->
      <operation level="1" name="fertilizing" required="false" working-set="organic-fertilization">
		<operation level="2" name="transport">
			<tasks>
				<task do="[driver] moves-to [tractor]"/><!-- le chauffeur se déplace vers le tracteur et rentre dedant (?) -->
	  			<task do="[tractor] moves-to [spreader].product_localizations.current"/><!-- le chauffeur et le tracteur se déplace vers le lieu actuel de l'épandeur-->
	  			<task do="[tractor] catches [spreader]"/><!-- le chauffeur attache l'épandeur au tracteur -->
			</tasks>
		</operation>
		<operation level="2" name="loading">
			<tasks>
	  			<task do="[tractor] moves-to [manure].product_localizations.current"/><!-- le chauffeur, tracteur et épandeur se déplacent vers le lieu actuel du tas de fumier-->
	  			<task do="[manure] parts-with [manure-to-spread](quantity::?, unit::?, variety::[manure].variety)"/><!--  on sépare le fumier que l'on va mettre dans l'épandeur du tas global --> 
	  			<task do="[manure-to-spread] moves-to [spreader]"/><!-- le chauffeur charge du fumier dans l'épandeur qui est un lieu de stockage temporaire (normalement plus complexe que cela)-->
	  			<task do="[tractor] moves-to [land_parcel]"/><!-- le chauffeur + son tracteur et son épandeur chargé de fumier se déplace vers la parcelle et rentre dedant (?) -->
			</tasks>
		</operation>
	    <operation level="2" name="spreading">
			<tasks>
				<task do="[tractor] acts-on [land_parcel]"><!-- tant que le [tractor] travaille (? = sous-entendu le tracteur tourne,le conducteur roule, l'épandeur tourne) les sub-task tournent -->
					<sub-task do="[manure-to-spread] moves-to [land_parcel]"/><!-- le fumier tombe par terre car l'épandeur tourne (?) -->
					<sub-task do="[land_parcel] consumes [manure-to-spread]"/><!-- la parcelle consomme le fumier épandu -->
				</task><!-- a terme, on devrait être capable de faire IF l'épandeur est vide alors j'arrete de travailler -->
				<!-- et je retourne charger du fumier sur le tas global-->
			</tasks>
		</operation><!-- a terme, on devrait être capable de faire une boucle WHILE tant que la parcelle n'a pas eu la dose de fumier , je continue de charger et épandre  -->
      </operation>
      <!-- Journal de culture [land_parcelle]à la fin : le 01/01/2013 = Ma parcelle 1 a reçu une dose de XX Tonne de fumier -->
      <!-- Journal d'entretien [tractor] à la fin : le 01/01/2013 = Mon tracteur a travaillé pendant YY Heures pour épandre du fumier dans la parcelle 1-->
      <!-- Journal des temps de travaux [driver] à la fin : le 01/01/2013 = J'ai épandu du fumier pendant YY Heures dans la parcelle 1 -->
      <!-- ##################### LABOURER ###################### -->
      <operation name="plowing" level="1" required="true" conditions="[land_parcel].indicator(ground-appearance) == covered" working-set="soil-working">
		<operation level="2" name="transport">
			<tasks>
				<task do="[driver] moves-to [tractor]"/><!-- le chauffeur se déplace vers le tracteur et rentre dedant (?) -->
	  			<task do="[tractor] moves-to [plow].product_localizations.current"/><!-- le chauffeur et le tracteur se déplace vers le lieu actuel de la charrue-->
	  			<task do="[tractor] catches [plow]"/><!-- le chauffeur attache la charrue au tracteur -->
	  			<task do="[tractor] moves-to [land_parcel]"/><!-- le chauffeur + son tracteur et sa charrue se déplace vers la parcelle et rentre dedant (?) -->
			</tasks>
		</operation>
	    <operation level="2" name="plowing">
			<tasks>
	  			<task do="[tractor] acts-on [land_parcel]"/><!-- le tracteur et le chauffeur laboure la parcelle-->
	  			<task do="[driver] measure [land_parcel] at ground-appearance"/><!-- le chauffeur du tracteur mesure / observe l'état de la parcelle au niveau de sa surface (valeur attendue = raw)-->
			</tasks>
		</operation>
      </operation>
      <!-- ###################### HERSER ##################### -->
      <operation name="surperficial-plowing" level="1" required="true" conditions="[land_parcel].indicator(sowable) == false && [land_parcel].indicator(ground-appearance) == raw" working-set="soil-working">
		<operation level="2" name="transport">
			<tasks>
				<task do="[driver] moves-to [tractor]"/><!-- le chauffeur se déplace vers le tracteur et rentre dedant (?) -->
	  			<task do="[tractor] moves-to [harrow].product_localizations.current"/><!-- le chauffeur et le tracteur se déplace vers le lieu actuel de la herse-->
	  			<task do="[tractor] catches [harrow]"/><!-- le chauffeur attache la herse au tracteur -->
	  			<task do="[tractor] moves-to [land_parcel]"/><!-- le chauffeur + son tracteur et sa herse se déplace vers la parcelle et rentre dedant (?) -->
			</tasks>
		</operation>
	    <operation level="2" name="superficial-plowing">
			<tasks>
	  			<task do="[tractor] acts-on [land_parcel]"/><!-- le tracteur et le chauffeur herse la parcelle-->
	  			<task do="[driver] measure [land_parcel] at sowable"/><!-- le chauffeur du tracteur mesure / observe l'état de la parcelle au niveau de sa capacité à être semée (valeur attendue = true)-->
			</tasks>
		</operation>
      </operation>
	  <!-- ##################### SEMER ###################### -->
      <operation name="sowing" level="1" required="true" conditions="[land_parcel].indicator(sowable) == true && [land_parcel].indicator(production) == false" working-set="sowing">
		<operation level="2" name="transport">
			<tasks>
				<task do="[driver] moves-to [tractor]"/><!-- le chauffeur se déplace vers le tracteur et rentre dedant (?) -->
	  			<task do="[tractor] moves-to [seeder].product_localizations.current"/><!-- le chauffeur et le tracteur se déplace vers le lieu actuel du semoir-->
	  			<task do="[tractor] catches [seeder]"/><!-- le chauffeur attache le semoir au tracteur -->
			</tasks>
		</operation>
		<operation level="2" name="loading">
			<tasks>
	  			<task do="[tractor] moves-to [seeds].product_localizations.current"/><!-- le chauffeur, tracteur et le semoir se déplacent vers le lieu actuel des semences-->
	  			<task do="[seeds] parts-with [seeds-to-sow](quantity::?, unit::?, variety::[seeds].variety)"/><!--  on sépare les semences que l'on va mettre dans le semoir du stock --> 
	  			<task do="[seeds-to-sow] moves-to [seeder]"/><!-- le chauffeur charge des semences dans le semoir qui est un lieu de stockage temporaire de semences (normalement plus complexe que cela)-->
	  			<task do="[tractor] moves-to [land_parcel]"/><!-- le chauffeur + son tracteur et son semoir chargé de semences se déplace vers la parcelle et rentre dedant (?) -->
			</tasks>
		</operation>
		<operation level="2" name="sowing">
			<tasks>
				<task do="[tractor] acts-on [land_parcel]"><!-- tant que le [tractor] travaille (? = sous-entendu le tracteur tourne,le conducteur roule, le semoir sème) les sub-task tournent -->
					<sub-task do="[seeds-to-sow] moves-to [land_parcel]"/><!-- les semences tombe par terre car le semoir tourne  -->
					<sub-task do="[land_parcel] consumes [seeds-to-sow]"/><!-- la parcelle consomme les semences épandues -->
					<sub-task do="[land_parcel] produce [culture](quantity::?, unit::[land_parcel].unit, variety::[seeds-to-sow].variety)"/><!-- les semences tombées sur le sol produise une sole de blé -->
	  				<sub-task do="[driver] measure [land_parcel] at production"/><!-- le chauffeur du tracteur mesure / observe l'état de la parcelle au niveau de son passage en production (valeur attendue = true)-->
				</task><!-- a terme, on devrait être capable de faire IF le semoir est vide alors j'arrete de semer -->
				<!-- et je retourne charger des semences sur le tas global-->
			</tasks>
		</operation>
      </operation>
     <!-- #################### EPANDRE DE L'AMMONITRATE ####################### -->
      <operation name="fertilizing" level="1" required="true" working-set="mineral-fertilization">
      	<operation level="2" name="transport">
			<tasks>
				<task do="[driver] moves-to [tractor]"/><!-- le chauffeur se déplace vers le tracteur et rentre dedant (?) -->
	  			<task do="[tractor] moves-to [spreader].product_localizations.current"/><!-- le chauffeur et le tracteur se déplace vers le lieu actuel de l'épandeur-->
	  			<task do="[tractor] catches [spreader]"/><!-- le chauffeur attache l'épandeur au tracteur -->
			</tasks>
		</operation>
		<operation level="2" name="loading">
			<tasks>
	  			<task do="[tractor] moves-to [fertilizer].product_localizations.current"/><!-- le chauffeur, tracteur et épandeur se déplacent vers le lieu actuel du stock d'engrais-->
	  			<task do="[fertilizer] parts-with [fertilizer-to-spread](quantity::?, unit::?, variety::[fertilizer].variety)"/><!--  on sépare l'engrais que l'on va mettre dans l'épandeur du stock global selectionné --> 
	  			<task do="[fertilizer-to-spread] moves-to [spreader]"/><!-- le chauffeur charge de l'engrais dans l'épandeur qui est un lieu de stockage temporaire (normalement plus complexe que cela)-->
	  			<task do="[tractor] moves-to [land_parcel]"/><!-- le chauffeur + son tracteur et son épandeur chargé d'engrais se déplace vers la parcelle et rentre dedant (?) -->
			</tasks>
		</operation>
	    <operation level="2" name="spreading">
			<tasks>
				<task do="[tractor] acts-on [land_parcel]"><!-- tant que le [tractor] travaille (? = sous-entendu le tracteur tourne,le conducteur roule, l'épandeur tourne) les sub-task tournent -->
					<sub-task do="[fertilizer-to-spread] moves-to [land_parcel]"/><!-- l'engrais tombe par terre car l'épandeur tourne (?) -->
					<sub-task do="[land_parcel] consumes [fertilizer-to-spread]"/><!-- la parcelle consomme l'engrais épandu car il se dissout dans le sol -->
				<!-- le bioprocess lié doit faire l'action suivante : [culture] consumes [fertilizer] in [land_parcel] -->
				</task><!-- a terme, on devrait être capable de faire IF l'épandeur est vide alors j'arrete de travailler -->
				<!-- et je retourne charger de l'engrais sur le tas global-->
			</tasks>
		</operation><!-- a terme, on devrait être capable de faire une boucle WHILE tant que la parcelle n'a pas eu la dose d'engrais , je continue de charger et épandre  -->
      </operation>
      <!-- #################### TRAITER CHIMIQUEMENT LA CULTURE CONTRE LES MAUVAISES HERBES ####################### -->
      <operation name="treating" level="1" required="false" working-set="chemical-treatment">
	<tasks>
	  <task do="working-set moves-to [culture]"/>
	  <task do="working-set acts-on [culture]"/>
	  <task do="[culture] consumes [herbicide]"/>
	</tasks>
      </operation>
      <operation name="treating" required="false" working-set="phytosanitary-treatment">
	<tasks>
	  <task do="working-set moves-to [culture]"/>
	  <task do="working-set acts-on [culture]"/>
	  <task do="[culture] consumes [fungicide]"/>
	</tasks>
      </operation>
      <operation name="seed-harvest" required="true" working-set="harvest">
	<tasks>
	  <task do="working-set moves-to [culture]"/>
	  <task do="working-set acts-on [culture]"/>
	  <task do="[culture] produce [grains](quantity::?, unit::?, variety::[culture].variety)"/>
	  <task do="[culture] produce [straw](quantity::?, unit::?, variety::[culture].variety)"/>			
	</tasks>
      </operation>
      <operation name="seed-transport" required="true" working-set="transport">
	<tasks>
	  <task do="working-set moves-to [grains]"/>
	  <task do="working-set catches [grains]"/>
	  <task do="[grains] moves-to [l2]"/>
	</tasks>
      </operation>
    </operations>
  </procedure-nature>
</procedure-natures>
