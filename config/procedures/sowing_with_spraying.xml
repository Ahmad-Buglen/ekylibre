<?xml version="1.0"?>
<procedures xmlns="http://www.ekylibre.org/XML/2013/procedures">
  <procedure name="sowing_with_spraying" categories="planting, crop_protection" actions="sowing" optional-actions="herbicide, fungicide, insecticide, growth_regulator, molluscicide, nematicide, acaricide, bactericide, rodenticide, talpicide, corvicide, game_repellent">
    <parameters>
      <parameter name="seeds" type="input" filter="is seed and derives from plant and can grow" default-name="{{variant}} - [{{birth_day}}/{{birth_month}}/{{birth_year}}] - [{{derivative_of}}]">
        <handler indicator="net_mass" unit="kilogram" if="self.net_mass? &amp; self.net_mass(kilogram) &gt; 0" to="population" backward="value * self..net_mass(kilogram)" forward="value / self..net_mass(kilogram)"/>
        <handler indicator="mass_area_density" unit="kilogram_per_hectare" if="self.net_mass? &amp; self.net_mass(kilogram) &gt; 0 &amp; sum(land_parcel, :net_surface_area, :hectare) &gt; 0" to="population" backward="(value * self..net_mass(kilogram)) / sum(land_parcel, :net_surface_area, :hectare)" forward="(value * sum(land_parcel, :net_surface_area, :hectare)) / self..net_mass(kilogram)"/>
        <handler indicator="grains_area_density" unit="unity_per_square_meter" if="self.net_mass? &amp; self.net_mass(kilogram) &gt; 0 &amp; sum(land_parcel, :net_surface_area, :hectare) &gt; 0 &amp; self.thousand_grains_mass?" to="population" backward="(((value * self..net_mass(gram)) / sum(land_parcel, :net_surface_area, :square_meter)) * 1000) / self.thousand_grains_mass(gram)" forward="(((value * self.thousand_grains_mass(gram)) / 1000) * sum(land_parcel, :net_surface_area, :square_meter)) / self..net_mass(gram)"/>
        <handler name="grains_area_density_in_thousand_per_hectare" indicator="grains_area_density" unit="thousand_per_hectare" if="self.net_mass? &amp; self.net_mass(kilogram) &gt; 0 &amp; sum(land_parcel, :net_surface_area, :hectare) &gt; 0 &amp; self.thousand_grains_mass?" to="population" backward="(value * self..net_mass(gram)) / (sum(land_parcel, :net_surface_area, :hectare) * self.thousand_grains_mass(gram))" forward="(value * self.thousand_grains_mass(gram) * sum(land_parcel, :net_surface_area, :hectare)) / self..net_mass(gram)"/>
        <handler indicator="grains_count" unit="thousand" if="self.net_mass? &amp; self.net_mass(kilogram) &gt; 0 &amp; self.thousand_grains_mass?" to="population" backward="(value * self..net_mass(gram)) / self.thousand_grains_mass(gram)" forward="(value * self.thousand_grains_mass(gram)) / self..net_mass(gram)"/>
      </parameter>
      <parameter name="plant_medicine" type="input" filter="is preparation and can care(plant)">
        <handler indicator="net_mass" unit="kilogram" if="self.net_mass? &amp; self.net_mass(kilogram) &gt; 0" to="population" backward="value * self..net_mass(kilogram)" forward="value / self..net_mass(kilogram)"/>
        <handler indicator="mass_area_density" unit="kilogram_per_hectare" if="self.net_mass? &amp; self.net_mass(kilogram) &gt; 0 &amp; sum(land_parcel, :net_surface_area, :hectare) &gt;= 0.1" to="population" backward="(value * self..net_mass(kilogram)) / sum(land_parcel, :net_surface_area, :hectare)" forward="(value * sum(land_parcel, :net_surface_area, :hectare)) / self..net_mass(kilogram)"/>
        <handler indicator="volume_area_density" unit="liter_per_hectare" if="self.net_volume? &amp; self.net_volume(liter) &gt; 0 &amp; sum(land_parcel, :net_surface_area, :hectare) &gt;= 0.1" to="population" backward="(value * self..net_volume(liter)) / sum(land_parcel, :net_surface_area, :hectare)" forward="(value * sum(land_parcel, :net_surface_area, :hectare)) / self..net_volume(liter)"/>
      </parameter>
      <parameter name="sower" type="tool" filter="can spread(preparation) and can sow and can spray"/>
      <parameter name="driver" type="doer" filter="can drive(equipment) and can move"/>
      <parameter name="tractor" type="tool" filter="can tow(equipment) and can move"/>
      <parameter-group name="zone">
        <parameter name="land_parcel" type="target" filter="is land_parcel and has indicator shape" default-actor="storage" cardinality="1"/>
        <parameter name="cultivation" type="output" variety="derivative-of: seeds" filter="is plant" default-name="{{variant}} [{{birth_month_abbr}}. {{birth_year}}] ({{container}})" default-shape=":land_parcel" default-variant="production" cardinality="1">
          <handler indicator="shape">
            <converter to="shape" forward="intersection(value, land_parcel.shape)" backward="value"/>
            <converter to="population" forward="area(value) / self..net_surface_area(square_meter)"/>
          </handler>
        </parameter>
      </parameter-group>
    </parameters>
  </procedure>
</procedures>
