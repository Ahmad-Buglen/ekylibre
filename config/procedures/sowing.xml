<?xml version="1.0"?>
<procedures xmlns="http://www.ekylibre.org/XML/2013/procedures">
  <procedure name="sowing" natures="sowing" version="0" status="frozen">
    <variables>
      <variable name="seeds"        variety="seed" derivative-of="plant" abilities="grow"/>
      <variable name="seeds_to_sow" new="parted-from: seeds" roles="sowing-input" default-population=":seeds" default-name="{{variant}} - [{{derivative_of}}]">
	<handler indicator="population" />
        <handler indicator="net_mass"            unit="kilogram"               to="population"
                 forward="value / self..net_mass(kilogram)"
                 backward="value * self..net_mass(kilogram)"
                 /> <!-- kg    -->
        <handler indicator="mass_area_density"   unit="kilogram_per_hectare"   to="population"
                 forward="(value * cultivation.net_surface_area(hectare)) / self..net_mass(kilogram)"
                 backward="(value * self..net_mass(kilogram)) / cultivation.net_surface_area(hectare)"
                 /> <!-- kg/ha -->
        <handler indicator="grains_area_density" unit="unity_per_square_meter" to="population"
                 forward="(((value * self.thousand_grains_mass(gram)) / 1000) * cultivation.net_surface_area(square_meter)) / self..net_mass(gram)"
                 backward="(((value * self..net_mass(gram)) / cultivation.net_surface_area(square_meter)) * 1000) / self.thousand_grains_mass(gram)"
                 /> <!--  u/m² -->
        <handler indicator="grains_area_density" unit="thousand_per_hectare"   to="population"
                 forward="(value * self.thousand_grains_mass(gram) * cultivation.net_surface_area(hectare)) / self..net_mass(gram)"
                 backward="(value * self..net_mass(gram)) / (cultivation.net_surface_area(hectare) * self.thousand_grains_mass(gram))"
                 /> <!--  M/ha -->
        <handler indicator="grains_count"        unit="thousand"               to="population"
                 forward="(value * self.thousand_grains_mass(gram)) / self..net_mass(gram)"
                 backward="(value * self..net_mass(gram)) / self.thousand_grains_mass(gram)"
                 /> <!--  M    -->
      </variable>
      <variable name="sower"        abilities="sow" roles="sowing-tool"/>
      <variable name="driver"       abilities="drive(equipment), move" roles="sowing-doer"/>
      <variable name="tractor"      abilities="tow(equipment), move" roles="sowing-tool"/>
      <variable name="land_parcel"  abilities="store(plant)" roles="sowing-target" default-actor="storage"/>
      <variable name="cultivation"  variety="derivative-of: seeds" new="produced-by: land_parcel" roles="sowing-output" hidden="true" default-name="{{variant}} [{{birth_month_abbr}}. {{birth_year}}] ({{container}})" default-shape=":land_parcel" default-variant="production">
	<handler indicator="shape">
	  <converter to="shape"      forward="intersection(value, land_parcel.shape)" backward="value"/>
	  <converter to="population" forward="area(value) / cultivation..net_surface_area(square_meter)"/>
	</handler>
      </variable>
    </variables>
    <operations>
      <operation id="100" duration="4 minutes">
        <!-- le chauffeur se déplace vers le tracteur et rentre dedans (?) -->
        <task do="[driver] moves in [tractor]"/>
      </operation>
      <operation id="200" duration="4 minutes">
        <!-- le chauffeur et le tracteur se déplace vers le lieu actuel de la charrue-->
        <task do="[tractor] moves at [sower]"/>
      </operation>
      <operation id="300" duration="7 minutes">
        <!-- le chauffeur attache la charrue au tracteur -->
        <task do="[tractor] catches [sower]"/>
      </operation>
      <operation id="400" duration="4 minutes">
        <!-- le chauffeur, tracteur et le semoir se déplacent vers le lieu actuel des semences-->
        <task do="[tractor] moves at [seeds]"/>
      </operation>
      <operation id="500" duration="4 minutes">
        <!--  on sépare les semences que l'on va mettre dans le semoir du stock -->
        <task do="[seeds] parts with [seeds_to_sow]"/>
        <!-- le chauffeur charge des semences dans le semoir qui est un lieu de stockage temporaire de semences (normalement plus complexe que cela)-->
        <task do="[seeds_to_sow] moves in [sower]"/>
      </operation>
      <operation id="600" duration="18 minutes">
        <task do="[tractor] moves in [land_parcel]"/>
        <!-- le chauffeur + son tracteur et son semoir chargé de semences se déplace vers la parcelle et rentre dedant (?) -->
      </operation>
      <operation id="700">
        <!-- tant que le [tractor] travaille (? = sous-entendu le tracteur tourne,le conducteur roule, le semoir sème) les task tournent -->
        <task do="[seeds_to_sow] moves in [land_parcel]"/>
        <!-- les semences tombe par terre car le semoir tourne  -->
        <task do="[land_parcel] consumes [seeds_to_sow]"/>
        <!-- la parcelle consomme les semences épandues -->
        <task do="[land_parcel] produces [cultivation]"/>
        <!-- les semences tombées sur le sol produise une sole de blé -->
        <task do="cultivation is in land_parcel"/>
        <!-- le chauffeur du tracteur mesure / observe l'état de la parcelle au niveau de son passage en production (valeur attendue = true)-->
        <!-- a terme, on devrait être capable de faire IF le semoir est vide alors j'arrete de semer -->
        <!-- et je retourne charger des semences sur le tas global-->
        <!-- <task do="cultivation|shape|:land_parcel is measured"/> -->
      </operation>
      <operation id="750">
        <task do="cultivation|population|superficial_count:cultivation is measured"/>
        <task do="land_parcel|soil_cultural_state|covered is measured"/>
        <task do="cultivation|plants_density is measured"/>
      </operation>
      <operation id="800" duration="18 minutes">
        <task do="[tractor] moves in default storage of [sower]"/>
      </operation>
      <operation id="900" duration="4 minutes">
        <task do="[tractor] releases [sower]"/>
      </operation>
      <operation id="1000" duration="7 minutes">
        <task do="[tractor] moves in default storage"/>
      </operation>
      <operation id="1100" duration="4 minutes">
        <task do="[driver] moves in default storage"/>
      </operation>
    </operations>
  </procedure>
</procedures>
