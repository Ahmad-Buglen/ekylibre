#!/usr/bin/ruby

# #!/bin/sh

# # controller=$1
# old=$1
# new=$2

# replace () {
#     for file in `ls $1`
#     do rm -f $file.tmp
# 	sed -r 's/'"$2"'/'"$3"'/g' < $file > $file.tmp
# 	mv $file.tmp $file
#     done
# }

# move () {
#     if [ -e $1 ]; then
# 	for file in `ls $1`
# 	do svn mv --force $file $2
# 	done
#     fi
# }

# rename() {
#     controller=$1
#     old=$2
#     new=$3
#     replace "app/controllers/${controller}_controller.rb" "def ${old}(\W|$)" "def ${new}\1"
#     replace "app/controllers/*.rb" ":${old}(\W|$)" ":${new}\1"
#     replace "app/views/*/*.haml" ":${old}(\W|$)" ":${new}\1"
#     replace "app/helpers/*.rb" ":${old}(\W|$)" ":${new}\1"
#     replace "config/locales/*/*.yml" "(\W|^)${old}:" "\1${new}:"
#     replace "config/rights.yml" " ${old}" " ${new}"
#     replace "config/rights.yml" "::${old}" "::${new}"
#     move "app/views/$controller/$old.html.haml" "app/views/$controller/$new.html.haml"
#     move "app/views/$controller/$old.rjs" "app/views/$controller/$new.rjs"
#     move "config/locales/fra/help/$controller-$old.txt" "config/locales/fra/help/$controller-$new.txt"
#     move "config/locales/eng/help/$controller-$old.txt" "config/locales/fra/help/$controller-$new.txt"
#     move "config/locales/spa/help/$controller-$old.txt" "config/locales/fra/help/$controller-$new.txt"
#     move "config/locales/jpn/help/$controller-$old.txt" "config/locales/fra/help/$controller-$new.txt"
# }



# # replace "app/views/*/*.haml" "- form_" "=form_"
# # replace "app/views/*/*.haml" "-form_" "=form_"
# # replace "app/views/*/*.haml" "human_name" "model_name.human"
# # replace "app/models/*.rb" "def clean" "def prepare"
# #svn mv --force app/models/${old}.rb app/models/${new}.rb
# #svn mv --force test/unit/${old}_test.rb test/unit/${new}_test.rb
# #svn mv --force test/fixtures/${old}s.yml test/fixtures/${new}s.yml
# replace "app/views/*/*.haml" "${old}" "${new}"
# # replace "app/controllers/*.rb" "${old}" "${new}"
# # replace "app/helpers/*.rb" "${old}" "${new}"
# replace "app/models/*.rb" "${old}" "${new}"
# # replace "app/mailers/*.rb" "${old}" "${new}"
# # replace "config/locales/*/*.yml" "${old}" "${new}"
# # replace "test/unit/*.rb" "${old}" "${new}"
# # replace "test/fixtures/*.yml" "${old}" "${new}"
# # replace "config/rights.yml" "${old}" "${new}"
# # replace "config/preferences.csv" "${old}" "${new}"
# # replace "lib/ekylibre/models.rb" "${old}" "${new}"
# # replace "db/migrate/*.rb" "${old}" "${new}"


# #!/usr/bin/ruby
# controller = "management"

# def rename_table(controller, old, new)
#   # puts [old, new].inspect
#   cmds = [
#           #"svn mv --force config/locales/fra/help/#{controller}-#{old.pluralize}.txt config/locales/fra/help/#{controller}-#{new.pluralize}.txt",
#           #"svn mv --force app/views/#{controller}/_#{old}_form.html.haml app/views/#{controller}/_#{new}_form.html.haml",
#           #"svn mv --force app/views/#{controller}/#{old}.html.haml app/views/#{controller}/#{new}.html.haml",
#           #"svn mv --force app/views/#{controller}/#{old.pluralize}.html.haml app/views/#{controller}/#{new.pluralize}.html.haml",
#           #"svn mv --force test/fixtures/#{old.pluralize}.yml test/fixtures/#{new.pluralize}.yml",
#           #"svn mv --force test/unit/#{old}_test.rb test/unit/#{new}_test.rb",
#           "svn mv --force app/models/#{old}.rb app/models/#{new}.rb"
#          ]
#   for cmd in cmds
#     puts cmd
#     puts `#{cmd}`
#   end
# end


# class ::String
#   def singularize
#     if self[-3..-1] == "ies"
#       self.gsub(/ies$/, "y") 
#     else
#       self.gsub(/s$/, "")
#     end
#   end

#   def pluralize
#     if self[-1..-1] == "y"
#       self.gsub(/y$/, "ies") 
#     else
#       self.gsub(/$/, "s")
#     end
#   end
# end



# TABLES_UPDATES = {
#     :sale_payments           => :incoming_payments,
#     :sale_payment_modes      => :incoming_payment_modes,
#     :sale_payment_parts      => :incoming_payment_uses,
#     :purchase_payments       => :outgoing_payments,
#     :purchase_payment_modes  => :outgoing_payment_modes,
#     :purchase_payment_parts  => :outgoing_payment_uses,
#     :sale_deliveries         => :outgoing_deliveries,
#     :sale_delivery_lines     => :outgoing_delivery_lines,
#     :sale_delivery_modes     => :outgoing_delivery_modes,
#     :purchase_deliveries     => :incoming_deliveries,
#     :purchase_delivery_lines => :incoming_delivery_lines,
#     :purchase_delivery_modes => :incoming_delivery_modes,
#     :sale_orders             => :sales_orders,
#     :sale_order_lines        => :sales_order_lines,
#     :sale_order_natures      => :sales_order_natures,
#     :invoices                => :sales_invoices,
#     :invoice_lines           => :sales_invoice_lines
#   }.to_a.sort{|a,b| a[0].to_s<=>b[0].to_s}

# for old, new in TABLES_UPDATES
#   rename_table controller, old.to_s.singularize, new.to_s.singularize
# end



# #!/bin/sh
# controller=$1
# old=$2
# new=$3

# replace () {
#     for file in `ls $1`
#     do rm -f $file.tmp
# 	sed 's/'"$2"'/'"$3"'/g' < $file > $file.tmp
# 	mv $file.tmp $file
#     done
# }

# #./rename_action $controller "${old}_display" "${new}"
# ./rename_action $controller "${old}_create" "${new}_create"
# ./rename_action $controller "${old}_update" "${new}_update"
# ./rename_action $controller "${old}_delete" "${new}_delete"
# ./rename_action $controller "${old}_delete" "${new}_close"
# ./rename_action $controller "${old}_print" "${new}_print"
# ./rename_action $controller "${old}_up" "${new}_up"
# ./rename_action $controller "${old}_down" "${new}_down"
# #./rename_action $controller "${old}_mail" "${new}_mail"
# #./rename_action $controller "${old}_extract" "${new}_extract"
# #./rename_action $controller "${old}_close" "${new}_close"
# #./rename_action $controller "${old}_point" "${new}_point"
# #./rename_action $controller "${old}_letter" "${new}_letter"
# ./rename_action $controller "${old}_increment" "${new}_increment"
# ./rename_action $controller "${old}_decrement" "${new}_decrement"
# ./rename_action $controller "${old}_lock" "${new}_lock"
# ./rename_action $controller "${old}_unlock" "${new}_unlock"
# svn mv --force app/views/${controller}/_${old}_form.html.haml app/views/${controller}/_${new}_form.html.haml
# svn mv --force app/views/${controller}/${old}.html.haml app/views/${controller}/${new}.html.haml
# svn mv --force app/views/${controller}/${old}s.html.haml app/views/${controller}/${new}s.html.haml
# # replace "config/locales/*/*.${controller}.yml" "_${old}_form:" "_${new}_form:"


# #!/bin/sh

# # controller=$1
# old=$1
# new=$2

# replace () {
#     for file in `ls $1`
#     do rm -f $file.tmp
# 	sed -r 's/'"$2"'/'"$3"'/g' < $file > $file.tmp
# 	mv $file.tmp $file
#     done
# }

# move () {
#     if [ -e $1 ]; then
# 	for file in `ls $1`
# 	do svn mv --force $file $2
# 	done
#     fi
# }

# rename() {
#     controller=$1
#     old=$2
#     new=$3
#     replace "app/controllers/${controller}_controller.rb" "def ${old}(\W|$)" "def ${new}\1"
#     replace "app/controllers/*.rb" ":${old}(\W|$)" ":${new}\1"
#     replace "app/views/*/*.haml" ":${old}(\W|$)" ":${new}\1"
#     replace "app/helpers/*.rb" ":${old}(\W|$)" ":${new}\1"
#     replace "config/locales/*/*.yml" "(\W|^)${old}:" "\1${new}:"
#     replace "config/rights.yml" " ${old}" " ${new}"
#     replace "config/rights.yml" "::${old}" "::${new}"
#     move "app/views/$controller/$old.html.haml" "app/views/$controller/$new.html.haml"
#     move "app/views/$controller/$old.rjs" "app/views/$controller/$new.rjs"
#     move "config/locales/fra/help/$controller-$old.txt" "config/locales/fra/help/$controller-$new.txt"
#     move "config/locales/eng/help/$controller-$old.txt" "config/locales/fra/help/$controller-$new.txt"
#     move "config/locales/spa/help/$controller-$old.txt" "config/locales/fra/help/$controller-$new.txt"
#     move "config/locales/jpn/help/$controller-$old.txt" "config/locales/fra/help/$controller-$new.txt"
# }



# # replace "app/views/*/*.haml" "- form_" "=form_"
# # replace "app/views/*/*.haml" "-form_" "=form_"
# # replace "app/views/*/*.haml" "human_name" "model_name.human"
# # replace "app/models/*.rb" "def clean" "def prepare"
# #svn mv --force app/models/${old}.rb app/models/${new}.rb
# #svn mv --force test/unit/${old}_test.rb test/unit/${new}_test.rb
# #svn mv --force test/fixtures/${old}s.yml test/fixtures/${new}s.yml
# replace "app/views/*/*.haml" "${old}" "${new}"
# replace "app/controllers/*.rb" "${old}" "${new}"
# replace "app/helpers/*.rb" "${old}" "${new}"
# replace "app/models/*.rb" "${old}" "${new}"
# replace "app/mailers/*.rb" "${old}" "${new}"
# replace "config/locales/*/*.yml" "${old}" "${new}"
# replace "config/preferences.csv" "${old}" "${new}"
# replace "config/rights.yml" "${old}" "${new}"
# replace "lib/models.rb" "${old}" "${new}"
# replace "test/unit/*.rb" "${old}" "${new}"
# replace "test/fixtures/*.yml" "${old}" "${new}"
# # replace "db/migrate/*.rb" "${old}" "${new}"



# #!/bin/sh

# controller=$1
# old=$2
# new=$3


# replace () {
#     for file in `ls $1`
#     do rm -f $file.tmp
# 	sed -r 's/'"$2"'/'"$3"'/g' < $file > $file.tmp
# 	mv $file.tmp $file
#     done
# }

# move () {
#     if [ -e $1 ]; then
# 	for file in `ls $1`
# 	do svn mv --force $file $2
# 	done
#     fi
# }

# rename() {
#     controller=$1
#     old=$2
#     new=$3
#     replace "app/controllers/${controller}_controller.rb" "def ${old}(\W|$)" "def ${new}\1"
#     replace "app/controllers/*.rb" ":${old}(\W|$)" ":${new}\1"
#     replace "app/views/*/*.haml" ":${old}(\W|$)" ":${new}\1"
#     replace "app/helpers/*.rb" ":${old}(\W|$)" ":${new}\1"
#     replace "config/locales/*/*.yml" "(\W|^)${old}:" "\1${new}:"
#     replace "config/rights.yml" " ${old}" " ${new}"
#     replace "config/rights.yml" "::${old}" "::${new}"
#     move "app/views/$controller/$old.html.haml" "app/views/$controller/$new.html.haml"
#     move "app/views/$controller/$old.rjs" "app/views/$controller/$new.rjs"
#     move "config/locales/fra/help/$controller-$old.txt" "config/locales/fra/help/$controller-$new.txt"
#     move "config/locales/eng/help/$controller-$old.txt" "config/locales/fra/help/$controller-$new.txt"
#     move "config/locales/spa/help/$controller-$old.txt" "config/locales/fra/help/$controller-$new.txt"
#     move "config/locales/jpn/help/$controller-$old.txt" "config/locales/fra/help/$controller-$new.txt"
# }

# replace "app/models/*.rb" "def validate" "def check"


# #!/bin/sh

# controller=$1
# old=$2
# new=$3


# replace () {
#     for file in `ls $1`
#     do rm -f $file.tmp
# 	sed -r 's/'"$2"'/'"$3"'/g' < $file > $file.tmp
# 	mv $file.tmp $file
#     done
# }

# move () {
#     if [ -e $1 ]; then
# 	for file in `ls $1`
# 	do svn mv --force $file $2
# 	done
#     fi
# }

# rename() {
#     controller=$1
#     old=$2
#     new=$3
#     replace "app/controllers/${controller}_controller.rb" "def ${old}(\W|$)" "def ${new}\1"
#     replace "app/controllers/*.rb" ":${old}(\W|$)" ":${new}\1"
#     replace "app/views/*/*.haml" ":${old}(\W|$)" ":${new}\1"
#     replace "app/helpers/*.rb" ":${old}(\W|$)" ":${new}\1"
#     replace "config/locales/*/*.yml" "(\W|^)${old}:" "\1${new}:"
#     replace "config/rights.yml" " ${old}" " ${new}"
#     replace "config/rights.yml" "::${old}" "::${new}"
#     move "app/views/$controller/$old.html.haml" "app/views/$controller/$new.html.haml"
#     move "app/views/$controller/$old.rjs" "app/views/$controller/$new.rjs"
#     move "config/locales/fra/help/$controller-$old.txt" "config/locales/fra/help/$controller-$new.txt"
#     move "config/locales/eng/help/$controller-$old.txt" "config/locales/fra/help/$controller-$new.txt"
#     move "config/locales/spa/help/$controller-$old.txt" "config/locales/fra/help/$controller-$new.txt"
#     move "config/locales/jpn/help/$controller-$old.txt" "config/locales/fra/help/$controller-$new.txt"
# }

# replace "app/models/*.rb" "def validate" "def check"

# #!/bin/sh

# controller=$1
# old=$2
# new=$3

# if [ -e "app/controllers/${controller}_controller.rb" ]; then
#     echo "$1: $2 -> $3"
# else
#     echo "Controller $1 is unvalid!"
#     exit
# fi

# replace () {
#     for file in `ls $1`
#     do rm -f $file.tmp
# 	sed -r 's/'"$2"'/'"$3"'/g' < $file > $file.tmp
# 	mv $file.tmp $file
#     done
# }

# move () {
#     if [ -e $1 ]; then
# 	for file in `ls $1`
# 	do svn mv --force $file $2
# 	done
#     fi
# }

# rename() {
#     controller=$1
#     old=$2
#     new=$3
#     replace "app/controllers/${controller}_controller.rb" "def ${old}(\W|$)" "def ${new}\1"
#     replace "app/controllers/*.rb" ":${old}(\W|$)" ":${new}\1"
#     replace "app/views/*/*.haml" ":${old}(\W|$)" ":${new}\1"
#     replace "app/helpers/*.rb" ":${old}(\W|$)" ":${new}\1"
#     replace "config/locales/*/*.yml" "(\W|^)${old}:" "\1${new}:"
#     replace "config/rights.yml" " ${old}" " ${new}"
#     replace "config/rights.yml" "::${old}" "::${new}"
#     move "app/views/$controller/$old.html.haml" "app/views/$controller/$new.html.haml"
#     move "app/views/$controller/$old.rjs" "app/views/$controller/$new.rjs"
#     for locale in `ls config/locales/` ; do
# 	move "config/locales/${locale}/help/$controller-$old.txt" "config/locales/${locale}/help/$controller-$new.txt"
# 	move "config/locales/${locale}/help/$controller-${old}s.txt" "config/locales/${locale}/help/$controller-${new}s.txt"
#     done
    
# }

# rename $controller $old $new
