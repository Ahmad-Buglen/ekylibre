#!/bin/sh
# postinst script for ekylibre
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
	# Install conf dir
	rm -f /usr/share/ekylibre/config/database.yml
	cp /usr/share/ekylibre/config/database.*.yml /etc/ekylibre/
	rm -f /usr/share/ekylibre/config/database.yml
	ln -s /etc/ekylibre/database.yml /usr/share/ekylibre/config/database.yml
	
	# Install log dir
	mkdir -p /var/log/ekylibre
	chown www-data:www-data /var/log/ekylibre
	rm -fr /usr/share/ekylibre/log
	ln -s /var/log/ekylibre /usr/share/ekylibre/log

	# Install private dir
	mkdir -p /var/lib/ekylibre
	chown www-data:www-data /var/lib/ekylibre
	rm -fr /usr/share/ekylibre/private
	ln -s /var/lib/ekylibre /usr/share/ekylibre/private

	# Install user
	if [ ! -e /etc/ekylibre/database.yml ]; then
	    user=ekylibre
	    dbname=${user}_production
	    password=`< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c32`

	    # Conf database
	    count=`sudo -u postgres psql -t -A -c "SELECT count(*) FROM pg_catalog.pg_user WHERE usename='${user}'"`
	    if [ "${count}" = "0" ]; then
		sudo -u postgres psql -c "CREATE USER ${user} WITH ENCRYPTED PASSWORD '${password}'"
	    else
		sudo -u postgres psql -c "ALTER USER ${user} WITH ENCRYPTED PASSWORD '${password}'"
	    fi
	    count=`sudo -u postgres psql -t -A -c "SELECT count(*) FROM pg_catalog.pg_database WHERE datname='${dbname}'"`
	    if [ "${count}" = "0" ]; then
		sudo -u postgres psql -c "CREATE DATABASE ${dbname}"		
	    fi
	    sudo -u postgres psql -c "GRANT ALL ON DATABASE ${dbname} TO ${user}"

	    # Write database conf
	    cp /etc/ekylibre/database.postgresql.yml /etc/ekylibre/database.yml
	    sed -i -e "s/__username__/${user}/g" -i -e "s/__password__/${password}\n  host: 127.0.0.1/g" /etc/ekylibre/database.yml
	fi

	cd /usr/share/ekylibre
	if [ "`gem list | grep bundler | wc -l`" = "0" ]; then
	    gem install bundler --no-ri --no-rdoc
	fi

	gem_bin_dir="`gem environment gemdir`/bin"

	# Check gems
	$gem_bin_dir/bundle install

	$gem_bin_dir/rake db:migrate RAILS_ENV=production

	# Install apache conf
	if [ ! -e /etc/apache2/conf.d/ekylibre.conf -a -e /etc/ekylibre/apache.conf ]; then
	    ln -s /etc/ekylibre/apache.conf /etc/apache2/conf.d/ekylibre.conf
	fi

	chown -R www-data:www-data /usr/share/ekylibre
	chown -R root:root /etc/ekylibre
	ln -s /usr/share/ekylibre/public /var/www/ekylibre

	invoke-rc.d apache2 reload
    ;;
    abort-upgrade|abort-remove|abort-deconfigure)
	# Nothing
    ;;
    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
