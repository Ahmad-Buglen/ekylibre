# Autogenerated from Ekylibre (`rake clean:schema` or `rake clean`)
module Ekylibre
  module Schema
    MODELS = [:account, :account_balance, :activity, :affair, :analytic_repartition, :animal, :animal_group, :animal_medicine, :area, :asset, :asset_depreciation, :bank_statement, :bioproduct, :building, :building_division, :campaign, :cash, :cash_transfer, :catalog, :catalog_price, :cultivable_zone, :cultivable_zone_membership, :custom_field, :custom_field_choice, :deposit, :deposit_item, :district, :document, :document_archive, :document_template, :easement, :entity, :entity_address, :entity_link, :equipment, :establishment, :event, :event_nature, :event_participation, :financial_year, :fungus, :gap, :immatter, :incident, :incoming_delivery, :incoming_delivery_item, :incoming_delivery_mode, :incoming_payment, :incoming_payment_mode, :intervention, :intervention_cast, :inventory, :inventory_item, :journal, :journal_entry, :journal_entry_item, :land_parcel, :land_parcel_cluster, :land_parcel_group, :legal_entity, :listing, :listing_node, :listing_node_item, :mandate, :matter, :medicine, :mineral_matter, :observation, :operation, :organic_matter, :outgoing_delivery, :outgoing_delivery_item, :outgoing_delivery_mode, :outgoing_payment, :outgoing_payment_mode, :person, :plant, :plant_medicine, :preference, :prescription, :product, :product_birth, :product_death, :product_enjoyment, :product_group, :product_indicator_datum, :product_linkage, :product_localization, :product_measurement, :product_membership, :product_nature, :product_nature_category, :product_nature_variant, :product_nature_variant_indicator_datum, :product_ownership, :product_phase, :product_process, :product_process_phase, :production, :production_support, :production_support_marker, :property_title, :purchase, :purchase_item, :purchase_nature, :role, :sale, :sale_item, :sale_nature, :sequence, :service, :settlement, :sub_zone, :subscription, :subscription_nature, :tax, :tax_declaration, :team, :tracking, :transfer, :transport, :user, :version, :worker, :zone, :zone_property_title].freeze

    TABLES = {
      account_balances: {
        account_id:        Column.new(:account_id,          :integer, references: :account, null: false).freeze,
        created_at:        Column.new(:created_at,         :datetime, null: false).freeze,
        creator_id:        Column.new(:creator_id,          :integer, references: :user).freeze,
        currency:          Column.new(:currency,             :string, null: false).freeze,
        financial_year_id: Column.new(:financial_year_id,   :integer, references: :financial_year, null: false).freeze,
        global_balance:    Column.new(:global_balance,      :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        global_count:      Column.new(:global_count,        :integer, null: false, default: 0).freeze,
        global_credit:     Column.new(:global_credit,       :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        global_debit:      Column.new(:global_debit,        :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        id:                Column.new(:id,                  :integer, null: false).freeze,
        local_balance:     Column.new(:local_balance,       :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        local_count:       Column.new(:local_count,         :integer, null: false, default: 0).freeze,
        local_credit:      Column.new(:local_credit,        :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        local_debit:       Column.new(:local_debit,         :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        lock_version:      Column.new(:lock_version,        :integer, null: false, default: 0).freeze,
        updated_at:        Column.new(:updated_at,         :datetime, null: false).freeze,
        updater_id:        Column.new(:updater_id,          :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      accounts: {
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        debtor:       Column.new(:debtor,         :boolean, null: false).freeze,
        description:  Column.new(:description,       :text).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        label:        Column.new(:label,           :string, null: false).freeze,
        last_letter:  Column.new(:last_letter,     :string, limit: 10).freeze,
        lock_version: Column.new(:lock_version,   :integer, null: false, default: 0).freeze,
        name:         Column.new(:name,            :string, limit: 200, null: false).freeze,
        number:       Column.new(:number,          :string, limit: 20, null: false).freeze,
        reconcilable: Column.new(:reconcilable,   :boolean, null: false).freeze,
        updated_at:   Column.new(:updated_at,    :datetime, null: false).freeze,
        updater_id:   Column.new(:updater_id,     :integer, references: :user).freeze,
        usages:       Column.new(:usages,            :text).freeze
      }.with_indifferent_access.freeze,
      activities: {
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        depth:        Column.new(:depth,          :integer).freeze,
        description:  Column.new(:description,     :string).freeze,
        family:       Column.new(:family,          :string).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        lft:          Column.new(:lft,            :integer).freeze,
        lock_version: Column.new(:lock_version,   :integer, null: false, default: 0).freeze,
        name:         Column.new(:name,            :string, null: false).freeze,
        nature:       Column.new(:nature,          :string, null: false).freeze,
        parent_id:    Column.new(:parent_id,      :integer, references: :activity).freeze,
        rgt:          Column.new(:rgt,            :integer).freeze,
        started_at:   Column.new(:started_at,    :datetime).freeze,
        stopped_at:   Column.new(:stopped_at,    :datetime).freeze,
        updated_at:   Column.new(:updated_at,    :datetime, null: false).freeze,
        updater_id:   Column.new(:updater_id,     :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      affairs: {
        accounted_at:     Column.new(:accounted_at,      :datetime).freeze,
        closed:           Column.new(:closed,             :boolean, null: false).freeze,
        closed_at:        Column.new(:closed_at,         :datetime).freeze,
        created_at:       Column.new(:created_at,        :datetime, null: false).freeze,
        creator_id:       Column.new(:creator_id,         :integer, references: :user).freeze,
        credit:           Column.new(:credit,             :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        currency:         Column.new(:currency,            :string, limit: 3, null: false).freeze,
        debit:            Column.new(:debit,              :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        id:               Column.new(:id,                 :integer, null: false).freeze,
        journal_entry_id: Column.new(:journal_entry_id,   :integer, references: :journal_entry).freeze,
        lock_version:     Column.new(:lock_version,       :integer, null: false, default: 0).freeze,
        third_id:         Column.new(:third_id,           :integer, references: :entity, null: false).freeze,
        updated_at:       Column.new(:updated_at,        :datetime, null: false).freeze,
        updater_id:       Column.new(:updater_id,         :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      analytic_repartitions: {
        affectation_percentage: Column.new(:affectation_percentage,   :decimal, precision: 19, scale: 4, null: false).freeze,
        affected_on:            Column.new(:affected_on,                 :date, null: false).freeze,
        created_at:             Column.new(:created_at,              :datetime, null: false).freeze,
        creator_id:             Column.new(:creator_id,               :integer, references: :user).freeze,
        id:                     Column.new(:id,                       :integer, null: false).freeze,
        journal_entry_item_id:  Column.new(:journal_entry_item_id,    :integer, references: :journal_entry_item, null: false).freeze,
        lock_version:           Column.new(:lock_version,             :integer, null: false, default: 0).freeze,
        production_id:          Column.new(:production_id,            :integer, references: :production, null: false).freeze,
        state:                  Column.new(:state,                     :string, null: false).freeze,
        updated_at:             Column.new(:updated_at,              :datetime, null: false).freeze,
        updater_id:             Column.new(:updater_id,               :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      areas: {
        city:         Column.new(:city,            :string).freeze,
        city_name:    Column.new(:city_name,       :string).freeze,
        code:         Column.new(:code,            :string).freeze,
        country:      Column.new(:country,         :string, limit: 2, null: false).freeze,
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        district_id:  Column.new(:district_id,    :integer, references: :district).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        lock_version: Column.new(:lock_version,   :integer, null: false, default: 0).freeze,
        name:         Column.new(:name,            :string, null: false).freeze,
        postcode:     Column.new(:postcode,        :string, null: false).freeze,
        updated_at:   Column.new(:updated_at,    :datetime, null: false).freeze,
        updater_id:   Column.new(:updater_id,     :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      asset_depreciations: {
        accountable:        Column.new(:accountable,          :boolean, null: false).freeze,
        accounted_at:       Column.new(:accounted_at,        :datetime).freeze,
        amount:             Column.new(:amount,               :decimal, precision: 19, scale: 4, null: false).freeze,
        asset_amount:       Column.new(:asset_amount,         :decimal, precision: 19, scale: 4).freeze,
        asset_id:           Column.new(:asset_id,             :integer, references: :asset, null: false).freeze,
        created_at:         Column.new(:created_at,          :datetime, null: false).freeze,
        created_on:         Column.new(:created_on,              :date, null: false).freeze,
        creator_id:         Column.new(:creator_id,           :integer, references: :user).freeze,
        depreciated_amount: Column.new(:depreciated_amount,   :decimal, precision: 19, scale: 4).freeze,
        financial_year_id:  Column.new(:financial_year_id,    :integer, references: :financial_year).freeze,
        id:                 Column.new(:id,                   :integer, null: false).freeze,
        journal_entry_id:   Column.new(:journal_entry_id,     :integer, references: :journal_entry).freeze,
        lock_version:       Column.new(:lock_version,         :integer, null: false, default: 0).freeze,
        locked:             Column.new(:locked,               :boolean, null: false).freeze,
        position:           Column.new(:position,             :integer).freeze,
        started_on:         Column.new(:started_on,              :date, null: false).freeze,
        stopped_on:         Column.new(:stopped_on,              :date, null: false).freeze,
        updated_at:         Column.new(:updated_at,          :datetime, null: false).freeze,
        updater_id:         Column.new(:updater_id,           :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      assets: {
        allocation_account_id:   Column.new(:allocation_account_id,     :integer, references: :account, null: false).freeze,
        ceded:                   Column.new(:ceded,                     :boolean).freeze,
        ceded_on:                Column.new(:ceded_on,                     :date).freeze,
        charges_account_id:      Column.new(:charges_account_id,        :integer, references: :account).freeze,
        created_at:              Column.new(:created_at,               :datetime, null: false).freeze,
        creator_id:              Column.new(:creator_id,                :integer, references: :user).freeze,
        currency:                Column.new(:currency,                   :string, limit: 3, null: false).freeze,
        current_amount:          Column.new(:current_amount,            :decimal, precision: 19, scale: 4).freeze,
        depreciable_amount:      Column.new(:depreciable_amount,        :decimal, precision: 19, scale: 4, null: false).freeze,
        depreciated_amount:      Column.new(:depreciated_amount,        :decimal, precision: 19, scale: 4, null: false).freeze,
        depreciation_method:     Column.new(:depreciation_method,        :string, null: false).freeze,
        depreciation_percentage: Column.new(:depreciation_percentage,   :decimal, precision: 19, scale: 4).freeze,
        description:             Column.new(:description,                  :text).freeze,
        id:                      Column.new(:id,                        :integer, null: false).freeze,
        journal_id:              Column.new(:journal_id,                :integer, references: :journal, null: false).freeze,
        lock_version:            Column.new(:lock_version,              :integer, null: false, default: 0).freeze,
        name:                    Column.new(:name,                       :string, null: false).freeze,
        number:                  Column.new(:number,                     :string, null: false).freeze,
        purchase_amount:         Column.new(:purchase_amount,           :decimal, precision: 19, scale: 4).freeze,
        purchase_id:             Column.new(:purchase_id,               :integer, references: :purchase).freeze,
        purchase_item_id:        Column.new(:purchase_item_id,          :integer, references: :purchase_item).freeze,
        purchased_on:            Column.new(:purchased_on,                 :date).freeze,
        sale_id:                 Column.new(:sale_id,                   :integer, references: :sale).freeze,
        sale_item_id:            Column.new(:sale_item_id,              :integer, references: :sale_item).freeze,
        started_on:              Column.new(:started_on,                   :date, null: false).freeze,
        stopped_on:              Column.new(:stopped_on,                   :date, null: false).freeze,
        updated_at:              Column.new(:updated_at,               :datetime, null: false).freeze,
        updater_id:              Column.new(:updater_id,                :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      bank_statements: {
        cash_id:      Column.new(:cash_id,        :integer, references: :cash, null: false).freeze,
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        credit:       Column.new(:credit,         :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        currency:     Column.new(:currency,        :string, limit: 3, null: false).freeze,
        debit:        Column.new(:debit,          :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        lock_version: Column.new(:lock_version,   :integer, null: false, default: 0).freeze,
        number:       Column.new(:number,          :string, null: false).freeze,
        started_on:   Column.new(:started_on,        :date, null: false).freeze,
        stopped_on:   Column.new(:stopped_on,        :date, null: false).freeze,
        updated_at:   Column.new(:updated_at,    :datetime, null: false).freeze,
        updater_id:   Column.new(:updater_id,     :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      campaigns: {
        closed:       Column.new(:closed,         :boolean, null: false).freeze,
        closed_at:    Column.new(:closed_at,     :datetime).freeze,
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        description:  Column.new(:description,       :text).freeze,
        harvest_year: Column.new(:harvest_year,   :integer).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        lock_version: Column.new(:lock_version,   :integer, null: false, default: 0).freeze,
        name:         Column.new(:name,            :string, null: false).freeze,
        number:       Column.new(:number,          :string, limit: 60, null: false).freeze,
        updated_at:   Column.new(:updated_at,    :datetime, null: false).freeze,
        updater_id:   Column.new(:updater_id,     :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      cash_transfers: {
        accounted_at:               Column.new(:accounted_at,                :datetime).freeze,
        created_at:                 Column.new(:created_at,                  :datetime, null: false).freeze,
        creator_id:                 Column.new(:creator_id,                   :integer, references: :user).freeze,
        currency_rate:              Column.new(:currency_rate,                :decimal, precision: 19, scale: 10, null: false).freeze,
        description:                Column.new(:description,                     :text).freeze,
        emission_amount:            Column.new(:emission_amount,              :decimal, precision: 19, scale: 4, null: false).freeze,
        emission_cash_id:           Column.new(:emission_cash_id,             :integer, references: :cash, null: false).freeze,
        emission_currency:          Column.new(:emission_currency,             :string, limit: 3, null: false).freeze,
        emission_journal_entry_id:  Column.new(:emission_journal_entry_id,    :integer, references: :journal_entry).freeze,
        id:                         Column.new(:id,                           :integer, null: false).freeze,
        lock_version:               Column.new(:lock_version,                 :integer, null: false, default: 0).freeze,
        number:                     Column.new(:number,                        :string, null: false).freeze,
        reception_amount:           Column.new(:reception_amount,             :decimal, precision: 19, scale: 4, null: false).freeze,
        reception_cash_id:          Column.new(:reception_cash_id,            :integer, references: :cash, null: false).freeze,
        reception_currency:         Column.new(:reception_currency,            :string, limit: 3, null: false).freeze,
        reception_journal_entry_id: Column.new(:reception_journal_entry_id,   :integer, references: :journal_entry).freeze,
        transfered_on:              Column.new(:transfered_on,                   :date, null: false).freeze,
        updated_at:                 Column.new(:updated_at,                  :datetime, null: false).freeze,
        updater_id:                 Column.new(:updater_id,                   :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      cashes: {
        account_id:           Column.new(:account_id,             :integer, references: :account, null: false).freeze,
        bank_account_key:     Column.new(:bank_account_key,        :string).freeze,
        bank_account_number:  Column.new(:bank_account_number,     :string).freeze,
        bank_agency_address:  Column.new(:bank_agency_address,       :text).freeze,
        bank_agency_code:     Column.new(:bank_agency_code,        :string).freeze,
        bank_code:            Column.new(:bank_code,               :string).freeze,
        bank_identifier_code: Column.new(:bank_identifier_code,    :string, limit: 11).freeze,
        bank_name:            Column.new(:bank_name,               :string, limit: 50).freeze,
        country:              Column.new(:country,                 :string, limit: 2).freeze,
        created_at:           Column.new(:created_at,            :datetime, null: false).freeze,
        creator_id:           Column.new(:creator_id,             :integer, references: :user).freeze,
        currency:             Column.new(:currency,                :string, limit: 3, null: false).freeze,
        iban:                 Column.new(:iban,                    :string, limit: 34).freeze,
        id:                   Column.new(:id,                     :integer, null: false).freeze,
        journal_id:           Column.new(:journal_id,             :integer, references: :journal, null: false).freeze,
        lock_version:         Column.new(:lock_version,           :integer, null: false, default: 0).freeze,
        mode:                 Column.new(:mode,                    :string, null: false, default: "iban").freeze,
        name:                 Column.new(:name,                    :string, null: false).freeze,
        nature:               Column.new(:nature,                  :string, limit: 20, null: false, default: "bank_account").freeze,
        spaced_iban:          Column.new(:spaced_iban,             :string, limit: 42).freeze,
        updated_at:           Column.new(:updated_at,            :datetime, null: false).freeze,
        updater_id:           Column.new(:updater_id,             :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      catalog_prices: {
        all_taxes_included: Column.new(:all_taxes_included,   :boolean, null: false).freeze,
        amount:             Column.new(:amount,               :decimal, precision: 19, scale: 4, null: false).freeze,
        catalog_id:         Column.new(:catalog_id,           :integer, references: :catalog, null: false).freeze,
        created_at:         Column.new(:created_at,          :datetime, null: false).freeze,
        creator_id:         Column.new(:creator_id,           :integer, references: :user).freeze,
        currency:           Column.new(:currency,              :string, limit: 3, null: false).freeze,
        id:                 Column.new(:id,                   :integer, null: false).freeze,
        indicator_name:     Column.new(:indicator_name,        :string, limit: 120, null: false).freeze,
        lock_version:       Column.new(:lock_version,         :integer, null: false, default: 0).freeze,
        name:               Column.new(:name,                  :string, null: false).freeze,
        reference_tax_id:   Column.new(:reference_tax_id,     :integer, references: :tax).freeze,
        started_at:         Column.new(:started_at,          :datetime).freeze,
        stopped_at:         Column.new(:stopped_at,          :datetime).freeze,
        thread:             Column.new(:thread,                :string, limit: 20).freeze,
        updated_at:         Column.new(:updated_at,          :datetime, null: false).freeze,
        updater_id:         Column.new(:updater_id,           :integer, references: :user).freeze,
        variant_id:         Column.new(:variant_id,           :integer, references: :product_nature_variant, null: false).freeze
      }.with_indifferent_access.freeze,
      catalogs: {
        all_taxes_included: Column.new(:all_taxes_included,   :boolean, null: false).freeze,
        by_default:         Column.new(:by_default,           :boolean, null: false).freeze,
        code:               Column.new(:code,                  :string, limit: 20, null: false).freeze,
        created_at:         Column.new(:created_at,          :datetime, null: false).freeze,
        creator_id:         Column.new(:creator_id,           :integer, references: :user).freeze,
        currency:           Column.new(:currency,              :string, limit: 3, null: false).freeze,
        description:        Column.new(:description,             :text).freeze,
        id:                 Column.new(:id,                   :integer, null: false).freeze,
        lock_version:       Column.new(:lock_version,         :integer, null: false, default: 0).freeze,
        name:               Column.new(:name,                  :string, null: false).freeze,
        updated_at:         Column.new(:updated_at,          :datetime, null: false).freeze,
        updater_id:         Column.new(:updater_id,           :integer, references: :user).freeze,
        usage:              Column.new(:usage,                 :string, limit: 20, null: false).freeze
      }.with_indifferent_access.freeze,
      cultivable_zone_memberships: {
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        group_id:     Column.new(:group_id,       :integer, references: :cultivable_zone, null: false).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        lock_version: Column.new(:lock_version,   :integer, null: false, default: 0).freeze,
        member_id:    Column.new(:member_id,      :integer, references: :land_parcel, null: false).freeze,
        population:   Column.new(:population,     :decimal, precision: 19, scale: 4).freeze,
        shape:        Column.new(:shape,          :spatial).freeze,
        updated_at:   Column.new(:updated_at,    :datetime, null: false).freeze,
        updater_id:   Column.new(:updater_id,     :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      custom_field_choices: {
        created_at:      Column.new(:created_at,       :datetime, null: false).freeze,
        creator_id:      Column.new(:creator_id,        :integer, references: :user).freeze,
        custom_field_id: Column.new(:custom_field_id,   :integer, references: :custom_field, null: false).freeze,
        id:              Column.new(:id,                :integer, null: false).freeze,
        lock_version:    Column.new(:lock_version,      :integer, null: false, default: 0).freeze,
        name:            Column.new(:name,               :string, null: false).freeze,
        position:        Column.new(:position,          :integer).freeze,
        updated_at:      Column.new(:updated_at,       :datetime, null: false).freeze,
        updater_id:      Column.new(:updater_id,        :integer, references: :user).freeze,
        value:           Column.new(:value,              :string).freeze
      }.with_indifferent_access.freeze,
      custom_fields: {
        active:          Column.new(:active,            :boolean, null: false, default: true).freeze,
        column_name:     Column.new(:column_name,        :string, null: false).freeze,
        created_at:      Column.new(:created_at,       :datetime, null: false).freeze,
        creator_id:      Column.new(:creator_id,        :integer, references: :user).freeze,
        customized_type: Column.new(:customized_type,    :string, null: false).freeze,
        id:              Column.new(:id,                :integer, null: false).freeze,
        lock_version:    Column.new(:lock_version,      :integer, null: false, default: 0).freeze,
        maximal_length:  Column.new(:maximal_length,    :integer).freeze,
        maximal_value:   Column.new(:maximal_value,     :decimal, precision: 19, scale: 4).freeze,
        minimal_length:  Column.new(:minimal_length,    :integer).freeze,
        minimal_value:   Column.new(:minimal_value,     :decimal, precision: 19, scale: 4).freeze,
        name:            Column.new(:name,               :string, null: false).freeze,
        nature:          Column.new(:nature,             :string, limit: 20, null: false).freeze,
        position:        Column.new(:position,          :integer).freeze,
        required:        Column.new(:required,          :boolean, null: false).freeze,
        updated_at:      Column.new(:updated_at,       :datetime, null: false).freeze,
        updater_id:      Column.new(:updater_id,        :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      deposit_items: {
        amount:       Column.new(:amount,         :decimal, precision: 19, scale: 4, null: false, default: 1.0).freeze,
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        currency:     Column.new(:currency,        :string, limit: 3, null: false).freeze,
        deposit_id:   Column.new(:deposit_id,     :integer, references: :deposit, null: false).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        lock_version: Column.new(:lock_version,   :integer, null: false, default: 0).freeze,
        quantity:     Column.new(:quantity,       :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        updated_at:   Column.new(:updated_at,    :datetime, null: false).freeze,
        updater_id:   Column.new(:updater_id,     :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      deposits: {
        accounted_at:     Column.new(:accounted_at,      :datetime).freeze,
        amount:           Column.new(:amount,             :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        cash_id:          Column.new(:cash_id,            :integer, references: :cash, null: false).freeze,
        created_at:       Column.new(:created_at,        :datetime, null: false).freeze,
        created_on:       Column.new(:created_on,            :date, null: false).freeze,
        creator_id:       Column.new(:creator_id,         :integer, references: :user).freeze,
        description:      Column.new(:description,           :text).freeze,
        id:               Column.new(:id,                 :integer, null: false).freeze,
        in_cash:          Column.new(:in_cash,            :boolean, null: false).freeze,
        journal_entry_id: Column.new(:journal_entry_id,   :integer, references: :journal_entry).freeze,
        lock_version:     Column.new(:lock_version,       :integer, null: false, default: 0).freeze,
        locked:           Column.new(:locked,             :boolean, null: false).freeze,
        mode_id:          Column.new(:mode_id,            :integer, references: :incoming_payment_mode, null: false).freeze,
        number:           Column.new(:number,              :string, null: false).freeze,
        payments_count:   Column.new(:payments_count,     :integer, null: false, default: 0).freeze,
        responsible_id:   Column.new(:responsible_id,     :integer, references: :user).freeze,
        updated_at:       Column.new(:updated_at,        :datetime, null: false).freeze,
        updater_id:       Column.new(:updater_id,         :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      districts: {
        code:         Column.new(:code,            :string).freeze,
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        lock_version: Column.new(:lock_version,   :integer, null: false, default: 0).freeze,
        name:         Column.new(:name,            :string, null: false).freeze,
        updated_at:   Column.new(:updated_at,    :datetime, null: false).freeze,
        updater_id:   Column.new(:updater_id,     :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      document_archives: {
        archived_at:       Column.new(:archived_at,        :datetime, null: false).freeze,
        created_at:        Column.new(:created_at,         :datetime, null: false).freeze,
        creator_id:        Column.new(:creator_id,          :integer, references: :user).freeze,
        document_id:       Column.new(:document_id,         :integer, references: :document, null: false).freeze,
        file_content_text: Column.new(:file_content_text,      :text).freeze,
        file_content_type: Column.new(:file_content_type,    :string).freeze,
        file_file_name:    Column.new(:file_file_name,       :string).freeze,
        file_file_size:    Column.new(:file_file_size,      :integer).freeze,
        file_fingerprint:  Column.new(:file_fingerprint,     :string).freeze,
        file_pages_count:  Column.new(:file_pages_count,    :integer).freeze,
        file_updated_at:   Column.new(:file_updated_at,    :datetime).freeze,
        id:                Column.new(:id,                  :integer, null: false).freeze,
        lock_version:      Column.new(:lock_version,        :integer, null: false, default: 0).freeze,
        template_id:       Column.new(:template_id,         :integer, references: :document_template).freeze,
        updated_at:        Column.new(:updated_at,         :datetime, null: false).freeze,
        updater_id:        Column.new(:updater_id,          :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      document_templates: {
        active:       Column.new(:active,         :boolean, null: false).freeze,
        archiving:    Column.new(:archiving,       :string, limit: 60, null: false).freeze,
        by_default:   Column.new(:by_default,     :boolean, null: false).freeze,
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        formats:      Column.new(:formats,         :string).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        language:     Column.new(:language,        :string, limit: 3, null: false).freeze,
        lock_version: Column.new(:lock_version,   :integer, null: false, default: 0).freeze,
        managed:      Column.new(:managed,        :boolean, null: false).freeze,
        name:         Column.new(:name,            :string, null: false).freeze,
        nature:       Column.new(:nature,          :string, limit: 60, null: false).freeze,
        updated_at:   Column.new(:updated_at,    :datetime, null: false).freeze,
        updater_id:   Column.new(:updater_id,     :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      documents: {
        archives_count: Column.new(:archives_count,   :integer, null: false, default: 0).freeze,
        created_at:     Column.new(:created_at,      :datetime, null: false).freeze,
        creator_id:     Column.new(:creator_id,       :integer, references: :user).freeze,
        id:             Column.new(:id,               :integer, null: false).freeze,
        key:            Column.new(:key,               :string, null: false).freeze,
        lock_version:   Column.new(:lock_version,     :integer, null: false, default: 0).freeze,
        name:           Column.new(:name,              :string, null: false).freeze,
        nature:         Column.new(:nature,            :string, limit: 120, null: false).freeze,
        number:         Column.new(:number,            :string, limit: 60, null: false).freeze,
        updated_at:     Column.new(:updated_at,      :datetime, null: false).freeze,
        updater_id:     Column.new(:updater_id,       :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      entities: {
        active:                    Column.new(:active,                      :boolean, null: false, default: true).freeze,
        activity_code:             Column.new(:activity_code,                :string, limit: 30).freeze,
        authorized_payments_count: Column.new(:authorized_payments_count,   :integer).freeze,
        born_on:                   Column.new(:born_on,                        :date).freeze,
        client:                    Column.new(:client,                      :boolean, null: false).freeze,
        client_account_id:         Column.new(:client_account_id,           :integer, references: :account).freeze,
        country:                   Column.new(:country,                      :string, limit: 2).freeze,
        created_at:                Column.new(:created_at,                 :datetime, null: false).freeze,
        creator_id:                Column.new(:creator_id,                  :integer, references: :user).freeze,
        currency:                  Column.new(:currency,                     :string, null: false).freeze,
        dead_on:                   Column.new(:dead_on,                        :date).freeze,
        deliveries_conditions:     Column.new(:deliveries_conditions,        :string, limit: 60).freeze,
        description:               Column.new(:description,                    :text).freeze,
        first_met_on:              Column.new(:first_met_on,                   :date).freeze,
        first_name:                Column.new(:first_name,                   :string).freeze,
        full_name:                 Column.new(:full_name,                    :string, null: false).freeze,
        id:                        Column.new(:id,                          :integer, null: false).freeze,
        language:                  Column.new(:language,                     :string, limit: 3, null: false).freeze,
        last_name:                 Column.new(:last_name,                    :string, null: false).freeze,
        lock_version:              Column.new(:lock_version,                :integer, null: false, default: 0).freeze,
        locked:                    Column.new(:locked,                      :boolean, null: false).freeze,
        nature:                    Column.new(:nature,                       :string, null: false).freeze,
        number:                    Column.new(:number,                       :string, limit: 60).freeze,
        of_company:                Column.new(:of_company,                  :boolean, null: false).freeze,
        origin:                    Column.new(:origin,                       :string).freeze,
        picture_content_type:      Column.new(:picture_content_type,         :string).freeze,
        picture_file_name:         Column.new(:picture_file_name,            :string).freeze,
        picture_file_size:         Column.new(:picture_file_size,           :integer).freeze,
        picture_updated_at:        Column.new(:picture_updated_at,         :datetime).freeze,
        proposer_id:               Column.new(:proposer_id,                 :integer, references: :entity).freeze,
        prospect:                  Column.new(:prospect,                    :boolean, null: false).freeze,
        reminder_submissive:       Column.new(:reminder_submissive,         :boolean, null: false).freeze,
        responsible_id:            Column.new(:responsible_id,              :integer, references: :user).freeze,
        siren:                     Column.new(:siren,                        :string, limit: 9).freeze,
        supplier:                  Column.new(:supplier,                    :boolean, null: false).freeze,
        supplier_account_id:       Column.new(:supplier_account_id,         :integer, references: :account).freeze,
        transporter:               Column.new(:transporter,                 :boolean, null: false).freeze,
        type:                      Column.new(:type,                         :string).freeze,
        updated_at:                Column.new(:updated_at,                 :datetime, null: false).freeze,
        updater_id:                Column.new(:updater_id,                  :integer, references: :user).freeze,
        vat_number:                Column.new(:vat_number,                   :string, limit: 20).freeze,
        vat_subjected:             Column.new(:vat_subjected,               :boolean, null: false, default: true).freeze
      }.with_indifferent_access.freeze,
      entity_addresses: {
        by_default:       Column.new(:by_default,         :boolean, null: false).freeze,
        canal:            Column.new(:canal,               :string, limit: 20, null: false).freeze,
        coordinate:       Column.new(:coordinate,          :string, limit: 500, null: false).freeze,
        created_at:       Column.new(:created_at,        :datetime, null: false).freeze,
        creator_id:       Column.new(:creator_id,         :integer, references: :user).freeze,
        deleted_at:       Column.new(:deleted_at,        :datetime).freeze,
        entity_id:        Column.new(:entity_id,          :integer, references: :entity, null: false).freeze,
        id:               Column.new(:id,                 :integer, null: false).freeze,
        lock_version:     Column.new(:lock_version,       :integer, null: false, default: 0).freeze,
        mail_area_id:     Column.new(:mail_area_id,       :integer, references: :area).freeze,
        mail_auto_update: Column.new(:mail_auto_update,   :boolean, null: false).freeze,
        mail_country:     Column.new(:mail_country,        :string, limit: 2).freeze,
        mail_geolocation: Column.new(:mail_geolocation,   :spatial).freeze,
        mail_line_1:      Column.new(:mail_line_1,         :string).freeze,
        mail_line_2:      Column.new(:mail_line_2,         :string).freeze,
        mail_line_3:      Column.new(:mail_line_3,         :string).freeze,
        mail_line_4:      Column.new(:mail_line_4,         :string).freeze,
        mail_line_5:      Column.new(:mail_line_5,         :string).freeze,
        mail_line_6:      Column.new(:mail_line_6,         :string).freeze,
        name:             Column.new(:name,                :string).freeze,
        thread:           Column.new(:thread,              :string, limit: 10).freeze,
        updated_at:       Column.new(:updated_at,        :datetime, null: false).freeze,
        updater_id:       Column.new(:updater_id,         :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      entity_links: {
        created_at:    Column.new(:created_at,     :datetime, null: false).freeze,
        creator_id:    Column.new(:creator_id,      :integer, references: :user).freeze,
        description:   Column.new(:description,        :text).freeze,
        entity_1_id:   Column.new(:entity_1_id,     :integer, references: :entity, null: false).freeze,
        entity_1_role: Column.new(:entity_1_role,    :string, null: false).freeze,
        entity_2_id:   Column.new(:entity_2_id,     :integer, references: :entity, null: false).freeze,
        entity_2_role: Column.new(:entity_2_role,    :string, null: false).freeze,
        id:            Column.new(:id,              :integer, null: false).freeze,
        lock_version:  Column.new(:lock_version,    :integer, null: false, default: 0).freeze,
        nature:        Column.new(:nature,           :string, null: false).freeze,
        started_at:    Column.new(:started_at,     :datetime).freeze,
        stopped_at:    Column.new(:stopped_at,     :datetime).freeze,
        updated_at:    Column.new(:updated_at,     :datetime, null: false).freeze,
        updater_id:    Column.new(:updater_id,      :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      establishments: {
        code:         Column.new(:code,            :string).freeze,
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        description:  Column.new(:description,       :text).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        lock_version: Column.new(:lock_version,   :integer, null: false, default: 0).freeze,
        name:         Column.new(:name,            :string, null: false).freeze,
        updated_at:   Column.new(:updated_at,    :datetime, null: false).freeze,
        updater_id:   Column.new(:updater_id,     :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      event_natures: {
        active:       Column.new(:active,         :boolean, null: false, default: true).freeze,
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        lock_version: Column.new(:lock_version,   :integer, null: false, default: 0).freeze,
        name:         Column.new(:name,            :string, null: false).freeze,
        updated_at:   Column.new(:updated_at,    :datetime, null: false).freeze,
        updater_id:   Column.new(:updater_id,     :integer, references: :user).freeze,
        usage:        Column.new(:usage,           :string, limit: 60).freeze
      }.with_indifferent_access.freeze,
      event_participations: {
        created_at:     Column.new(:created_at,      :datetime, null: false).freeze,
        creator_id:     Column.new(:creator_id,       :integer, references: :user).freeze,
        event_id:       Column.new(:event_id,         :integer, references: :event, null: false).freeze,
        id:             Column.new(:id,               :integer, null: false).freeze,
        lock_version:   Column.new(:lock_version,     :integer, null: false, default: 0).freeze,
        participant_id: Column.new(:participant_id,   :integer, references: :entity, null: false).freeze,
        state:          Column.new(:state,             :string).freeze,
        updated_at:     Column.new(:updated_at,      :datetime, null: false).freeze,
        updater_id:     Column.new(:updater_id,       :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      events: {
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        description:  Column.new(:description,       :text).freeze,
        duration:     Column.new(:duration,       :integer).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        lock_version: Column.new(:lock_version,   :integer, null: false, default: 0).freeze,
        name:         Column.new(:name,            :string, null: false).freeze,
        nature_id:    Column.new(:nature_id,      :integer, references: :event_nature, null: false).freeze,
        place:        Column.new(:place,           :string).freeze,
        restricted:   Column.new(:restricted,     :boolean, null: false).freeze,
        started_at:   Column.new(:started_at,    :datetime, null: false).freeze,
        stopped_at:   Column.new(:stopped_at,    :datetime).freeze,
        updated_at:   Column.new(:updated_at,    :datetime, null: false).freeze,
        updater_id:   Column.new(:updater_id,     :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      financial_years: {
        closed:                Column.new(:closed,                  :boolean, null: false).freeze,
        code:                  Column.new(:code,                     :string, limit: 20, null: false).freeze,
        created_at:            Column.new(:created_at,             :datetime, null: false).freeze,
        creator_id:            Column.new(:creator_id,              :integer, references: :user).freeze,
        currency:              Column.new(:currency,                 :string, limit: 3, null: false).freeze,
        currency_precision:    Column.new(:currency_precision,      :integer).freeze,
        id:                    Column.new(:id,                      :integer, null: false).freeze,
        last_journal_entry_id: Column.new(:last_journal_entry_id,   :integer, references: :journal_entry).freeze,
        lock_version:          Column.new(:lock_version,            :integer, null: false, default: 0).freeze,
        started_on:            Column.new(:started_on,                 :date, null: false).freeze,
        stopped_on:            Column.new(:stopped_on,                 :date, null: false).freeze,
        updated_at:            Column.new(:updated_at,             :datetime, null: false).freeze,
        updater_id:            Column.new(:updater_id,              :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      gaps: {
        accounted_at:     Column.new(:accounted_at,      :datetime).freeze,
        affair_id:        Column.new(:affair_id,          :integer, references: :affair, null: false).freeze,
        amount:           Column.new(:amount,             :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        created_at:       Column.new(:created_at,        :datetime, null: false).freeze,
        creator_id:       Column.new(:creator_id,         :integer, references: :user).freeze,
        currency:         Column.new(:currency,            :string, limit: 3, null: false).freeze,
        direction:        Column.new(:direction,           :string, null: false).freeze,
        entity_id:        Column.new(:entity_id,          :integer, references: :entity, null: false).freeze,
        id:               Column.new(:id,                 :integer, null: false).freeze,
        journal_entry_id: Column.new(:journal_entry_id,   :integer, references: :journal_entry).freeze,
        lock_version:     Column.new(:lock_version,       :integer, null: false, default: 0).freeze,
        number:           Column.new(:number,              :string, null: false).freeze,
        updated_at:       Column.new(:updated_at,        :datetime, null: false).freeze,
        updater_id:       Column.new(:updater_id,         :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      incidents: {
        created_at:           Column.new(:created_at,            :datetime, null: false).freeze,
        creator_id:           Column.new(:creator_id,             :integer, references: :user).freeze,
        description:          Column.new(:description,               :text).freeze,
        gravity:              Column.new(:gravity,                :integer).freeze,
        id:                   Column.new(:id,                     :integer, null: false).freeze,
        lock_version:         Column.new(:lock_version,           :integer, null: false, default: 0).freeze,
        name:                 Column.new(:name,                    :string, null: false).freeze,
        nature:               Column.new(:nature,                  :string, null: false).freeze,
        observed_at:          Column.new(:observed_at,           :datetime, null: false).freeze,
        picture_content_type: Column.new(:picture_content_type,    :string).freeze,
        picture_file_name:    Column.new(:picture_file_name,       :string).freeze,
        picture_file_size:    Column.new(:picture_file_size,      :integer).freeze,
        picture_updated_at:   Column.new(:picture_updated_at,    :datetime).freeze,
        priority:             Column.new(:priority,               :integer).freeze,
        state:                Column.new(:state,                   :string).freeze,
        target_id:            Column.new(:target_id,              :integer, references: "target_type", null: false).freeze,
        target_type:          Column.new(:target_type,             :string, null: false).freeze,
        updated_at:           Column.new(:updated_at,            :datetime, null: false).freeze,
        updater_id:           Column.new(:updater_id,             :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      incoming_deliveries: {
        address_id:       Column.new(:address_id,         :integer, references: :entity_address).freeze,
        created_at:       Column.new(:created_at,        :datetime, null: false).freeze,
        creator_id:       Column.new(:creator_id,         :integer, references: :user).freeze,
        id:               Column.new(:id,                 :integer, null: false).freeze,
        lock_version:     Column.new(:lock_version,       :integer, null: false, default: 0).freeze,
        mode_id:          Column.new(:mode_id,            :integer, references: :incoming_delivery_mode).freeze,
        number:           Column.new(:number,              :string, null: false).freeze,
        purchase_id:      Column.new(:purchase_id,        :integer, references: :purchase).freeze,
        received_at:      Column.new(:received_at,       :datetime).freeze,
        reference_number: Column.new(:reference_number,    :string).freeze,
        sender_id:        Column.new(:sender_id,          :integer, references: :entity, null: false).freeze,
        updated_at:       Column.new(:updated_at,        :datetime, null: false).freeze,
        updater_id:       Column.new(:updater_id,         :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      incoming_delivery_items: {
        container_id:     Column.new(:container_id,       :integer, references: :product).freeze,
        created_at:       Column.new(:created_at,        :datetime, null: false).freeze,
        creator_id:       Column.new(:creator_id,         :integer, references: :user).freeze,
        delivery_id:      Column.new(:delivery_id,        :integer, references: :incoming_delivery, null: false).freeze,
        id:               Column.new(:id,                 :integer, null: false).freeze,
        lock_version:     Column.new(:lock_version,       :integer, null: false, default: 0).freeze,
        population:       Column.new(:population,         :decimal, precision: 19, scale: 4, null: false, default: 1.0).freeze,
        product_id:       Column.new(:product_id,         :integer, references: :product, null: false).freeze,
        purchase_item_id: Column.new(:purchase_item_id,   :integer, references: :purchase_item).freeze,
        updated_at:       Column.new(:updated_at,        :datetime, null: false).freeze,
        updater_id:       Column.new(:updater_id,         :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      incoming_delivery_modes: {
        code:         Column.new(:code,            :string, limit: 30, null: false).freeze,
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        description:  Column.new(:description,       :text).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        lock_version: Column.new(:lock_version,   :integer, null: false, default: 0).freeze,
        name:         Column.new(:name,            :string, null: false).freeze,
        updated_at:   Column.new(:updated_at,    :datetime, null: false).freeze,
        updater_id:   Column.new(:updater_id,     :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      incoming_payment_modes: {
        active:                  Column.new(:active,                    :boolean).freeze,
        attorney_journal_id:     Column.new(:attorney_journal_id,       :integer, references: :journal).freeze,
        cash_id:                 Column.new(:cash_id,                   :integer, references: :cash).freeze,
        commission_account_id:   Column.new(:commission_account_id,     :integer, references: :account).freeze,
        commission_base_amount:  Column.new(:commission_base_amount,    :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        commission_percentage:   Column.new(:commission_percentage,     :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        created_at:              Column.new(:created_at,               :datetime, null: false).freeze,
        creator_id:              Column.new(:creator_id,                :integer, references: :user).freeze,
        depositables_account_id: Column.new(:depositables_account_id,   :integer, references: :account).freeze,
        depositables_journal_id: Column.new(:depositables_journal_id,   :integer, references: :journal).freeze,
        detail_payments:         Column.new(:detail_payments,           :boolean, null: false).freeze,
        id:                      Column.new(:id,                        :integer, null: false).freeze,
        lock_version:            Column.new(:lock_version,              :integer, null: false, default: 0).freeze,
        name:                    Column.new(:name,                       :string, limit: 50, null: false).freeze,
        position:                Column.new(:position,                  :integer).freeze,
        updated_at:              Column.new(:updated_at,               :datetime, null: false).freeze,
        updater_id:              Column.new(:updater_id,                :integer, references: :user).freeze,
        with_accounting:         Column.new(:with_accounting,           :boolean, null: false).freeze,
        with_commission:         Column.new(:with_commission,           :boolean, null: false).freeze,
        with_deposit:            Column.new(:with_deposit,              :boolean, null: false).freeze
      }.with_indifferent_access.freeze,
      incoming_payments: {
        accounted_at:          Column.new(:accounted_at,           :datetime).freeze,
        affair_id:             Column.new(:affair_id,               :integer, references: :affair).freeze,
        amount:                Column.new(:amount,                  :decimal, precision: 19, scale: 4, null: false).freeze,
        bank_account_number:   Column.new(:bank_account_number,      :string).freeze,
        bank_check_number:     Column.new(:bank_check_number,        :string).freeze,
        bank_name:             Column.new(:bank_name,                :string).freeze,
        commission_account_id: Column.new(:commission_account_id,   :integer, references: :account).freeze,
        commission_amount:     Column.new(:commission_amount,       :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        created_at:            Column.new(:created_at,             :datetime, null: false).freeze,
        created_on:            Column.new(:created_on,                 :date).freeze,
        creator_id:            Column.new(:creator_id,              :integer, references: :user).freeze,
        currency:              Column.new(:currency,                 :string, limit: 3, null: false).freeze,
        deposit_id:            Column.new(:deposit_id,              :integer, references: :deposit).freeze,
        downpayment:           Column.new(:downpayment,             :boolean, null: false, default: true).freeze,
        id:                    Column.new(:id,                      :integer, null: false).freeze,
        journal_entry_id:      Column.new(:journal_entry_id,        :integer, references: :journal_entry).freeze,
        lock_version:          Column.new(:lock_version,            :integer, null: false, default: 0).freeze,
        mode_id:               Column.new(:mode_id,                 :integer, references: :incoming_payment_mode, null: false).freeze,
        number:                Column.new(:number,                   :string).freeze,
        paid_on:               Column.new(:paid_on,                    :date).freeze,
        payer_id:              Column.new(:payer_id,                :integer, references: :entity).freeze,
        receipt:               Column.new(:receipt,                    :text).freeze,
        received:              Column.new(:received,                :boolean, null: false, default: true).freeze,
        responsible_id:        Column.new(:responsible_id,          :integer, references: :user).freeze,
        scheduled:             Column.new(:scheduled,               :boolean, null: false).freeze,
        to_bank_on:            Column.new(:to_bank_on,                 :date, null: false, default: 0001-01-01).freeze,
        updated_at:            Column.new(:updated_at,             :datetime, null: false).freeze,
        updater_id:            Column.new(:updater_id,              :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      intervention_casts: {
        actor_id:        Column.new(:actor_id,          :integer, references: :product).freeze,
        created_at:      Column.new(:created_at,       :datetime, null: false).freeze,
        creator_id:      Column.new(:creator_id,        :integer, references: :user).freeze,
        id:              Column.new(:id,                :integer, null: false).freeze,
        intervention_id: Column.new(:intervention_id,   :integer, references: :intervention, null: false).freeze,
        lock_version:    Column.new(:lock_version,      :integer, null: false, default: 0).freeze,
        population:      Column.new(:population,        :decimal, precision: 19, scale: 4).freeze,
        reference_name:  Column.new(:reference_name,     :string, null: false).freeze,
        roles:           Column.new(:roles,              :string, limit: 320).freeze,
        shape:           Column.new(:shape,             :spatial).freeze,
        updated_at:      Column.new(:updated_at,       :datetime, null: false).freeze,
        updater_id:      Column.new(:updater_id,        :integer, references: :user).freeze,
        variant_id:      Column.new(:variant_id,        :integer, references: :product_nature_variant).freeze
      }.with_indifferent_access.freeze,
      interventions: {
        created_at:                  Column.new(:created_at,                   :datetime, null: false).freeze,
        creator_id:                  Column.new(:creator_id,                    :integer, references: :user).freeze,
        id:                          Column.new(:id,                            :integer, null: false).freeze,
        incident_id:                 Column.new(:incident_id,                   :integer, references: :incident).freeze,
        lock_version:                Column.new(:lock_version,                  :integer, null: false, default: 0).freeze,
        natures:                     Column.new(:natures,                        :string, null: false).freeze,
        prescription_id:             Column.new(:prescription_id,               :integer, references: :prescription).freeze,
        production_id:               Column.new(:production_id,                 :integer, references: :production, null: false).freeze,
        production_support_id:       Column.new(:production_support_id,         :integer, references: :production_support).freeze,
        provisional:                 Column.new(:provisional,                   :boolean, null: false).freeze,
        provisional_intervention_id: Column.new(:provisional_intervention_id,   :integer, references: :intervention).freeze,
        recommended:                 Column.new(:recommended,                   :boolean, null: false).freeze,
        recommender_id:              Column.new(:recommender_id,                :integer, references: :entity).freeze,
        reference_name:              Column.new(:reference_name,                 :string, null: false).freeze,
        ressource_id:                Column.new(:ressource_id,                  :integer, references: "ressource_type").freeze,
        ressource_type:              Column.new(:ressource_type,                 :string).freeze,
        started_at:                  Column.new(:started_at,                   :datetime).freeze,
        state:                       Column.new(:state,                          :string, null: false).freeze,
        stopped_at:                  Column.new(:stopped_at,                   :datetime).freeze,
        updated_at:                  Column.new(:updated_at,                   :datetime, null: false).freeze,
        updater_id:                  Column.new(:updater_id,                    :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      inventories: {
        accounted_at:      Column.new(:accounted_at,       :datetime).freeze,
        changes_reflected: Column.new(:changes_reflected,   :boolean, null: false).freeze,
        created_at:        Column.new(:created_at,         :datetime, null: false).freeze,
        created_on:        Column.new(:created_on,             :date, null: false).freeze,
        creator_id:        Column.new(:creator_id,          :integer, references: :user).freeze,
        id:                Column.new(:id,                  :integer, null: false).freeze,
        journal_entry_id:  Column.new(:journal_entry_id,    :integer, references: :journal_entry).freeze,
        lock_version:      Column.new(:lock_version,        :integer, null: false, default: 0).freeze,
        moved_on:          Column.new(:moved_on,               :date).freeze,
        number:            Column.new(:number,               :string, limit: 20).freeze,
        responsible_id:    Column.new(:responsible_id,      :integer, references: :entity).freeze,
        updated_at:        Column.new(:updated_at,         :datetime, null: false).freeze,
        updater_id:        Column.new(:updater_id,          :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      inventory_items: {
        created_at:             Column.new(:created_at,              :datetime, null: false).freeze,
        creator_id:             Column.new(:creator_id,               :integer, references: :user).freeze,
        id:                     Column.new(:id,                       :integer, null: false).freeze,
        inventory_id:           Column.new(:inventory_id,             :integer, references: :inventory, null: false).freeze,
        lock_version:           Column.new(:lock_version,             :integer, null: false, default: 0).freeze,
        population:             Column.new(:population,               :decimal, precision: 19, scale: 4, null: false).freeze,
        product_id:             Column.new(:product_id,               :integer, references: :product, null: false).freeze,
        product_measurement_id: Column.new(:product_measurement_id,   :integer, references: :product_measurement).freeze,
        theoric_population:     Column.new(:theoric_population,       :decimal, precision: 19, scale: 4, null: false).freeze,
        updated_at:             Column.new(:updated_at,              :datetime, null: false).freeze,
        updater_id:             Column.new(:updater_id,               :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      journal_entries: {
        absolute_credit:    Column.new(:absolute_credit,      :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        absolute_currency:  Column.new(:absolute_currency,     :string, limit: 3, null: false).freeze,
        absolute_debit:     Column.new(:absolute_debit,       :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        balance:            Column.new(:balance,              :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        created_at:         Column.new(:created_at,          :datetime, null: false).freeze,
        created_on:         Column.new(:created_on,              :date, null: false).freeze,
        creator_id:         Column.new(:creator_id,           :integer, references: :user).freeze,
        credit:             Column.new(:credit,               :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        currency:           Column.new(:currency,              :string, limit: 3, null: false).freeze,
        debit:              Column.new(:debit,                :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        financial_year_id:  Column.new(:financial_year_id,    :integer, references: :financial_year).freeze,
        id:                 Column.new(:id,                   :integer, null: false).freeze,
        journal_id:         Column.new(:journal_id,           :integer, references: :journal, null: false).freeze,
        lock_version:       Column.new(:lock_version,         :integer, null: false, default: 0).freeze,
        number:             Column.new(:number,                :string, null: false).freeze,
        printed_on:         Column.new(:printed_on,              :date, null: false).freeze,
        real_credit:        Column.new(:real_credit,          :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        real_currency:      Column.new(:real_currency,         :string, limit: 3, null: false).freeze,
        real_currency_rate: Column.new(:real_currency_rate,   :decimal, precision: 19, scale: 10, null: false, default: 0.0).freeze,
        real_debit:         Column.new(:real_debit,           :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        resource_id:        Column.new(:resource_id,          :integer, references: "resource_type").freeze,
        resource_type:      Column.new(:resource_type,         :string).freeze,
        state:              Column.new(:state,                 :string, limit: 30, null: false).freeze,
        updated_at:         Column.new(:updated_at,          :datetime, null: false).freeze,
        updater_id:         Column.new(:updater_id,           :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      journal_entry_items: {
        absolute_credit:           Column.new(:absolute_credit,             :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        absolute_currency:         Column.new(:absolute_currency,            :string, limit: 3, null: false).freeze,
        absolute_debit:            Column.new(:absolute_debit,              :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        account_id:                Column.new(:account_id,                  :integer, references: :account, null: false).freeze,
        balance:                   Column.new(:balance,                     :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        bank_statement_id:         Column.new(:bank_statement_id,           :integer, references: :bank_statement).freeze,
        created_at:                Column.new(:created_at,                 :datetime, null: false).freeze,
        creator_id:                Column.new(:creator_id,                  :integer, references: :user).freeze,
        credit:                    Column.new(:credit,                      :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        cumulated_absolute_credit: Column.new(:cumulated_absolute_credit,   :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        cumulated_absolute_debit:  Column.new(:cumulated_absolute_debit,    :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        currency:                  Column.new(:currency,                     :string, limit: 3, null: false).freeze,
        debit:                     Column.new(:debit,                       :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        description:               Column.new(:description,                    :text).freeze,
        entry_id:                  Column.new(:entry_id,                    :integer, references: :journal_entry, null: false).freeze,
        entry_number:              Column.new(:entry_number,                 :string, null: false).freeze,
        financial_year_id:         Column.new(:financial_year_id,           :integer, references: :financial_year, null: false).freeze,
        id:                        Column.new(:id,                          :integer, null: false).freeze,
        journal_id:                Column.new(:journal_id,                  :integer, references: :journal, null: false).freeze,
        letter:                    Column.new(:letter,                       :string, limit: 10).freeze,
        lock_version:              Column.new(:lock_version,                :integer, null: false, default: 0).freeze,
        name:                      Column.new(:name,                         :string, null: false).freeze,
        position:                  Column.new(:position,                    :integer).freeze,
        printed_on:                Column.new(:printed_on,                     :date, null: false).freeze,
        real_credit:               Column.new(:real_credit,                 :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        real_currency:             Column.new(:real_currency,                :string, limit: 3, null: false).freeze,
        real_currency_rate:        Column.new(:real_currency_rate,          :decimal, precision: 19, scale: 10, null: false, default: 0.0).freeze,
        real_debit:                Column.new(:real_debit,                  :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        state:                     Column.new(:state,                        :string, limit: 30, null: false).freeze,
        updated_at:                Column.new(:updated_at,                 :datetime, null: false).freeze,
        updater_id:                Column.new(:updater_id,                  :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      journals: {
        closed_on:    Column.new(:closed_on,         :date, null: false).freeze,
        code:         Column.new(:code,            :string, limit: 4, null: false).freeze,
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        currency:     Column.new(:currency,        :string, limit: 3, null: false).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        lock_version: Column.new(:lock_version,   :integer, null: false, default: 0).freeze,
        name:         Column.new(:name,            :string, null: false).freeze,
        nature:       Column.new(:nature,          :string, limit: 30, null: false).freeze,
        updated_at:   Column.new(:updated_at,    :datetime, null: false).freeze,
        updater_id:   Column.new(:updater_id,     :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      listing_node_items: {
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        lock_version: Column.new(:lock_version,   :integer, null: false, default: 0).freeze,
        nature:       Column.new(:nature,          :string, limit: 10, null: false).freeze,
        node_id:      Column.new(:node_id,        :integer, references: :listing_node, null: false).freeze,
        updated_at:   Column.new(:updated_at,    :datetime, null: false).freeze,
        updater_id:   Column.new(:updater_id,     :integer, references: :user).freeze,
        value:        Column.new(:value,             :text).freeze
      }.with_indifferent_access.freeze,
      listing_nodes: {
        attribute_name:       Column.new(:attribute_name,          :string).freeze,
        condition_operator:   Column.new(:condition_operator,      :string).freeze,
        condition_value:      Column.new(:condition_value,         :string).freeze,
        created_at:           Column.new(:created_at,            :datetime, null: false).freeze,
        creator_id:           Column.new(:creator_id,             :integer, references: :user).freeze,
        depth:                Column.new(:depth,                  :integer, null: false, default: 0).freeze,
        exportable:           Column.new(:exportable,             :boolean, null: false, default: true).freeze,
        id:                   Column.new(:id,                     :integer, null: false).freeze,
        item_listing_id:      Column.new(:item_listing_id,        :integer, references: :listing).freeze,
        item_listing_node_id: Column.new(:item_listing_node_id,   :integer, references: :listing_node).freeze,
        item_nature:          Column.new(:item_nature,             :string, limit: 10).freeze,
        item_value:           Column.new(:item_value,                :text).freeze,
        key:                  Column.new(:key,                     :string).freeze,
        label:                Column.new(:label,                   :string, null: false).freeze,
        lft:                  Column.new(:lft,                    :integer).freeze,
        listing_id:           Column.new(:listing_id,             :integer, references: :listing, null: false).freeze,
        lock_version:         Column.new(:lock_version,           :integer, null: false, default: 0).freeze,
        name:                 Column.new(:name,                    :string, null: false).freeze,
        nature:               Column.new(:nature,                  :string, null: false).freeze,
        parent_id:            Column.new(:parent_id,              :integer, references: :listing_node).freeze,
        position:             Column.new(:position,               :integer).freeze,
        rgt:                  Column.new(:rgt,                    :integer).freeze,
        sql_type:             Column.new(:sql_type,                :string).freeze,
        updated_at:           Column.new(:updated_at,            :datetime, null: false).freeze,
        updater_id:           Column.new(:updater_id,             :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      listings: {
        conditions:   Column.new(:conditions,        :text).freeze,
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        description:  Column.new(:description,       :text).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        lock_version: Column.new(:lock_version,   :integer, null: false, default: 0).freeze,
        mail:         Column.new(:mail,              :text).freeze,
        name:         Column.new(:name,            :string, null: false).freeze,
        query:        Column.new(:query,             :text).freeze,
        root_model:   Column.new(:root_model,      :string, null: false).freeze,
        source:       Column.new(:source,            :text).freeze,
        story:        Column.new(:story,             :text).freeze,
        updated_at:   Column.new(:updated_at,    :datetime, null: false).freeze,
        updater_id:   Column.new(:updater_id,     :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      mandates: {
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        entity_id:    Column.new(:entity_id,      :integer, references: :entity, null: false).freeze,
        family:       Column.new(:family,          :string, null: false).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        lock_version: Column.new(:lock_version,   :integer, null: false, default: 0).freeze,
        organization: Column.new(:organization,    :string, null: false).freeze,
        started_on:   Column.new(:started_on,        :date).freeze,
        stopped_on:   Column.new(:stopped_on,        :date).freeze,
        title:        Column.new(:title,           :string, null: false).freeze,
        updated_at:   Column.new(:updated_at,    :datetime, null: false).freeze,
        updater_id:   Column.new(:updater_id,     :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      observations: {
        author_id:    Column.new(:author_id,      :integer, references: :user, null: false).freeze,
        content:      Column.new(:content,           :text, null: false).freeze,
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        importance:   Column.new(:importance,      :string, limit: 10, null: false).freeze,
        lock_version: Column.new(:lock_version,   :integer, null: false, default: 0).freeze,
        observed_at:  Column.new(:observed_at,   :datetime, null: false).freeze,
        subject_id:   Column.new(:subject_id,     :integer, references: "subject_type", null: false).freeze,
        subject_type: Column.new(:subject_type,    :string, null: false).freeze,
        updated_at:   Column.new(:updated_at,    :datetime, null: false).freeze,
        updater_id:   Column.new(:updater_id,     :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      operations: {
        created_at:      Column.new(:created_at,       :datetime, null: false).freeze,
        creator_id:      Column.new(:creator_id,        :integer, references: :user).freeze,
        duration:        Column.new(:duration,          :integer).freeze,
        id:              Column.new(:id,                :integer, null: false).freeze,
        intervention_id: Column.new(:intervention_id,   :integer, references: :intervention, null: false).freeze,
        lock_version:    Column.new(:lock_version,      :integer, null: false, default: 0).freeze,
        reference_name:  Column.new(:reference_name,     :string, null: false).freeze,
        started_at:      Column.new(:started_at,       :datetime, null: false).freeze,
        stopped_at:      Column.new(:stopped_at,       :datetime, null: false).freeze,
        updated_at:      Column.new(:updated_at,       :datetime, null: false).freeze,
        updater_id:      Column.new(:updater_id,        :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      outgoing_deliveries: {
        address_id:       Column.new(:address_id,         :integer, references: :entity_address, null: false).freeze,
        created_at:       Column.new(:created_at,        :datetime, null: false).freeze,
        creator_id:       Column.new(:creator_id,         :integer, references: :user).freeze,
        id:               Column.new(:id,                 :integer, null: false).freeze,
        lock_version:     Column.new(:lock_version,       :integer, null: false, default: 0).freeze,
        mode_id:          Column.new(:mode_id,            :integer, references: :outgoing_delivery_mode).freeze,
        number:           Column.new(:number,              :string, null: false).freeze,
        recipient_id:     Column.new(:recipient_id,       :integer, references: :entity, null: false).freeze,
        reference_number: Column.new(:reference_number,    :string).freeze,
        sale_id:          Column.new(:sale_id,            :integer, references: :sale).freeze,
        sent_at:          Column.new(:sent_at,           :datetime).freeze,
        transport_id:     Column.new(:transport_id,       :integer, references: :transport).freeze,
        transporter_id:   Column.new(:transporter_id,     :integer, references: :entity).freeze,
        updated_at:       Column.new(:updated_at,        :datetime, null: false).freeze,
        updater_id:       Column.new(:updater_id,         :integer, references: :user).freeze,
        weight:           Column.new(:weight,             :decimal, precision: 19, scale: 4).freeze
      }.with_indifferent_access.freeze,
      outgoing_delivery_items: {
        created_at:        Column.new(:created_at,         :datetime, null: false).freeze,
        creator_id:        Column.new(:creator_id,          :integer, references: :user).freeze,
        delivery_id:       Column.new(:delivery_id,         :integer, references: :outgoing_delivery, null: false).freeze,
        id:                Column.new(:id,                  :integer, null: false).freeze,
        lock_version:      Column.new(:lock_version,        :integer, null: false, default: 0).freeze,
        population:        Column.new(:population,          :decimal, precision: 19, scale: 4, null: false, default: 1.0).freeze,
        product_id:        Column.new(:product_id,          :integer, references: :product, null: false).freeze,
        sale_item_id:      Column.new(:sale_item_id,        :integer, references: :sale_item).freeze,
        source_product_id: Column.new(:source_product_id,   :integer, references: :product, null: false).freeze,
        updated_at:        Column.new(:updated_at,         :datetime, null: false).freeze,
        updater_id:        Column.new(:updater_id,          :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      outgoing_delivery_modes: {
        code:           Column.new(:code,              :string, limit: 10, null: false).freeze,
        created_at:     Column.new(:created_at,      :datetime, null: false).freeze,
        creator_id:     Column.new(:creator_id,       :integer, references: :user).freeze,
        description:    Column.new(:description,         :text).freeze,
        id:             Column.new(:id,               :integer, null: false).freeze,
        lock_version:   Column.new(:lock_version,     :integer, null: false, default: 0).freeze,
        name:           Column.new(:name,              :string, null: false).freeze,
        updated_at:     Column.new(:updated_at,      :datetime, null: false).freeze,
        updater_id:     Column.new(:updater_id,       :integer, references: :user).freeze,
        with_transport: Column.new(:with_transport,   :boolean, null: false).freeze
      }.with_indifferent_access.freeze,
      outgoing_payment_modes: {
        active:              Column.new(:active,                :boolean, null: false).freeze,
        attorney_journal_id: Column.new(:attorney_journal_id,   :integer, references: :journal).freeze,
        cash_id:             Column.new(:cash_id,               :integer, references: :cash).freeze,
        created_at:          Column.new(:created_at,           :datetime, null: false).freeze,
        creator_id:          Column.new(:creator_id,            :integer, references: :user).freeze,
        id:                  Column.new(:id,                    :integer, null: false).freeze,
        lock_version:        Column.new(:lock_version,          :integer, null: false, default: 0).freeze,
        name:                Column.new(:name,                   :string, limit: 50, null: false).freeze,
        position:            Column.new(:position,              :integer).freeze,
        updated_at:          Column.new(:updated_at,           :datetime, null: false).freeze,
        updater_id:          Column.new(:updater_id,            :integer, references: :user).freeze,
        with_accounting:     Column.new(:with_accounting,       :boolean, null: false).freeze
      }.with_indifferent_access.freeze,
      outgoing_payments: {
        accounted_at:      Column.new(:accounted_at,       :datetime).freeze,
        affair_id:         Column.new(:affair_id,           :integer, references: :affair).freeze,
        amount:            Column.new(:amount,              :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        bank_check_number: Column.new(:bank_check_number,    :string).freeze,
        cash_id:           Column.new(:cash_id,             :integer, references: :cash, null: false).freeze,
        created_at:        Column.new(:created_at,         :datetime, null: false).freeze,
        created_on:        Column.new(:created_on,             :date).freeze,
        creator_id:        Column.new(:creator_id,          :integer, references: :user).freeze,
        currency:          Column.new(:currency,             :string, limit: 3, null: false).freeze,
        delivered:         Column.new(:delivered,           :boolean, null: false, default: true).freeze,
        downpayment:       Column.new(:downpayment,         :boolean, null: false, default: true).freeze,
        id:                Column.new(:id,                  :integer, null: false).freeze,
        journal_entry_id:  Column.new(:journal_entry_id,    :integer, references: :journal_entry).freeze,
        lock_version:      Column.new(:lock_version,        :integer, null: false, default: 0).freeze,
        mode_id:           Column.new(:mode_id,             :integer, references: :outgoing_payment_mode, null: false).freeze,
        number:            Column.new(:number,               :string).freeze,
        paid_on:           Column.new(:paid_on,                :date).freeze,
        payee_id:          Column.new(:payee_id,            :integer, references: :entity, null: false).freeze,
        responsible_id:    Column.new(:responsible_id,      :integer, references: :user, null: false).freeze,
        to_bank_on:        Column.new(:to_bank_on,             :date, null: false).freeze,
        updated_at:        Column.new(:updated_at,         :datetime, null: false).freeze,
        updater_id:        Column.new(:updater_id,          :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      preferences: {
        boolean_value:     Column.new(:boolean_value,       :boolean).freeze,
        created_at:        Column.new(:created_at,         :datetime, null: false).freeze,
        creator_id:        Column.new(:creator_id,          :integer, references: :user).freeze,
        decimal_value:     Column.new(:decimal_value,       :decimal, precision: 19, scale: 4).freeze,
        id:                Column.new(:id,                  :integer, null: false).freeze,
        integer_value:     Column.new(:integer_value,       :integer).freeze,
        lock_version:      Column.new(:lock_version,        :integer, null: false, default: 0).freeze,
        name:              Column.new(:name,                 :string, null: false).freeze,
        nature:            Column.new(:nature,               :string, limit: 10, null: false).freeze,
        record_value_id:   Column.new(:record_value_id,     :integer, references: "record_value_type").freeze,
        record_value_type: Column.new(:record_value_type,    :string).freeze,
        string_value:      Column.new(:string_value,           :text).freeze,
        updated_at:        Column.new(:updated_at,         :datetime, null: false).freeze,
        updater_id:        Column.new(:updater_id,          :integer, references: :user).freeze,
        user_id:           Column.new(:user_id,             :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      prescriptions: {
        created_at:       Column.new(:created_at,        :datetime, null: false).freeze,
        creator_id:       Column.new(:creator_id,         :integer, references: :user).freeze,
        delivered_at:     Column.new(:delivered_at,      :datetime).freeze,
        description:      Column.new(:description,           :text).freeze,
        document_id:      Column.new(:document_id,        :integer, references: :document).freeze,
        id:               Column.new(:id,                 :integer, null: false).freeze,
        lock_version:     Column.new(:lock_version,       :integer, null: false, default: 0).freeze,
        prescriptor_id:   Column.new(:prescriptor_id,     :integer, references: :entity, null: false).freeze,
        reference_number: Column.new(:reference_number,    :string).freeze,
        updated_at:       Column.new(:updated_at,        :datetime, null: false).freeze,
        updater_id:       Column.new(:updater_id,         :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      product_births: {
        created_at:      Column.new(:created_at,       :datetime, null: false).freeze,
        creator_id:      Column.new(:creator_id,        :integer, references: :user).freeze,
        id:              Column.new(:id,                :integer, null: false).freeze,
        lock_version:    Column.new(:lock_version,      :integer, null: false, default: 0).freeze,
        nature:          Column.new(:nature,             :string, null: false).freeze,
        operation_id:    Column.new(:operation_id,      :integer, references: :operation).freeze,
        originator_id:   Column.new(:originator_id,     :integer, references: "originator_type").freeze,
        originator_type: Column.new(:originator_type,    :string).freeze,
        population:      Column.new(:population,        :decimal, precision: 19, scale: 4).freeze,
        producer_id:     Column.new(:producer_id,       :integer, references: :product).freeze,
        product_id:      Column.new(:product_id,        :integer, references: :product, null: false).freeze,
        shape:           Column.new(:shape,             :spatial).freeze,
        started_at:      Column.new(:started_at,       :datetime).freeze,
        stopped_at:      Column.new(:stopped_at,       :datetime).freeze,
        updated_at:      Column.new(:updated_at,       :datetime, null: false).freeze,
        updater_id:      Column.new(:updater_id,        :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      product_deaths: {
        absorber_id:     Column.new(:absorber_id,       :integer, references: :product).freeze,
        created_at:      Column.new(:created_at,       :datetime, null: false).freeze,
        creator_id:      Column.new(:creator_id,        :integer, references: :user).freeze,
        id:              Column.new(:id,                :integer, null: false).freeze,
        lock_version:    Column.new(:lock_version,      :integer, null: false, default: 0).freeze,
        nature:          Column.new(:nature,             :string, null: false).freeze,
        operation_id:    Column.new(:operation_id,      :integer, references: :operation).freeze,
        originator_id:   Column.new(:originator_id,     :integer, references: "originator_type").freeze,
        originator_type: Column.new(:originator_type,    :string).freeze,
        product_id:      Column.new(:product_id,        :integer, references: :product, null: false).freeze,
        started_at:      Column.new(:started_at,       :datetime).freeze,
        stopped_at:      Column.new(:stopped_at,       :datetime).freeze,
        updated_at:      Column.new(:updated_at,       :datetime, null: false).freeze,
        updater_id:      Column.new(:updater_id,        :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      product_enjoyments: {
        created_at:      Column.new(:created_at,       :datetime, null: false).freeze,
        creator_id:      Column.new(:creator_id,        :integer, references: :user).freeze,
        enjoyer_id:      Column.new(:enjoyer_id,        :integer, references: :entity).freeze,
        id:              Column.new(:id,                :integer, null: false).freeze,
        lock_version:    Column.new(:lock_version,      :integer, null: false, default: 0).freeze,
        nature:          Column.new(:nature,             :string, null: false).freeze,
        operation_id:    Column.new(:operation_id,      :integer, references: :operation).freeze,
        originator_id:   Column.new(:originator_id,     :integer, references: "originator_type").freeze,
        originator_type: Column.new(:originator_type,    :string).freeze,
        product_id:      Column.new(:product_id,        :integer, references: :product, null: false).freeze,
        started_at:      Column.new(:started_at,       :datetime).freeze,
        stopped_at:      Column.new(:stopped_at,       :datetime).freeze,
        updated_at:      Column.new(:updated_at,       :datetime, null: false).freeze,
        updater_id:      Column.new(:updater_id,        :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      product_indicator_data: {
        boolean_value:       Column.new(:boolean_value,         :boolean, null: false).freeze,
        choice_value:        Column.new(:choice_value,           :string).freeze,
        created_at:          Column.new(:created_at,           :datetime, null: false).freeze,
        creator_id:          Column.new(:creator_id,            :integer, references: :user).freeze,
        decimal_value:       Column.new(:decimal_value,         :decimal, precision: 19, scale: 4).freeze,
        geometry_value:      Column.new(:geometry_value,        :spatial).freeze,
        id:                  Column.new(:id,                    :integer, null: false).freeze,
        indicator_datatype:  Column.new(:indicator_datatype,     :string, null: false).freeze,
        indicator_name:      Column.new(:indicator_name,         :string, null: false).freeze,
        lock_version:        Column.new(:lock_version,          :integer, null: false, default: 0).freeze,
        measure_value_unit:  Column.new(:measure_value_unit,     :string).freeze,
        measure_value_value: Column.new(:measure_value_value,   :decimal, precision: 19, scale: 4).freeze,
        measured_at:         Column.new(:measured_at,          :datetime, null: false).freeze,
        multi_polygon_value: Column.new(:multi_polygon_value,   :spatial).freeze,
        originator_id:       Column.new(:originator_id,         :integer, references: "originator_type").freeze,
        originator_type:     Column.new(:originator_type,        :string).freeze,
        point_value:         Column.new(:point_value,           :spatial).freeze,
        product_id:          Column.new(:product_id,            :integer, references: :product, null: false).freeze,
        string_value:        Column.new(:string_value,             :text).freeze,
        updated_at:          Column.new(:updated_at,           :datetime, null: false).freeze,
        updater_id:          Column.new(:updater_id,            :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      product_linkages: {
        carried_id:      Column.new(:carried_id,        :integer, references: :product).freeze,
        carrier_id:      Column.new(:carrier_id,        :integer, references: :product, null: false).freeze,
        created_at:      Column.new(:created_at,       :datetime, null: false).freeze,
        creator_id:      Column.new(:creator_id,        :integer, references: :user).freeze,
        id:              Column.new(:id,                :integer, null: false).freeze,
        lock_version:    Column.new(:lock_version,      :integer, null: false, default: 0).freeze,
        nature:          Column.new(:nature,             :string, null: false).freeze,
        operation_id:    Column.new(:operation_id,      :integer, references: :operation).freeze,
        originator_id:   Column.new(:originator_id,     :integer, references: "originator_type").freeze,
        originator_type: Column.new(:originator_type,    :string).freeze,
        point:           Column.new(:point,              :string, null: false).freeze,
        started_at:      Column.new(:started_at,       :datetime).freeze,
        stopped_at:      Column.new(:stopped_at,       :datetime).freeze,
        updated_at:      Column.new(:updated_at,       :datetime, null: false).freeze,
        updater_id:      Column.new(:updater_id,        :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      product_localizations: {
        arrival_cause:   Column.new(:arrival_cause,      :string).freeze,
        container_id:    Column.new(:container_id,      :integer, references: :product).freeze,
        created_at:      Column.new(:created_at,       :datetime, null: false).freeze,
        creator_id:      Column.new(:creator_id,        :integer, references: :user).freeze,
        departure_cause: Column.new(:departure_cause,    :string).freeze,
        id:              Column.new(:id,                :integer, null: false).freeze,
        lock_version:    Column.new(:lock_version,      :integer, null: false, default: 0).freeze,
        nature:          Column.new(:nature,             :string, null: false).freeze,
        operation_id:    Column.new(:operation_id,      :integer, references: :operation).freeze,
        originator_id:   Column.new(:originator_id,     :integer, references: "originator_type").freeze,
        originator_type: Column.new(:originator_type,    :string).freeze,
        product_id:      Column.new(:product_id,        :integer, references: :product, null: false).freeze,
        started_at:      Column.new(:started_at,       :datetime).freeze,
        stopped_at:      Column.new(:stopped_at,       :datetime).freeze,
        updated_at:      Column.new(:updated_at,       :datetime, null: false).freeze,
        updater_id:      Column.new(:updater_id,        :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      product_measurements: {
        boolean_value:       Column.new(:boolean_value,         :boolean, null: false).freeze,
        choice_value:        Column.new(:choice_value,           :string).freeze,
        created_at:          Column.new(:created_at,           :datetime, null: false).freeze,
        creator_id:          Column.new(:creator_id,            :integer, references: :user).freeze,
        decimal_value:       Column.new(:decimal_value,         :decimal, precision: 19, scale: 4).freeze,
        geometry_value:      Column.new(:geometry_value,        :spatial).freeze,
        id:                  Column.new(:id,                    :integer, null: false).freeze,
        indicator_datatype:  Column.new(:indicator_datatype,     :string, null: false).freeze,
        indicator_name:      Column.new(:indicator_name,         :string, null: false).freeze,
        lock_version:        Column.new(:lock_version,          :integer, null: false, default: 0).freeze,
        measure_value_unit:  Column.new(:measure_value_unit,     :string).freeze,
        measure_value_value: Column.new(:measure_value_value,   :decimal, precision: 19, scale: 4).freeze,
        multi_polygon_value: Column.new(:multi_polygon_value,   :spatial).freeze,
        operation_id:        Column.new(:operation_id,          :integer, references: :operation).freeze,
        originator_id:       Column.new(:originator_id,         :integer, references: "originator_type").freeze,
        originator_type:     Column.new(:originator_type,        :string).freeze,
        point_value:         Column.new(:point_value,           :spatial).freeze,
        product_id:          Column.new(:product_id,            :integer, references: :product, null: false).freeze,
        reporter_id:         Column.new(:reporter_id,           :integer, references: :worker).freeze,
        started_at:          Column.new(:started_at,           :datetime, null: false).freeze,
        stopped_at:          Column.new(:stopped_at,           :datetime).freeze,
        string_value:        Column.new(:string_value,             :text).freeze,
        tool_id:             Column.new(:tool_id,               :integer, references: :product).freeze,
        updated_at:          Column.new(:updated_at,           :datetime, null: false).freeze,
        updater_id:          Column.new(:updater_id,            :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      product_memberships: {
        created_at:      Column.new(:created_at,       :datetime, null: false).freeze,
        creator_id:      Column.new(:creator_id,        :integer, references: :user).freeze,
        group_id:        Column.new(:group_id,          :integer, references: :product_group, null: false).freeze,
        id:              Column.new(:id,                :integer, null: false).freeze,
        lock_version:    Column.new(:lock_version,      :integer, null: false, default: 0).freeze,
        member_id:       Column.new(:member_id,         :integer, references: :product, null: false).freeze,
        nature:          Column.new(:nature,             :string, null: false).freeze,
        operation_id:    Column.new(:operation_id,      :integer, references: :operation).freeze,
        originator_id:   Column.new(:originator_id,     :integer, references: "originator_type").freeze,
        originator_type: Column.new(:originator_type,    :string).freeze,
        started_at:      Column.new(:started_at,       :datetime, null: false).freeze,
        stopped_at:      Column.new(:stopped_at,       :datetime).freeze,
        updated_at:      Column.new(:updated_at,       :datetime, null: false).freeze,
        updater_id:      Column.new(:updater_id,        :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      product_nature_categories: {
        active:                 Column.new(:active,                   :boolean, null: false).freeze,
        asset_account_id:       Column.new(:asset_account_id,         :integer, references: :account).freeze,
        charge_account_id:      Column.new(:charge_account_id,        :integer, references: :account).freeze,
        created_at:             Column.new(:created_at,              :datetime, null: false).freeze,
        creator_id:             Column.new(:creator_id,               :integer, references: :user).freeze,
        depreciable:            Column.new(:depreciable,              :boolean, null: false).freeze,
        description:            Column.new(:description,                 :text).freeze,
        id:                     Column.new(:id,                       :integer, null: false).freeze,
        lock_version:           Column.new(:lock_version,             :integer, null: false, default: 0).freeze,
        name:                   Column.new(:name,                      :string, null: false).freeze,
        number:                 Column.new(:number,                    :string, limit: 30, null: false).freeze,
        pictogram:              Column.new(:pictogram,                 :string, limit: 120).freeze,
        product_account_id:     Column.new(:product_account_id,       :integer, references: :account).freeze,
        purchasable:            Column.new(:purchasable,              :boolean, null: false).freeze,
        reductible:             Column.new(:reductible,               :boolean, null: false).freeze,
        reference_name:         Column.new(:reference_name,            :string).freeze,
        saleable:               Column.new(:saleable,                 :boolean, null: false).freeze,
        stock_account_id:       Column.new(:stock_account_id,         :integer, references: :account).freeze,
        storable:               Column.new(:storable,                 :boolean, null: false).freeze,
        subscribing:            Column.new(:subscribing,              :boolean, null: false).freeze,
        subscription_duration:  Column.new(:subscription_duration,     :string).freeze,
        subscription_nature_id: Column.new(:subscription_nature_id,   :integer, references: :subscription_nature).freeze,
        updated_at:             Column.new(:updated_at,              :datetime, null: false).freeze,
        updater_id:             Column.new(:updater_id,               :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      product_nature_categories_purchase_taxes: {
        product_nature_category_id: Column.new(:product_nature_category_id,   :integer, references: :product_nature_category, null: false).freeze,
        tax_id:                     Column.new(:tax_id,                       :integer, references: :tax, null: false).freeze
      }.with_indifferent_access.freeze,
      product_nature_categories_sale_taxes: {
        product_nature_category_id: Column.new(:product_nature_category_id,   :integer, references: :product_nature_category, null: false).freeze,
        tax_id:                     Column.new(:tax_id,                       :integer, references: :tax, null: false).freeze
      }.with_indifferent_access.freeze,
      product_nature_variant_indicator_data: {
        boolean_value:       Column.new(:boolean_value,         :boolean, null: false).freeze,
        choice_value:        Column.new(:choice_value,           :string).freeze,
        created_at:          Column.new(:created_at,           :datetime, null: false).freeze,
        creator_id:          Column.new(:creator_id,            :integer, references: :user).freeze,
        decimal_value:       Column.new(:decimal_value,         :decimal, precision: 19, scale: 4).freeze,
        geometry_value:      Column.new(:geometry_value,        :spatial).freeze,
        id:                  Column.new(:id,                    :integer, null: false).freeze,
        indicator_datatype:  Column.new(:indicator_datatype,     :string, null: false).freeze,
        indicator_name:      Column.new(:indicator_name,         :string, null: false).freeze,
        lock_version:        Column.new(:lock_version,          :integer, null: false, default: 0).freeze,
        measure_value_unit:  Column.new(:measure_value_unit,     :string).freeze,
        measure_value_value: Column.new(:measure_value_value,   :decimal, precision: 19, scale: 4).freeze,
        multi_polygon_value: Column.new(:multi_polygon_value,   :spatial).freeze,
        point_value:         Column.new(:point_value,           :spatial).freeze,
        string_value:        Column.new(:string_value,             :text).freeze,
        updated_at:          Column.new(:updated_at,           :datetime, null: false).freeze,
        updater_id:          Column.new(:updater_id,            :integer, references: :user).freeze,
        variant_id:          Column.new(:variant_id,            :integer, references: :product_nature_variant, null: false).freeze
      }.with_indifferent_access.freeze,
      product_nature_variants: {
        active:                 Column.new(:active,                   :boolean, null: false).freeze,
        category_id:            Column.new(:category_id,              :integer, references: :product_nature_category, null: false).freeze,
        commercial_description: Column.new(:commercial_description,      :text).freeze,
        commercial_name:        Column.new(:commercial_name,           :string, null: false).freeze,
        contour:                Column.new(:contour,                   :string).freeze,
        created_at:             Column.new(:created_at,              :datetime, null: false).freeze,
        creator_id:             Column.new(:creator_id,               :integer, references: :user).freeze,
        derivative_of:          Column.new(:derivative_of,             :string, limit: 120).freeze,
        horizontal_rotation:    Column.new(:horizontal_rotation,      :integer, null: false, default: 0).freeze,
        id:                     Column.new(:id,                       :integer, null: false).freeze,
        lock_version:           Column.new(:lock_version,             :integer, null: false, default: 0).freeze,
        name:                   Column.new(:name,                      :string).freeze,
        nature_id:              Column.new(:nature_id,                :integer, references: :product_nature, null: false).freeze,
        nature_name:            Column.new(:nature_name,               :string, null: false).freeze,
        number:                 Column.new(:number,                    :string).freeze,
        picture_content_type:   Column.new(:picture_content_type,      :string).freeze,
        picture_file_name:      Column.new(:picture_file_name,         :string).freeze,
        picture_file_size:      Column.new(:picture_file_size,        :integer).freeze,
        picture_updated_at:     Column.new(:picture_updated_at,      :datetime).freeze,
        reference_name:         Column.new(:reference_name,            :string).freeze,
        unit_name:              Column.new(:unit_name,                 :string, null: false).freeze,
        updated_at:             Column.new(:updated_at,              :datetime, null: false).freeze,
        updater_id:             Column.new(:updater_id,               :integer, references: :user).freeze,
        variety:                Column.new(:variety,                   :string, limit: 120, null: false).freeze
      }.with_indifferent_access.freeze,
      product_natures: {
        abilities_list:           Column.new(:abilities_list,                :text).freeze,
        active:                   Column.new(:active,                     :boolean, null: false).freeze,
        category_id:              Column.new(:category_id,                :integer, references: :product_nature_category, null: false).freeze,
        created_at:               Column.new(:created_at,                :datetime, null: false).freeze,
        creator_id:               Column.new(:creator_id,                 :integer, references: :user).freeze,
        derivative_of:            Column.new(:derivative_of,               :string, limit: 120).freeze,
        description:              Column.new(:description,                   :text).freeze,
        evolvable:                Column.new(:evolvable,                  :boolean, null: false).freeze,
        frozen_indicators_list:   Column.new(:frozen_indicators_list,        :text).freeze,
        id:                       Column.new(:id,                         :integer, null: false).freeze,
        linkage_points_list:      Column.new(:linkage_points_list,           :text).freeze,
        lock_version:             Column.new(:lock_version,               :integer, null: false, default: 0).freeze,
        name:                     Column.new(:name,                        :string, null: false).freeze,
        number:                   Column.new(:number,                      :string, limit: 30, null: false).freeze,
        picture_content_type:     Column.new(:picture_content_type,        :string).freeze,
        picture_file_name:        Column.new(:picture_file_name,           :string).freeze,
        picture_file_size:        Column.new(:picture_file_size,          :integer).freeze,
        picture_updated_at:       Column.new(:picture_updated_at,        :datetime).freeze,
        population_counting:      Column.new(:population_counting,         :string, null: false).freeze,
        reference_name:           Column.new(:reference_name,              :string, limit: 120).freeze,
        updated_at:               Column.new(:updated_at,                :datetime, null: false).freeze,
        updater_id:               Column.new(:updater_id,                 :integer, references: :user).freeze,
        variable_indicators_list: Column.new(:variable_indicators_list,      :text).freeze,
        variety:                  Column.new(:variety,                     :string, limit: 120, null: false).freeze
      }.with_indifferent_access.freeze,
      product_ownerships: {
        created_at:      Column.new(:created_at,       :datetime, null: false).freeze,
        creator_id:      Column.new(:creator_id,        :integer, references: :user).freeze,
        id:              Column.new(:id,                :integer, null: false).freeze,
        lock_version:    Column.new(:lock_version,      :integer, null: false, default: 0).freeze,
        nature:          Column.new(:nature,             :string, null: false).freeze,
        operation_id:    Column.new(:operation_id,      :integer, references: :operation).freeze,
        originator_id:   Column.new(:originator_id,     :integer, references: "originator_type").freeze,
        originator_type: Column.new(:originator_type,    :string).freeze,
        owner_id:        Column.new(:owner_id,          :integer, references: :entity).freeze,
        product_id:      Column.new(:product_id,        :integer, references: :product, null: false).freeze,
        started_at:      Column.new(:started_at,       :datetime).freeze,
        stopped_at:      Column.new(:stopped_at,       :datetime).freeze,
        updated_at:      Column.new(:updated_at,       :datetime, null: false).freeze,
        updater_id:      Column.new(:updater_id,        :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      product_phases: {
        category_id:     Column.new(:category_id,       :integer, references: :product_nature_category, null: false).freeze,
        created_at:      Column.new(:created_at,       :datetime, null: false).freeze,
        creator_id:      Column.new(:creator_id,        :integer, references: :user).freeze,
        id:              Column.new(:id,                :integer, null: false).freeze,
        lock_version:    Column.new(:lock_version,      :integer, null: false, default: 0).freeze,
        nature_id:       Column.new(:nature_id,         :integer, references: :product_nature, null: false).freeze,
        operation_id:    Column.new(:operation_id,      :integer, references: :operation).freeze,
        originator_id:   Column.new(:originator_id,     :integer, references: "originator_type").freeze,
        originator_type: Column.new(:originator_type,    :string).freeze,
        product_id:      Column.new(:product_id,        :integer, references: :product, null: false).freeze,
        started_at:      Column.new(:started_at,       :datetime).freeze,
        stopped_at:      Column.new(:stopped_at,       :datetime).freeze,
        updated_at:      Column.new(:updated_at,       :datetime, null: false).freeze,
        updater_id:      Column.new(:updater_id,        :integer, references: :user).freeze,
        variant_id:      Column.new(:variant_id,        :integer, references: :product_nature_variant, null: false).freeze
      }.with_indifferent_access.freeze,
      product_process_phases: {
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        description:  Column.new(:description,     :string).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        lock_version: Column.new(:lock_version,   :integer, null: false, default: 0).freeze,
        name:         Column.new(:name,            :string, null: false).freeze,
        nature:       Column.new(:nature,          :string, null: false).freeze,
        phase_delay:  Column.new(:phase_delay,     :string).freeze,
        position:     Column.new(:position,       :integer).freeze,
        process_id:   Column.new(:process_id,     :integer, references: :product_process, null: false).freeze,
        updated_at:   Column.new(:updated_at,    :datetime, null: false).freeze,
        updater_id:   Column.new(:updater_id,     :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      product_processes: {
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        description:  Column.new(:description,     :string).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        lock_version: Column.new(:lock_version,   :integer, null: false, default: 0).freeze,
        name:         Column.new(:name,            :string, null: false).freeze,
        nature:       Column.new(:nature,          :string, null: false).freeze,
        repeatable:   Column.new(:repeatable,     :boolean, null: false).freeze,
        updated_at:   Column.new(:updated_at,    :datetime, null: false).freeze,
        updater_id:   Column.new(:updater_id,     :integer, references: :user).freeze,
        variety:      Column.new(:variety,         :string, limit: 120, null: false).freeze
      }.with_indifferent_access.freeze,
      production_support_markers: {
        aim:                 Column.new(:aim,                    :string, null: false).freeze,
        boolean_value:       Column.new(:boolean_value,         :boolean, null: false).freeze,
        choice_value:        Column.new(:choice_value,           :string).freeze,
        created_at:          Column.new(:created_at,           :datetime, null: false).freeze,
        creator_id:          Column.new(:creator_id,            :integer, references: :user).freeze,
        decimal_value:       Column.new(:decimal_value,         :decimal, precision: 19, scale: 4).freeze,
        geometry_value:      Column.new(:geometry_value,        :spatial).freeze,
        id:                  Column.new(:id,                    :integer, null: false).freeze,
        indicator_datatype:  Column.new(:indicator_datatype,     :string, null: false).freeze,
        indicator_name:      Column.new(:indicator_name,         :string, null: false).freeze,
        lock_version:        Column.new(:lock_version,          :integer, null: false, default: 0).freeze,
        measure_value_unit:  Column.new(:measure_value_unit,     :string).freeze,
        measure_value_value: Column.new(:measure_value_value,   :decimal, precision: 19, scale: 4).freeze,
        multi_polygon_value: Column.new(:multi_polygon_value,   :spatial).freeze,
        point_value:         Column.new(:point_value,           :spatial).freeze,
        started_at:          Column.new(:started_at,           :datetime).freeze,
        stopped_at:          Column.new(:stopped_at,           :datetime).freeze,
        string_value:        Column.new(:string_value,             :text).freeze,
        support_id:          Column.new(:support_id,            :integer, references: :production_support, null: false).freeze,
        updated_at:          Column.new(:updated_at,           :datetime, null: false).freeze,
        updater_id:          Column.new(:updater_id,            :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      production_supports: {
        created_at:    Column.new(:created_at,     :datetime, null: false).freeze,
        creator_id:    Column.new(:creator_id,      :integer, references: :user).freeze,
        exclusive:     Column.new(:exclusive,       :boolean, null: false).freeze,
        id:            Column.new(:id,              :integer, null: false).freeze,
        irrigated:     Column.new(:irrigated,       :boolean, null: false).freeze,
        lock_version:  Column.new(:lock_version,    :integer, null: false, default: 0).freeze,
        production_id: Column.new(:production_id,   :integer, references: :production, null: false).freeze,
        started_at:    Column.new(:started_at,     :datetime).freeze,
        stopped_at:    Column.new(:stopped_at,     :datetime).freeze,
        storage_id:    Column.new(:storage_id,      :integer, references: :product, null: false).freeze,
        updated_at:    Column.new(:updated_at,     :datetime, null: false).freeze,
        updater_id:    Column.new(:updater_id,      :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      productions: {
        activity_id:    Column.new(:activity_id,      :integer, references: :activity, null: false).freeze,
        campaign_id:    Column.new(:campaign_id,      :integer, references: :campaign, null: false).freeze,
        created_at:     Column.new(:created_at,      :datetime, null: false).freeze,
        creator_id:     Column.new(:creator_id,       :integer, references: :user).freeze,
        id:             Column.new(:id,               :integer, null: false).freeze,
        lock_version:   Column.new(:lock_version,     :integer, null: false, default: 0).freeze,
        name:           Column.new(:name,              :string, null: false).freeze,
        position:       Column.new(:position,         :integer).freeze,
        started_at:     Column.new(:started_at,      :datetime).freeze,
        state:          Column.new(:state,             :string, null: false).freeze,
        static_support: Column.new(:static_support,   :boolean, null: false).freeze,
        stopped_at:     Column.new(:stopped_at,      :datetime).freeze,
        updated_at:     Column.new(:updated_at,      :datetime, null: false).freeze,
        updater_id:     Column.new(:updater_id,       :integer, references: :user).freeze,
        variant_id:     Column.new(:variant_id,       :integer, references: :product_nature_variant).freeze
      }.with_indifferent_access.freeze,
      products: {
        address_id:               Column.new(:address_id,                 :integer, references: :entity_address).freeze,
        asset_id:                 Column.new(:asset_id,                   :integer, references: :asset).freeze,
        born_at:                  Column.new(:born_at,                   :datetime).freeze,
        category_id:              Column.new(:category_id,                :integer, references: :product_nature_category, null: false).freeze,
        content_indicator_name:   Column.new(:content_indicator_name,      :string).freeze,
        content_indicator_unit:   Column.new(:content_indicator_unit,      :string).freeze,
        content_maximal_quantity: Column.new(:content_maximal_quantity,   :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        content_nature_id:        Column.new(:content_nature_id,          :integer, references: :product_nature).freeze,
        created_at:               Column.new(:created_at,                :datetime, null: false).freeze,
        creator_id:               Column.new(:creator_id,                 :integer, references: :user).freeze,
        dead_at:                  Column.new(:dead_at,                   :datetime).freeze,
        default_storage_id:       Column.new(:default_storage_id,         :integer, references: :product).freeze,
        derivative_of:            Column.new(:derivative_of,               :string, limit: 120).freeze,
        description:              Column.new(:description,                   :text).freeze,
        father_id:                Column.new(:father_id,                  :integer, references: :product).freeze,
        id:                       Column.new(:id,                         :integer, null: false).freeze,
        identification_number:    Column.new(:identification_number,       :string).freeze,
        initial_arrival_cause:    Column.new(:initial_arrival_cause,       :string, limit: 120).freeze,
        initial_container_id:     Column.new(:initial_container_id,       :integer, references: :product).freeze,
        initial_owner_id:         Column.new(:initial_owner_id,           :integer, references: :entity).freeze,
        initial_population:       Column.new(:initial_population,         :decimal, precision: 19, scale: 4, default: 0.0).freeze,
        lock_version:             Column.new(:lock_version,               :integer, null: false, default: 0).freeze,
        mother_id:                Column.new(:mother_id,                  :integer, references: :product).freeze,
        name:                     Column.new(:name,                        :string, null: false).freeze,
        nature_id:                Column.new(:nature_id,                  :integer, references: :product_nature, null: false).freeze,
        number:                   Column.new(:number,                      :string, null: false).freeze,
        parent_id:                Column.new(:parent_id,                  :integer, references: :product).freeze,
        picture_content_type:     Column.new(:picture_content_type,        :string).freeze,
        picture_file_name:        Column.new(:picture_file_name,           :string).freeze,
        picture_file_size:        Column.new(:picture_file_size,          :integer).freeze,
        picture_updated_at:       Column.new(:picture_updated_at,        :datetime).freeze,
        reservoir:                Column.new(:reservoir,                  :boolean, null: false).freeze,
        tracking_id:              Column.new(:tracking_id,                :integer, references: :tracking).freeze,
        type:                     Column.new(:type,                        :string).freeze,
        updated_at:               Column.new(:updated_at,                :datetime, null: false).freeze,
        updater_id:               Column.new(:updater_id,                 :integer, references: :user).freeze,
        variant_id:               Column.new(:variant_id,                 :integer, references: :product_nature_variant, null: false).freeze,
        variety:                  Column.new(:variety,                     :string, limit: 120, null: false).freeze,
        work_number:              Column.new(:work_number,                 :string).freeze
      }.with_indifferent_access.freeze,
      purchase_items: {
        account_id:        Column.new(:account_id,          :integer, references: :account, null: false).freeze,
        amount:            Column.new(:amount,              :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        annotation:        Column.new(:annotation,             :text).freeze,
        created_at:        Column.new(:created_at,         :datetime, null: false).freeze,
        creator_id:        Column.new(:creator_id,          :integer, references: :user).freeze,
        currency:          Column.new(:currency,             :string, limit: 3, null: false).freeze,
        id:                Column.new(:id,                  :integer, null: false).freeze,
        indicator_name:    Column.new(:indicator_name,       :string, limit: 120, null: false).freeze,
        label:             Column.new(:label,                  :text).freeze,
        lock_version:      Column.new(:lock_version,        :integer, null: false, default: 0).freeze,
        position:          Column.new(:position,            :integer).freeze,
        pretax_amount:     Column.new(:pretax_amount,       :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        purchase_id:       Column.new(:purchase_id,         :integer, references: :purchase, null: false).freeze,
        quantity:          Column.new(:quantity,            :decimal, precision: 19, scale: 4, null: false, default: 1.0).freeze,
        tax_id:            Column.new(:tax_id,              :integer, references: :tax, null: false).freeze,
        unit_price_amount: Column.new(:unit_price_amount,   :decimal, precision: 19, scale: 4, null: false).freeze,
        updated_at:        Column.new(:updated_at,         :datetime, null: false).freeze,
        updater_id:        Column.new(:updater_id,          :integer, references: :user).freeze,
        variant_id:        Column.new(:variant_id,          :integer, references: :product_nature_variant, null: false).freeze
      }.with_indifferent_access.freeze,
      purchase_natures: {
        active:          Column.new(:active,            :boolean, null: false, default: true).freeze,
        by_default:      Column.new(:by_default,        :boolean, null: false).freeze,
        created_at:      Column.new(:created_at,       :datetime, null: false).freeze,
        creator_id:      Column.new(:creator_id,        :integer, references: :user).freeze,
        currency:        Column.new(:currency,           :string, limit: 3, null: false).freeze,
        description:     Column.new(:description,          :text).freeze,
        id:              Column.new(:id,                :integer, null: false).freeze,
        journal_id:      Column.new(:journal_id,        :integer, references: :journal).freeze,
        lock_version:    Column.new(:lock_version,      :integer, null: false, default: 0).freeze,
        name:            Column.new(:name,               :string).freeze,
        updated_at:      Column.new(:updated_at,       :datetime, null: false).freeze,
        updater_id:      Column.new(:updater_id,        :integer, references: :user).freeze,
        with_accounting: Column.new(:with_accounting,   :boolean, null: false).freeze
      }.with_indifferent_access.freeze,
      purchases: {
        accounted_at:        Column.new(:accounted_at,         :datetime).freeze,
        affair_id:           Column.new(:affair_id,             :integer, references: :affair).freeze,
        amount:              Column.new(:amount,                :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        confirmed_on:        Column.new(:confirmed_on,             :date).freeze,
        created_at:          Column.new(:created_at,           :datetime, null: false).freeze,
        created_on:          Column.new(:created_on,               :date).freeze,
        creator_id:          Column.new(:creator_id,            :integer, references: :user).freeze,
        currency:            Column.new(:currency,               :string, limit: 3, null: false).freeze,
        delivery_address_id: Column.new(:delivery_address_id,   :integer, references: :entity_address).freeze,
        description:         Column.new(:description,              :text).freeze,
        id:                  Column.new(:id,                    :integer, null: false).freeze,
        invoiced_on:         Column.new(:invoiced_on,              :date).freeze,
        journal_entry_id:    Column.new(:journal_entry_id,      :integer, references: :journal_entry).freeze,
        lock_version:        Column.new(:lock_version,          :integer, null: false, default: 0).freeze,
        nature_id:           Column.new(:nature_id,             :integer, references: :purchase_nature).freeze,
        number:              Column.new(:number,                 :string, limit: 60, null: false).freeze,
        planned_on:          Column.new(:planned_on,               :date).freeze,
        pretax_amount:       Column.new(:pretax_amount,         :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        reference_number:    Column.new(:reference_number,       :string).freeze,
        responsible_id:      Column.new(:responsible_id,        :integer, references: :user).freeze,
        state:               Column.new(:state,                  :string, limit: 60).freeze,
        supplier_id:         Column.new(:supplier_id,           :integer, references: :entity, null: false).freeze,
        updated_at:          Column.new(:updated_at,           :datetime, null: false).freeze,
        updater_id:          Column.new(:updater_id,            :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      roles: {
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        lock_version: Column.new(:lock_version,   :integer, null: false, default: 0).freeze,
        name:         Column.new(:name,            :string, null: false).freeze,
        rights:       Column.new(:rights,            :text).freeze,
        updated_at:   Column.new(:updated_at,    :datetime, null: false).freeze,
        updater_id:   Column.new(:updater_id,     :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      sale_items: {
        account_id:           Column.new(:account_id,             :integer, references: :account).freeze,
        amount:               Column.new(:amount,                 :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        annotation:           Column.new(:annotation,                :text).freeze,
        created_at:           Column.new(:created_at,            :datetime, null: false).freeze,
        creator_id:           Column.new(:creator_id,             :integer, references: :user).freeze,
        credited_item_id:     Column.new(:credited_item_id,       :integer, references: :sale_item).freeze,
        currency:             Column.new(:currency,                :string, limit: 3, null: false).freeze,
        id:                   Column.new(:id,                     :integer, null: false).freeze,
        indicator_name:       Column.new(:indicator_name,          :string, limit: 120, null: false).freeze,
        label:                Column.new(:label,                     :text).freeze,
        lock_version:         Column.new(:lock_version,           :integer, null: false, default: 0).freeze,
        position:             Column.new(:position,               :integer).freeze,
        pretax_amount:        Column.new(:pretax_amount,          :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        price_id:             Column.new(:price_id,               :integer, references: :catalog_price, null: false).freeze,
        quantity:             Column.new(:quantity,               :decimal, precision: 19, scale: 4, null: false, default: 1.0).freeze,
        reduced_item_id:      Column.new(:reduced_item_id,        :integer, references: :sale_item).freeze,
        reduction_percentage: Column.new(:reduction_percentage,   :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        sale_id:              Column.new(:sale_id,                :integer, references: :sale, null: false).freeze,
        tax_id:               Column.new(:tax_id,                 :integer, references: :tax).freeze,
        unit_price_amount:    Column.new(:unit_price_amount,      :decimal, precision: 19, scale: 4).freeze,
        updated_at:           Column.new(:updated_at,            :datetime, null: false).freeze,
        updater_id:           Column.new(:updater_id,             :integer, references: :user).freeze,
        variant_id:           Column.new(:variant_id,             :integer, references: :product_nature_variant, null: false).freeze
      }.with_indifferent_access.freeze,
      sale_natures: {
        active:                  Column.new(:active,                    :boolean, null: false, default: true).freeze,
        by_default:              Column.new(:by_default,                :boolean, null: false).freeze,
        catalog_id:              Column.new(:catalog_id,                :integer, references: :catalog, null: false).freeze,
        created_at:              Column.new(:created_at,               :datetime, null: false).freeze,
        creator_id:              Column.new(:creator_id,                :integer, references: :user).freeze,
        currency:                Column.new(:currency,                   :string, limit: 3, null: false).freeze,
        description:             Column.new(:description,                  :text).freeze,
        downpayment:             Column.new(:downpayment,               :boolean, null: false).freeze,
        downpayment_minimum:     Column.new(:downpayment_minimum,       :decimal, precision: 19, scale: 4, default: 0.0).freeze,
        downpayment_percentage:  Column.new(:downpayment_percentage,    :decimal, precision: 19, scale: 4, default: 0.0).freeze,
        expiration_delay:        Column.new(:expiration_delay,           :string, null: false).freeze,
        id:                      Column.new(:id,                        :integer, null: false).freeze,
        journal_id:              Column.new(:journal_id,                :integer, references: :journal).freeze,
        lock_version:            Column.new(:lock_version,              :integer, null: false, default: 0).freeze,
        name:                    Column.new(:name,                       :string, null: false).freeze,
        payment_delay:           Column.new(:payment_delay,              :string, null: false).freeze,
        payment_mode_complement: Column.new(:payment_mode_complement,      :text).freeze,
        payment_mode_id:         Column.new(:payment_mode_id,           :integer, references: :incoming_payment_mode).freeze,
        sales_conditions:        Column.new(:sales_conditions,             :text).freeze,
        updated_at:              Column.new(:updated_at,               :datetime, null: false).freeze,
        updater_id:              Column.new(:updater_id,                :integer, references: :user).freeze,
        with_accounting:         Column.new(:with_accounting,           :boolean, null: false).freeze
      }.with_indifferent_access.freeze,
      sales: {
        accounted_at:        Column.new(:accounted_at,         :datetime).freeze,
        address_id:          Column.new(:address_id,            :integer, references: :entity_address).freeze,
        affair_id:           Column.new(:affair_id,             :integer, references: :affair).freeze,
        amount:              Column.new(:amount,                :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        annotation:          Column.new(:annotation,               :text).freeze,
        client_id:           Column.new(:client_id,             :integer, references: :entity, null: false).freeze,
        conclusion:          Column.new(:conclusion,               :text).freeze,
        confirmed_on:        Column.new(:confirmed_on,             :date).freeze,
        created_at:          Column.new(:created_at,           :datetime, null: false).freeze,
        created_on:          Column.new(:created_on,               :date, null: false).freeze,
        creator_id:          Column.new(:creator_id,            :integer, references: :user).freeze,
        credit:              Column.new(:credit,                :boolean, null: false).freeze,
        currency:            Column.new(:currency,               :string, limit: 3, null: false).freeze,
        delivery_address_id: Column.new(:delivery_address_id,   :integer, references: :entity_address).freeze,
        description:         Column.new(:description,              :text).freeze,
        downpayment_amount:  Column.new(:downpayment_amount,    :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        expiration_delay:    Column.new(:expiration_delay,       :string).freeze,
        expired_on:          Column.new(:expired_on,               :date).freeze,
        function_title:      Column.new(:function_title,         :string).freeze,
        has_downpayment:     Column.new(:has_downpayment,       :boolean, null: false).freeze,
        id:                  Column.new(:id,                    :integer, null: false).freeze,
        initial_number:      Column.new(:initial_number,         :string, limit: 60).freeze,
        introduction:        Column.new(:introduction,             :text).freeze,
        invoice_address_id:  Column.new(:invoice_address_id,    :integer, references: :entity_address).freeze,
        invoiced_on:         Column.new(:invoiced_on,              :date).freeze,
        journal_entry_id:    Column.new(:journal_entry_id,      :integer, references: :journal_entry).freeze,
        letter_format:       Column.new(:letter_format,         :boolean, null: false, default: true).freeze,
        lock_version:        Column.new(:lock_version,          :integer, null: false, default: 0).freeze,
        nature_id:           Column.new(:nature_id,             :integer, references: :sale_nature).freeze,
        number:              Column.new(:number,                 :string, limit: 60, null: false).freeze,
        origin_id:           Column.new(:origin_id,             :integer, references: :sale).freeze,
        payment_delay:       Column.new(:payment_delay,          :string, null: false).freeze,
        payment_on:          Column.new(:payment_on,               :date).freeze,
        pretax_amount:       Column.new(:pretax_amount,         :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        reference_number:    Column.new(:reference_number,       :string).freeze,
        responsible_id:      Column.new(:responsible_id,        :integer, references: :person).freeze,
        state:               Column.new(:state,                  :string, limit: 60, null: false).freeze,
        subject:             Column.new(:subject,                :string).freeze,
        transporter_id:      Column.new(:transporter_id,        :integer, references: :entity).freeze,
        updated_at:          Column.new(:updated_at,           :datetime, null: false).freeze,
        updater_id:          Column.new(:updater_id,            :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      schema_migrations: {
        version: Column.new(:version,    :string, null: false).freeze
      }.with_indifferent_access.freeze,
      sequences: {
        created_at:       Column.new(:created_at,        :datetime, null: false).freeze,
        creator_id:       Column.new(:creator_id,         :integer, references: :user).freeze,
        id:               Column.new(:id,                 :integer, null: false).freeze,
        last_cweek:       Column.new(:last_cweek,         :integer).freeze,
        last_month:       Column.new(:last_month,         :integer).freeze,
        last_number:      Column.new(:last_number,        :integer).freeze,
        last_year:        Column.new(:last_year,          :integer).freeze,
        lock_version:     Column.new(:lock_version,       :integer, null: false, default: 0).freeze,
        name:             Column.new(:name,                :string, null: false).freeze,
        number_format:    Column.new(:number_format,       :string, null: false).freeze,
        number_increment: Column.new(:number_increment,   :integer, null: false, default: 1).freeze,
        number_start:     Column.new(:number_start,       :integer, null: false, default: 1).freeze,
        period:           Column.new(:period,              :string, null: false, default: "number").freeze,
        updated_at:       Column.new(:updated_at,        :datetime, null: false).freeze,
        updater_id:       Column.new(:updater_id,         :integer, references: :user).freeze,
        usage:            Column.new(:usage,               :string).freeze
      }.with_indifferent_access.freeze,
      spatial_ref_sys: {
        auth_name: Column.new(:auth_name,    :string, limit: 256).freeze,
        auth_srid: Column.new(:auth_srid,   :integer).freeze,
        proj4text: Column.new(:proj4text,    :string, limit: 2048).freeze,
        srid:      Column.new(:srid,        :integer, null: false).freeze,
        srtext:    Column.new(:srtext,       :string, limit: 2048).freeze
      }.with_indifferent_access.freeze,
      subscription_natures: {
        actual_number:         Column.new(:actual_number,           :integer).freeze,
        created_at:            Column.new(:created_at,             :datetime, null: false).freeze,
        creator_id:            Column.new(:creator_id,              :integer, references: :user).freeze,
        description:           Column.new(:description,                :text).freeze,
        entity_link_direction: Column.new(:entity_link_direction,    :string, limit: 30).freeze,
        entity_link_nature:    Column.new(:entity_link_nature,       :string, limit: 120).freeze,
        id:                    Column.new(:id,                      :integer, null: false).freeze,
        lock_version:          Column.new(:lock_version,            :integer, null: false, default: 0).freeze,
        name:                  Column.new(:name,                     :string, null: false).freeze,
        nature:                Column.new(:nature,                   :string, null: false).freeze,
        reduction_percentage:  Column.new(:reduction_percentage,    :decimal, precision: 19, scale: 4).freeze,
        updated_at:            Column.new(:updated_at,             :datetime, null: false).freeze,
        updater_id:            Column.new(:updater_id,              :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      subscriptions: {
        address_id:        Column.new(:address_id,          :integer, references: :entity_address).freeze,
        created_at:        Column.new(:created_at,         :datetime, null: false).freeze,
        creator_id:        Column.new(:creator_id,          :integer, references: :user).freeze,
        description:       Column.new(:description,            :text).freeze,
        first_number:      Column.new(:first_number,        :integer).freeze,
        id:                Column.new(:id,                  :integer, null: false).freeze,
        last_number:       Column.new(:last_number,         :integer).freeze,
        lock_version:      Column.new(:lock_version,        :integer, null: false, default: 0).freeze,
        nature_id:         Column.new(:nature_id,           :integer, references: :subscription_nature).freeze,
        number:            Column.new(:number,               :string).freeze,
        product_nature_id: Column.new(:product_nature_id,   :integer, references: :product_nature).freeze,
        quantity:          Column.new(:quantity,            :decimal, precision: 19, scale: 4).freeze,
        sale_id:           Column.new(:sale_id,             :integer, references: :sale).freeze,
        sale_item_id:      Column.new(:sale_item_id,        :integer, references: :sale_item).freeze,
        started_on:        Column.new(:started_on,             :date).freeze,
        stopped_on:        Column.new(:stopped_on,             :date).freeze,
        subscriber_id:     Column.new(:subscriber_id,       :integer, references: :entity).freeze,
        suspended:         Column.new(:suspended,           :boolean, null: false).freeze,
        updated_at:        Column.new(:updated_at,         :datetime, null: false).freeze,
        updater_id:        Column.new(:updater_id,          :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      tax_declarations: {
        accounted_at:             Column.new(:accounted_at,              :datetime).freeze,
        acquisition_amount:       Column.new(:acquisition_amount,         :decimal, precision: 19, scale: 4).freeze,
        address:                  Column.new(:address,                     :string).freeze,
        amount:                   Column.new(:amount,                     :decimal, precision: 19, scale: 4).freeze,
        assimilated_taxes_amount: Column.new(:assimilated_taxes_amount,   :decimal, precision: 19, scale: 4).freeze,
        balance_amount:           Column.new(:balance_amount,             :decimal, precision: 19, scale: 4).freeze,
        collected_amount:         Column.new(:collected_amount,           :decimal, precision: 19, scale: 4).freeze,
        created_at:               Column.new(:created_at,                :datetime, null: false).freeze,
        creator_id:               Column.new(:creator_id,                 :integer, references: :user).freeze,
        declared_on:              Column.new(:declared_on,                   :date).freeze,
        deferred_payment:         Column.new(:deferred_payment,           :boolean).freeze,
        financial_year_id:        Column.new(:financial_year_id,          :integer, references: :financial_year).freeze,
        id:                       Column.new(:id,                         :integer, null: false).freeze,
        journal_entry_id:         Column.new(:journal_entry_id,           :integer, references: :journal_entry).freeze,
        lock_version:             Column.new(:lock_version,               :integer, null: false, default: 0).freeze,
        nature:                   Column.new(:nature,                      :string, null: false, default: "normal").freeze,
        paid_amount:              Column.new(:paid_amount,                :decimal, precision: 19, scale: 4).freeze,
        paid_on:                  Column.new(:paid_on,                       :date).freeze,
        started_on:               Column.new(:started_on,                    :date).freeze,
        stopped_on:               Column.new(:stopped_on,                    :date).freeze,
        updated_at:               Column.new(:updated_at,                :datetime, null: false).freeze,
        updater_id:               Column.new(:updater_id,                 :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      taxes: {
        amount:               Column.new(:amount,                 :decimal, precision: 19, scale: 4, null: false, default: 0.0).freeze,
        collect_account_id:   Column.new(:collect_account_id,     :integer, references: :account).freeze,
        computation_method:   Column.new(:computation_method,      :string, limit: 20, null: false).freeze,
        created_at:           Column.new(:created_at,            :datetime, null: false).freeze,
        creator_id:           Column.new(:creator_id,             :integer, references: :user).freeze,
        deduction_account_id: Column.new(:deduction_account_id,   :integer, references: :account).freeze,
        description:          Column.new(:description,               :text).freeze,
        id:                   Column.new(:id,                     :integer, null: false).freeze,
        included:             Column.new(:included,               :boolean, null: false).freeze,
        lock_version:         Column.new(:lock_version,           :integer, null: false, default: 0).freeze,
        name:                 Column.new(:name,                    :string, null: false).freeze,
        reductible:           Column.new(:reductible,             :boolean, null: false, default: true).freeze,
        reference_name:       Column.new(:reference_name,          :string, limit: 120).freeze,
        updated_at:           Column.new(:updated_at,            :datetime, null: false).freeze,
        updater_id:           Column.new(:updater_id,             :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      teams: {
        created_at:       Column.new(:created_at,        :datetime, null: false).freeze,
        creator_id:       Column.new(:creator_id,         :integer, references: :user).freeze,
        depth:            Column.new(:depth,              :integer, null: false, default: 0).freeze,
        description:      Column.new(:description,           :text).freeze,
        id:               Column.new(:id,                 :integer, null: false).freeze,
        lft:              Column.new(:lft,                :integer).freeze,
        lock_version:     Column.new(:lock_version,       :integer, null: false, default: 0).freeze,
        name:             Column.new(:name,                :string, null: false).freeze,
        parent_id:        Column.new(:parent_id,          :integer, references: :team).freeze,
        rgt:              Column.new(:rgt,                :integer).freeze,
        sales_conditions: Column.new(:sales_conditions,      :text).freeze,
        updated_at:       Column.new(:updated_at,        :datetime, null: false).freeze,
        updater_id:       Column.new(:updater_id,         :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      trackings: {
        active:       Column.new(:active,         :boolean, null: false, default: true).freeze,
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        description:  Column.new(:description,       :text).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        lock_version: Column.new(:lock_version,   :integer, null: false, default: 0).freeze,
        name:         Column.new(:name,            :string, null: false).freeze,
        producer_id:  Column.new(:producer_id,    :integer, references: :entity).freeze,
        product_id:   Column.new(:product_id,     :integer, references: :product).freeze,
        serial:       Column.new(:serial,          :string).freeze,
        updated_at:   Column.new(:updated_at,    :datetime, null: false).freeze,
        updater_id:   Column.new(:updater_id,     :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      transfers: {
        accounted_at:     Column.new(:accounted_at,      :datetime).freeze,
        affair_id:        Column.new(:affair_id,          :integer, references: :affair).freeze,
        amount:           Column.new(:amount,             :decimal, precision: 19, scale: 4, null: false).freeze,
        client_id:        Column.new(:client_id,          :integer, references: :entity, null: false).freeze,
        created_at:       Column.new(:created_at,        :datetime, null: false).freeze,
        created_on:       Column.new(:created_on,            :date).freeze,
        creator_id:       Column.new(:creator_id,         :integer, references: :user).freeze,
        currency:         Column.new(:currency,            :string, limit: 3, null: false).freeze,
        description:      Column.new(:description,         :string).freeze,
        id:               Column.new(:id,                 :integer, null: false).freeze,
        journal_entry_id: Column.new(:journal_entry_id,   :integer, references: :journal_entry).freeze,
        label:            Column.new(:label,               :string).freeze,
        lock_version:     Column.new(:lock_version,       :integer, null: false, default: 0).freeze,
        started_on:       Column.new(:started_on,            :date).freeze,
        stopped_on:       Column.new(:stopped_on,            :date).freeze,
        updated_at:       Column.new(:updated_at,        :datetime, null: false).freeze,
        updater_id:       Column.new(:updater_id,         :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      transports: {
        amount:           Column.new(:amount,             :decimal, precision: 19, scale: 4, null: false).freeze,
        created_at:       Column.new(:created_at,        :datetime, null: false).freeze,
        created_on:       Column.new(:created_on,            :date).freeze,
        creator_id:       Column.new(:creator_id,         :integer, references: :user).freeze,
        description:      Column.new(:description,           :text).freeze,
        id:               Column.new(:id,                 :integer, null: false).freeze,
        lock_version:     Column.new(:lock_version,       :integer, null: false, default: 0).freeze,
        number:           Column.new(:number,              :string).freeze,
        pretax_amount:    Column.new(:pretax_amount,      :decimal, precision: 19, scale: 4, null: false).freeze,
        purchase_id:      Column.new(:purchase_id,        :integer, references: :purchase).freeze,
        reference_number: Column.new(:reference_number,    :string).freeze,
        responsible_id:   Column.new(:responsible_id,     :integer, references: :user).freeze,
        transport_on:     Column.new(:transport_on,          :date).freeze,
        transporter_id:   Column.new(:transporter_id,     :integer, references: :entity, null: false).freeze,
        updated_at:       Column.new(:updated_at,        :datetime, null: false).freeze,
        updater_id:       Column.new(:updater_id,         :integer, references: :user).freeze,
        weight:           Column.new(:weight,             :decimal, precision: 19, scale: 4).freeze
      }.with_indifferent_access.freeze,
      users: {
        administrator:                          Column.new(:administrator,                            :boolean, null: false, default: true).freeze,
        authentication_token:                   Column.new(:authentication_token,                      :string).freeze,
        commercial:                             Column.new(:commercial,                               :boolean, null: false).freeze,
        confirmation_sent_at:                   Column.new(:confirmation_sent_at,                    :datetime).freeze,
        confirmation_token:                     Column.new(:confirmation_token,                        :string).freeze,
        confirmed_at:                           Column.new(:confirmed_at,                            :datetime).freeze,
        created_at:                             Column.new(:created_at,                              :datetime, null: false).freeze,
        creator_id:                             Column.new(:creator_id,                               :integer, references: :user).freeze,
        current_sign_in_at:                     Column.new(:current_sign_in_at,                      :datetime).freeze,
        current_sign_in_ip:                     Column.new(:current_sign_in_ip,                        :string).freeze,
        description:                            Column.new(:description,                                 :text).freeze,
        email:                                  Column.new(:email,                                     :string, null: false).freeze,
        employed:                               Column.new(:employed,                                 :boolean, null: false).freeze,
        employment:                             Column.new(:employment,                                :string).freeze,
        encrypted_password:                     Column.new(:encrypted_password,                        :string, null: false, default: "").freeze,
        establishment_id:                       Column.new(:establishment_id,                         :integer, references: :establishment).freeze,
        failed_attempts:                        Column.new(:failed_attempts,                          :integer, default: 0).freeze,
        first_name:                             Column.new(:first_name,                                :string, null: false).freeze,
        id:                                     Column.new(:id,                                       :integer, null: false).freeze,
        language:                               Column.new(:language,                                  :string, limit: 3, null: false).freeze,
        last_name:                              Column.new(:last_name,                                 :string, null: false).freeze,
        last_sign_in_at:                        Column.new(:last_sign_in_at,                         :datetime).freeze,
        last_sign_in_ip:                        Column.new(:last_sign_in_ip,                           :string).freeze,
        lock_version:                           Column.new(:lock_version,                             :integer, null: false, default: 0).freeze,
        locked:                                 Column.new(:locked,                                   :boolean, null: false).freeze,
        locked_at:                              Column.new(:locked_at,                               :datetime).freeze,
        maximal_grantable_reduction_percentage: Column.new(:maximal_grantable_reduction_percentage,   :decimal, precision: 19, scale: 4, null: false, default: 5.0).freeze,
        person_id:                              Column.new(:person_id,                                :integer, references: :person).freeze,
        remember_created_at:                    Column.new(:remember_created_at,                     :datetime).freeze,
        reset_password_sent_at:                 Column.new(:reset_password_sent_at,                  :datetime).freeze,
        reset_password_token:                   Column.new(:reset_password_token,                      :string).freeze,
        rights:                                 Column.new(:rights,                                      :text).freeze,
        role_id:                                Column.new(:role_id,                                  :integer, references: :role, null: false).freeze,
        sign_in_count:                          Column.new(:sign_in_count,                            :integer, default: 0).freeze,
        team_id:                                Column.new(:team_id,                                  :integer, references: :team).freeze,
        unconfirmed_email:                      Column.new(:unconfirmed_email,                         :string).freeze,
        unlock_token:                           Column.new(:unlock_token,                              :string).freeze,
        updated_at:                             Column.new(:updated_at,                              :datetime, null: false).freeze,
        updater_id:                             Column.new(:updater_id,                               :integer, references: :user).freeze
      }.with_indifferent_access.freeze,
      versions: {
        created_at:   Column.new(:created_at,    :datetime, null: false).freeze,
        creator_id:   Column.new(:creator_id,     :integer, references: :user).freeze,
        creator_name: Column.new(:creator_name,    :string).freeze,
        event:        Column.new(:event,           :string, null: false).freeze,
        id:           Column.new(:id,             :integer, null: false).freeze,
        item_changes: Column.new(:item_changes,      :text).freeze,
        item_id:      Column.new(:item_id,        :integer, references: "item_type", null: false).freeze,
        item_object:  Column.new(:item_object,       :text).freeze,
        item_type:    Column.new(:item_type,       :string, null: false).freeze
      }.with_indifferent_access.freeze
    }.with_indifferent_access.freeze

  end
end
