# Autogenerated from Ekylibre (`rake clean:models` or `rake clean`)
module Ekylibre
  mattr_reader :models, :references, :schema
  # List of all models
  @@models = [:account, :account_balance, :activity, :affair, :analytic_repartition, :animal, :animal_group, :animal_medicine, :area, :asset, :asset_depreciation, :bank_statement, :bioproduct, :building, :building_division, :campaign, :cash, :cash_transfer, :cultivable_land_parcel, :custom_field, :custom_field_choice, :department, :deposit, :deposit_item, :district, :document, :document_archive, :document_template, :easement, :entity, :entity_address, :entity_link, :equipment, :establishment, :event, :financial_year, :fungus, :immatter, :incident, :incoming_delivery, :incoming_delivery_item, :incoming_delivery_mode, :incoming_payment, :incoming_payment_mode, :inventory, :inventory_item, :journal, :journal_entry, :journal_entry_item, :land_parcel, :land_parcel_cluster, :land_parcel_group, :legal_entity, :listing, :listing_node, :listing_node_item, :log, :mandate, :matter, :medicine, :meeting, :meeting_nature, :meeting_participation, :mineral_matter, :observation, :operation, :operation_task, :organic_matter, :outgoing_delivery, :outgoing_delivery_item, :outgoing_delivery_mode, :outgoing_payment, :outgoing_payment_mode, :person, :plant, :plant_medicine, :preference, :prescription, :procedure, :procedure_variable, :product, :product_group, :product_indicator_datum, :product_link, :product_localization, :product_membership, :product_move, :product_nature, :product_nature_variant, :product_nature_variant_indicator_datum, :product_price, :product_price_listing, :product_process, :product_process_phase, :production, :production_support, :profession, :property_title, :purchase, :purchase_item, :purchase_nature, :role, :sale, :sale_item, :sale_nature, :sequence, :service, :settlement, :sub_zone, :subscription, :subscription_nature, :tax, :tax_declaration, :tracking, :transfer, :transport, :user, :worker, :zone, :zone_property_title]

  # List of all references
  @@references = {
    :account => {
      :creator_id => :user,
      :updater_id => :user
    },
    :account_balance => {
      :account_id => :account,
      :creator_id => :user,
      :financial_year_id => :financial_year,
      :updater_id => :user
    },
    :activity => {
      :creator_id => :user,
      :parent_id => :activity,
      :updater_id => :user
    },
    :affair => {
      :creator_id => :user,
      :journal_entry_id => :journal_entry,
      :updater_id => :user
    },
    :analytic_repartition => {
      :creator_id => :user,
      :journal_entry_item_id => :journal_entry_item,
      :production_id => :production,
      :updater_id => :user
    },
    :animal => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :animal,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :animal_group => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :animal_group,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :animal_medicine => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :animal_medicine,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :area => {
      :creator_id => :user,
      :district_id => :district,
      :updater_id => :user
    },
    :asset => {
      :allocation_account_id => :account,
      :charges_account_id => :account,
      :creator_id => :user,
      :journal_id => :journal,
      :purchase_id => :purchase,
      :purchase_item_id => :purchase_item,
      :sale_id => :sale,
      :sale_item_id => :sale_item,
      :updater_id => :user
    },
    :asset_depreciation => {
      :asset_id => :asset,
      :creator_id => :user,
      :financial_year_id => :financial_year,
      :journal_entry_id => :journal_entry,
      :updater_id => :user
    },
    :bank_statement => {
      :cash_id => :cash,
      :creator_id => :user,
      :updater_id => :user
    },
    :bioproduct => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :bioproduct,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :building => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :building,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :building_division => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :building_division,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :campaign => {
      :creator_id => :user,
      :updater_id => :user
    },
    :cash => {
      :account_id => :account,
      :creator_id => :user,
      :journal_id => :journal,
      :updater_id => :user
    },
    :cash_transfer => {
      :creator_id => :user,
      :emitter_cash_id => :cash,
      :emitter_journal_entry_id => :journal_entry,
      :receiver_cash_id => :cash,
      :receiver_journal_entry_id => :journal_entry,
      :updater_id => :user
    },
    :cultivable_land_parcel => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :cultivable_land_parcel,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :custom_field => {
      :creator_id => :user,
      :updater_id => :user
    },
    :custom_field_choice => {
      :creator_id => :user,
      :custom_field_id => :custom_field,
      :updater_id => :user
    },
    :department => {
      :creator_id => :user,
      :parent_id => :department,
      :updater_id => :user
    },
    :deposit => {
      :cash_id => :cash,
      :creator_id => :user,
      :journal_entry_id => :journal_entry,
      :mode_id => :incoming_payment_mode,
      :responsible_id => :person,
      :updater_id => :user
    },
    :deposit_item => {
      :creator_id => :user,
      :deposit_id => :deposit,
      :updater_id => :user
    },
    :district => {
      :creator_id => :user,
      :updater_id => :user
    },
    :document => {
      :creator_id => :user,
      :updater_id => :user
    },
    :document_archive => {
      :creator_id => :user,
      :document_id => :document,
      :template_id => :template,
      :updater_id => :user
    },
    :document_template => {
      :creator_id => :user,
      :updater_id => :user
    },
    :easement => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :easement,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :entity => {
      :attorney_account_id => :account,
      :client_account_id => :account,
      :creator_id => :user,
      :payment_mode_id => :incoming_payment_mode,
      :proposer_id => :person,
      :responsible_id => :person,
      :sale_price_listing_id => :product_price_listing,
      :supplier_account_id => :account,
      :updater_id => :user
    },
    :entity_address => {
      :creator_id => :user,
      :entity_id => :entity,
      :mail_area_id => :area,
      :updater_id => :user
    },
    :entity_link => {
      :creator_id => :user,
      :entity_1_id => :entity,
      :entity_2_id => :entity,
      :updater_id => :user
    },
    :equipment => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :equipment,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :establishment => {
      :creator_id => :user,
      :updater_id => :user
    },
    :event => {
      :creator_id => :user,
      :meeting_nature_id => :meeting_nature,
      :procedure_id => :procedure,
      :updater_id => :user
    },
    :financial_year => {
      :creator_id => :user,
      :last_journal_entry_id => :journal_entry,
      :updater_id => :user
    },
    :fungus => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :fungus,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :immatter => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :immatter,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :incident => {
      :creator_id => :user,
      :target_id => "target_type",
      :updater_id => :user
    },
    :incoming_delivery => {
      :address_id => :entity_address,
      :creator_id => :user,
      :mode_id => :incoming_delivery_mode,
      :purchase_id => :purchase,
      :sender_id => :entity,
      :updater_id => :user
    },
    :incoming_delivery_item => {
      :container_id => :product,
      :creator_id => :user,
      :delivery_id => :incoming_delivery,
      :move_id => :product_move,
      :product_id => :product,
      :purchase_item_id => :purchase_item,
      :updater_id => :user
    },
    :incoming_delivery_mode => {
      :creator_id => :user,
      :updater_id => :user
    },
    :incoming_payment => {
      :affair_id => :affair,
      :commission_account_id => :account,
      :creator_id => :user,
      :deposit_id => :deposit,
      :journal_entry_id => :journal_entry,
      :mode_id => :incoming_payment_mode,
      :payer_id => :entity,
      :responsible_id => :person,
      :updater_id => :user
    },
    :incoming_payment_mode => {
      :attorney_journal_id => :journal,
      :cash_id => :cash,
      :commission_account_id => :account,
      :creator_id => :user,
      :depositables_account_id => :account,
      :depositables_journal_id => :journal,
      :updater_id => :user
    },
    :inventory => {
      :creator_id => :user,
      :journal_entry_id => :journal_entry,
      :responsible_id => :person,
      :updater_id => :user
    },
    :inventory_item => {
      :creator_id => :user,
      :inventory_id => :inventory,
      :move_id => :product_move,
      :product_id => :product,
      :tracking_id => :tracking,
      :updater_id => :user,
      :warehouse_id => :warehouse
    },
    :journal => {
      :creator_id => :user,
      :updater_id => :user
    },
    :journal_entry => {
      :creator_id => :user,
      :financial_year_id => :financial_year,
      :journal_id => :journal,
      :resource_id => "resource_type",
      :updater_id => :user
    },
    :journal_entry_item => {
      :account_id => :account,
      :bank_statement_id => :bank_statement,
      :creator_id => :user,
      :entry_id => :journal_entry,
      :financial_year_id => :financial_year,
      :journal_id => :journal,
      :updater_id => :user
    },
    :land_parcel => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :land_parcel,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :land_parcel_cluster => {
      :address_id => :address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :land_parcel_cluster,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :land_parcel_group => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :land_parcel_group,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :legal_entity => {
      :attorney_account_id => :account,
      :client_account_id => :account,
      :creator_id => :user,
      :payment_mode_id => :incoming_payment_mode,
      :proposer_id => :person,
      :responsible_id => :person,
      :sale_price_listing_id => :product_price_listing,
      :supplier_account_id => :account,
      :updater_id => :user
    },
    :listing => {
      :creator_id => :user,
      :updater_id => :user
    },
    :listing_node => {
      :creator_id => :user,
      :item_listing_id => :listing,
      :item_listing_node_id => :listing_node,
      :listing_id => :listing,
      :parent_id => :listing_node,
      :updater_id => :user
    },
    :listing_node_item => {
      :creator_id => :user,
      :node_id => :listing_node,
      :updater_id => :user
    },
    :log => {
      :creator_id => :user,
      :origin_id => "origin_type",
      :owner_id => "owner_type",
      :updater_id => :user
    },
    :mandate => {
      :creator_id => :user,
      :entity_id => :entity,
      :updater_id => :user
    },
    :matter => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :matter,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :medicine => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :medicine,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :meeting => {
      :creator_id => :user,
      :meeting_nature_id => :meeting_nature,
      :procedure_id => :procedure,
      :updater_id => :user
    },
    :meeting_nature => {
      :creator_id => :user,
      :updater_id => :user
    },
    :meeting_participation => {
      :creator_id => :user,
      :meeting_id => :meeting,
      :participant_id => :entity,
      :updater_id => :user
    },
    :mineral_matter => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :mineral_matter,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :observation => {
      :author_id => :user,
      :creator_id => :user,
      :subject_id => "subject_type",
      :updater_id => :user
    },
    :operation => {
      :creator_id => :user,
      :meeting_nature_id => :meeting_nature,
      :procedure_id => :procedure,
      :updater_id => :user
    },
    :operation_task => {
      :creator_id => :user,
      :indicator_datum_id => :product_indicator_datum,
      :operand_id => :product,
      :operation_id => :operation,
      :parent_id => :operation_task,
      :subject_id => :product,
      :updater_id => :user
    },
    :organic_matter => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :organic_matter,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :outgoing_delivery => {
      :address_id => :entity_address,
      :creator_id => :user,
      :mode_id => :outgoing_delivery_mode,
      :recipient_id => :entity,
      :sale_id => :sale,
      :transport_id => :transport,
      :transporter_id => :entity,
      :updater_id => :user
    },
    :outgoing_delivery_item => {
      :creator_id => :user,
      :delivery_id => :outgoing_delivery,
      :move_id => :product_move,
      :product_id => :product,
      :sale_item_id => :sale_item,
      :updater_id => :user
    },
    :outgoing_delivery_mode => {
      :creator_id => :user,
      :updater_id => :user
    },
    :outgoing_payment => {
      :affair_id => :affair,
      :cash_id => :cash,
      :creator_id => :user,
      :journal_entry_id => :journal_entry,
      :mode_id => :outgoing_payment_mode,
      :payee_id => :entity,
      :responsible_id => :person,
      :updater_id => :user
    },
    :outgoing_payment_mode => {
      :attorney_journal_id => :journal,
      :cash_id => :cash,
      :creator_id => :user,
      :updater_id => :user
    },
    :person => {
      :attorney_account_id => :account,
      :client_account_id => :account,
      :creator_id => :user,
      :payment_mode_id => :outoing_payment_mode,
      :proposer_id => :person,
      :responsible_id => :person,
      :sale_price_listing_id => :product_price_listing,
      :supplier_account_id => :account,
      :updater_id => :user
    },
    :plant => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :plant,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :plant_medicine => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :plant_medicine,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :preference => {
      :creator_id => :user,
      :record_value_id => "record_value_type",
      :updater_id => :user,
      :user_id => :user
    },
    :prescription => {
      :creator_id => :user,
      :document_id => :document,
      :prescriptor_id => :entity,
      :updater_id => :user
    },
    :procedure => {
      :creator_id => :user,
      :incident_id => :incident,
      :prescription_id => :prescription,
      :production_id => :production,
      :provisional_procedure_id => :procedure,
      :updater_id => :user
    },
    :procedure_variable => {
      :creator_id => :user,
      :procedure_id => :procedure,
      :target_id => :product,
      :updater_id => :user
    },
    :product => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :product,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :product_group => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :product_group,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :product_indicator_datum => {
      :creator_id => :user,
      :product_id => :product,
      :updater_id => :user
    },
    :product_link => {
      :carried_id => :product,
      :carrier_id => :product,
      :creator_id => :user,
      :operation_task_id => :operation_task,
      :updater_id => :user
    },
    :product_localization => {
      :container_id => :product,
      :creator_id => :user,
      :operation_task_id => :operation_task,
      :product_id => :product,
      :updater_id => :user
    },
    :product_membership => {
      :creator_id => :user,
      :group_id => :product_group,
      :member_id => :product,
      :operation_task_id => :operation_task,
      :updater_id => :user
    },
    :product_move => {
      :creator_id => :user,
      :product_id => :product,
      :updater_id => :user
    },
    :product_nature => {
      :asset_account_id => :account,
      :charge_account_id => :account,
      :creator_id => :user,
      :product_account_id => :account,
      :stock_account_id => :account,
      :subscription_nature_id => :subscription_nature,
      :updater_id => :user
    },
    :product_nature_variant => {
      :creator_id => :user,
      :nature_id => :product_nature,
      :updater_id => :user
    },
    :product_nature_variant_indicator_datum => {
      :creator_id => :user,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :product_price => {
      :creator_id => :user,
      :listing_id => :listing,
      :product_id => :product,
      :supplier_id => :entity,
      :tax_id => :tax,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :product_price_listing => {
      :creator_id => :user,
      :updater_id => :user
    },
    :product_process => {
      :creator_id => :user,
      :updater_id => :user
    },
    :product_process_phase => {
      :creator_id => :user,
      :process_id => :product_process,
      :updater_id => :user
    },
    :production => {
      :activity_id => :activity,
      :campaign_id => :campaign,
      :creator_id => :user,
      :product_nature_id => :product_nature,
      :updater_id => :user
    },
    :production_support => {
      :creator_id => :user,
      :production_id => :production,
      :storage_id => :product,
      :updater_id => :user
    },
    :profession => {
      :creator_id => :user,
      :updater_id => :user
    },
    :property_title => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :property_title,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :purchase => {
      :affair_id => :affair,
      :creator_id => :user,
      :delivery_address_id => :entity_address,
      :journal_entry_id => :journal_entry,
      :nature_id => :purchase_nature,
      :responsible_id => :person,
      :supplier_id => :entity,
      :updater_id => :user
    },
    :purchase_item => {
      :account_id => :account,
      :creator_id => :user,
      :price_id => :product_price,
      :price_template_id => :product_price_template,
      :product_id => :product,
      :purchase_id => :purchase,
      :tax_id => :tax,
      :tracking_id => :tracking,
      :updater_id => :user,
      :warehouse_id => :warehouse
    },
    :purchase_nature => {
      :creator_id => :user,
      :journal_id => :journal,
      :updater_id => :user
    },
    :role => {
      :creator_id => :user,
      :updater_id => :user
    },
    :sale => {
      :address_id => :entity_address,
      :affair_id => :affair,
      :client_id => :entity,
      :creator_id => :user,
      :delivery_address_id => :entity_address,
      :invoice_address_id => :entity_address,
      :journal_entry_id => :journal_entry,
      :nature_id => :sale_nature,
      :origin_id => :sale,
      :responsible_id => :person,
      :transporter_id => :entity,
      :updater_id => :user
    },
    :sale_item => {
      :account_id => :account,
      :creator_id => :user,
      :entity_id => :entity,
      :origin_id => :sale_item,
      :price_id => :product_price,
      :price_template_id => :product_price_template,
      :product_id => :product,
      :reduction_origin_id => :sale_item,
      :sale_id => :sale,
      :tax_id => :tax,
      :tracking_id => :tracking,
      :updater_id => :user,
      :warehouse_id => :warehouse
    },
    :sale_nature => {
      :creator_id => :user,
      :journal_id => :journal,
      :payment_mode_id => :incoming_payment_mode,
      :updater_id => :user
    },
    :sequence => {
      :creator_id => :user,
      :updater_id => :user
    },
    :service => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :service,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :settlement => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :settlement,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :sub_zone => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :sub_zone,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :subscription => {
      :address_id => :entity_address,
      :creator_id => :user,
      :nature_id => :subscription_nature,
      :product_nature_id => :product_nature,
      :sale_id => :sale,
      :sale_item_id => :sale_item,
      :subscriber_id => :entity,
      :updater_id => :user
    },
    :subscription_nature => {
      :creator_id => :user,
      :updater_id => :user
    },
    :tax => {
      :collected_account_id => :account,
      :creator_id => :user,
      :paid_account_id => :account,
      :updater_id => :user
    },
    :tax_declaration => {
      :creator_id => :user,
      :financial_year_id => :financial_year,
      :journal_entry_id => :journal_entry,
      :updater_id => :user
    },
    :tracking => {
      :creator_id => :user,
      :producer_id => :entity,
      :product_id => :product,
      :updater_id => :user
    },
    :transfer => {
      :affair_id => :affair,
      :client_id => :entity,
      :creator_id => :user,
      :journal_entry_id => :journal_entry,
      :updater_id => :user
    },
    :transport => {
      :creator_id => :user,
      :purchase_id => :purchase,
      :responsible_id => :person,
      :transporter_id => :entity,
      :updater_id => :user
    },
    :user => {
      :creator_id => :user,
      :department_id => :department,
      :establishment_id => :establishment,
      :person_id => :person,
      :profession_id => :profession,
      :role_id => :role,
      :updater_id => :user
    },
    :worker => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :worker,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :zone => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :zone,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    },
    :zone_property_title => {
      :address_id => :entity_address,
      :asset_id => :asset,
      :content_nature_id => :product_nature,
      :creator_id => :user,
      :father_id => :product,
      :mother_id => :product,
      :nature_id => :product_nature,
      :owner_id => :entity,
      :parent_id => :zone_property_title,
      :tracking_id => :tracking,
      :updater_id => :user,
      :variant_id => :product_nature_variant
    }
  }

  # Schema
  @@schema = HashWithIndifferentAccess.new(
    account_balances: HashWithIndifferentAccess.new(
      account_id: Ekylibre::Record::Column.new(:account_id, :integer, null: false),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      financial_year_id: Ekylibre::Record::Column.new(:financial_year_id, :integer, null: false),
      global_balance: Ekylibre::Record::Column.new(:global_balance, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      global_count: Ekylibre::Record::Column.new(:global_count, :integer, null: false, default: 0),
      global_credit: Ekylibre::Record::Column.new(:global_credit, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      global_debit: Ekylibre::Record::Column.new(:global_debit, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      local_balance: Ekylibre::Record::Column.new(:local_balance, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      local_count: Ekylibre::Record::Column.new(:local_count, :integer, null: false, default: 0),
      local_credit: Ekylibre::Record::Column.new(:local_credit, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      local_debit: Ekylibre::Record::Column.new(:local_debit, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    accounts: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      debtor: Ekylibre::Record::Column.new(:debtor, :boolean, null: false),
      description: Ekylibre::Record::Column.new(:description, :text),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      label: Ekylibre::Record::Column.new(:label, :string, null: false),
      last_letter: Ekylibre::Record::Column.new(:last_letter, :string, limit: 8),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, limit: 208, null: false),
      number: Ekylibre::Record::Column.new(:number, :string, limit: 16, null: false),
      reconcilable: Ekylibre::Record::Column.new(:reconcilable, :boolean, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      usages: Ekylibre::Record::Column.new(:usages, :text)
    ),
    activities: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      depth: Ekylibre::Record::Column.new(:depth, :integer),
      description: Ekylibre::Record::Column.new(:description, :string),
      family: Ekylibre::Record::Column.new(:family, :string, null: false),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lft: Ekylibre::Record::Column.new(:lft, :integer),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      nature: Ekylibre::Record::Column.new(:nature, :string, null: false),
      parent_id: Ekylibre::Record::Column.new(:parent_id, :integer),
      rgt: Ekylibre::Record::Column.new(:rgt, :integer),
      started_at: Ekylibre::Record::Column.new(:started_at, :datetime),
      stopped_at: Ekylibre::Record::Column.new(:stopped_at, :datetime),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    affairs: HashWithIndifferentAccess.new(
      accounted_at: Ekylibre::Record::Column.new(:accounted_at, :datetime),
      closed: Ekylibre::Record::Column.new(:closed, :boolean, null: false),
      closed_at: Ekylibre::Record::Column.new(:closed_at, :datetime),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      credit: Ekylibre::Record::Column.new(:credit, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      currency: Ekylibre::Record::Column.new(:currency, :string, limit: 3, null: false),
      debit: Ekylibre::Record::Column.new(:debit, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      journal_entry_id: Ekylibre::Record::Column.new(:journal_entry_id, :integer),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    analytic_repartitions: HashWithIndifferentAccess.new(
      affected_on: Ekylibre::Record::Column.new(:affected_on, :date, null: false),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :text),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      journal_entry_item_id: Ekylibre::Record::Column.new(:journal_entry_item_id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      percentage: Ekylibre::Record::Column.new(:percentage, :decimal, precision: 19, scale: 4, null: false),
      production_id: Ekylibre::Record::Column.new(:production_id, :integer, null: false),
      state: Ekylibre::Record::Column.new(:state, :string, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    areas: HashWithIndifferentAccess.new(
      city: Ekylibre::Record::Column.new(:city, :string),
      city_name: Ekylibre::Record::Column.new(:city_name, :string),
      code: Ekylibre::Record::Column.new(:code, :string),
      country: Ekylibre::Record::Column.new(:country, :string, limit: 2, default: "??"),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      district_id: Ekylibre::Record::Column.new(:district_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      postcode: Ekylibre::Record::Column.new(:postcode, :string, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    asset_depreciations: HashWithIndifferentAccess.new(
      accountable: Ekylibre::Record::Column.new(:accountable, :boolean, null: false),
      accounted_at: Ekylibre::Record::Column.new(:accounted_at, :datetime),
      amount: Ekylibre::Record::Column.new(:amount, :decimal, precision: 19, scale: 4, null: false),
      asset_amount: Ekylibre::Record::Column.new(:asset_amount, :decimal, precision: 19, scale: 4),
      asset_id: Ekylibre::Record::Column.new(:asset_id, :integer, null: false),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      created_on: Ekylibre::Record::Column.new(:created_on, :date, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      depreciated_amount: Ekylibre::Record::Column.new(:depreciated_amount, :decimal, precision: 19, scale: 4),
      financial_year_id: Ekylibre::Record::Column.new(:financial_year_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      journal_entry_id: Ekylibre::Record::Column.new(:journal_entry_id, :integer),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      position: Ekylibre::Record::Column.new(:position, :integer),
      protected: Ekylibre::Record::Column.new(:protected, :boolean, null: false),
      started_on: Ekylibre::Record::Column.new(:started_on, :date, null: false),
      stopped_on: Ekylibre::Record::Column.new(:stopped_on, :date, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    assets: HashWithIndifferentAccess.new(
      allocation_account_id: Ekylibre::Record::Column.new(:allocation_account_id, :integer, null: false),
      ceded: Ekylibre::Record::Column.new(:ceded, :boolean),
      ceded_on: Ekylibre::Record::Column.new(:ceded_on, :date),
      charges_account_id: Ekylibre::Record::Column.new(:charges_account_id, :integer),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      currency: Ekylibre::Record::Column.new(:currency, :string, limit: 3),
      current_amount: Ekylibre::Record::Column.new(:current_amount, :decimal, precision: 19, scale: 4),
      depreciable_amount: Ekylibre::Record::Column.new(:depreciable_amount, :decimal, precision: 19, scale: 4, null: false),
      depreciated_amount: Ekylibre::Record::Column.new(:depreciated_amount, :decimal, precision: 19, scale: 4, null: false),
      depreciation_method: Ekylibre::Record::Column.new(:depreciation_method, :string, null: false),
      depreciation_percentage: Ekylibre::Record::Column.new(:depreciation_percentage, :decimal, precision: 19, scale: 4),
      description: Ekylibre::Record::Column.new(:description, :text),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      journal_id: Ekylibre::Record::Column.new(:journal_id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      number: Ekylibre::Record::Column.new(:number, :string, null: false),
      purchase_amount: Ekylibre::Record::Column.new(:purchase_amount, :decimal, precision: 19, scale: 4),
      purchase_id: Ekylibre::Record::Column.new(:purchase_id, :integer),
      purchase_item_id: Ekylibre::Record::Column.new(:purchase_item_id, :integer),
      purchased_on: Ekylibre::Record::Column.new(:purchased_on, :date),
      sale_id: Ekylibre::Record::Column.new(:sale_id, :integer),
      sale_item_id: Ekylibre::Record::Column.new(:sale_item_id, :integer),
      started_on: Ekylibre::Record::Column.new(:started_on, :date, null: false),
      stopped_on: Ekylibre::Record::Column.new(:stopped_on, :date, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    bank_statements: HashWithIndifferentAccess.new(
      cash_id: Ekylibre::Record::Column.new(:cash_id, :integer, null: false),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      credit: Ekylibre::Record::Column.new(:credit, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      debit: Ekylibre::Record::Column.new(:debit, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      number: Ekylibre::Record::Column.new(:number, :string, null: false),
      started_on: Ekylibre::Record::Column.new(:started_on, :date, null: false),
      stopped_on: Ekylibre::Record::Column.new(:stopped_on, :date, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    campaigns: HashWithIndifferentAccess.new(
      closed: Ekylibre::Record::Column.new(:closed, :boolean, null: false),
      closed_at: Ekylibre::Record::Column.new(:closed_at, :datetime),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :string),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    cash_transfers: HashWithIndifferentAccess.new(
      accounted_at: Ekylibre::Record::Column.new(:accounted_at, :datetime),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      created_on: Ekylibre::Record::Column.new(:created_on, :date),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      currency_rate: Ekylibre::Record::Column.new(:currency_rate, :decimal, precision: 19, scale: 10, null: false, default: 1.0),
      description: Ekylibre::Record::Column.new(:description, :text),
      emitter_amount: Ekylibre::Record::Column.new(:emitter_amount, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      emitter_cash_id: Ekylibre::Record::Column.new(:emitter_cash_id, :integer, null: false),
      emitter_journal_entry_id: Ekylibre::Record::Column.new(:emitter_journal_entry_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      number: Ekylibre::Record::Column.new(:number, :string, null: false),
      receiver_amount: Ekylibre::Record::Column.new(:receiver_amount, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      receiver_cash_id: Ekylibre::Record::Column.new(:receiver_cash_id, :integer, null: false),
      receiver_journal_entry_id: Ekylibre::Record::Column.new(:receiver_journal_entry_id, :integer),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    cashes: HashWithIndifferentAccess.new(
      account_id: Ekylibre::Record::Column.new(:account_id, :integer, null: false),
      bank_account_key: Ekylibre::Record::Column.new(:bank_account_key, :string),
      bank_account_number: Ekylibre::Record::Column.new(:bank_account_number, :string),
      bank_agency_address: Ekylibre::Record::Column.new(:bank_agency_address, :text),
      bank_agency_code: Ekylibre::Record::Column.new(:bank_agency_code, :string),
      bank_code: Ekylibre::Record::Column.new(:bank_code, :string),
      bank_identifier_code: Ekylibre::Record::Column.new(:bank_identifier_code, :string, limit: 16),
      bank_name: Ekylibre::Record::Column.new(:bank_name, :string, limit: 50),
      by_default: Ekylibre::Record::Column.new(:by_default, :boolean, null: false),
      country: Ekylibre::Record::Column.new(:country, :string, limit: 2),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      currency: Ekylibre::Record::Column.new(:currency, :string, limit: 3),
      iban: Ekylibre::Record::Column.new(:iban, :string, limit: 34),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      journal_id: Ekylibre::Record::Column.new(:journal_id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      mode: Ekylibre::Record::Column.new(:mode, :string, null: false, default: "iban"),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      nature: Ekylibre::Record::Column.new(:nature, :string, limit: 16, null: false, default: "bank_account"),
      spaced_iban: Ekylibre::Record::Column.new(:spaced_iban, :string, limit: 48),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    custom_field_choices: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      custom_field_id: Ekylibre::Record::Column.new(:custom_field_id, :integer, null: false),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      position: Ekylibre::Record::Column.new(:position, :integer),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      value: Ekylibre::Record::Column.new(:value, :string)
    ),
    custom_fields: HashWithIndifferentAccess.new(
      active: Ekylibre::Record::Column.new(:active, :boolean, null: false, default: true),
      column_name: Ekylibre::Record::Column.new(:column_name, :string),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      customized_type: Ekylibre::Record::Column.new(:customized_type, :string, null: false),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      maximal_length: Ekylibre::Record::Column.new(:maximal_length, :integer),
      maximal_value: Ekylibre::Record::Column.new(:maximal_value, :decimal, precision: 19, scale: 4),
      minimal_length: Ekylibre::Record::Column.new(:minimal_length, :integer),
      minimal_value: Ekylibre::Record::Column.new(:minimal_value, :decimal, precision: 19, scale: 4),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      nature: Ekylibre::Record::Column.new(:nature, :string, limit: 8, null: false),
      position: Ekylibre::Record::Column.new(:position, :integer),
      required: Ekylibre::Record::Column.new(:required, :boolean, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    departments: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      depth: Ekylibre::Record::Column.new(:depth, :integer, null: false, default: 0),
      description: Ekylibre::Record::Column.new(:description, :text),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lft: Ekylibre::Record::Column.new(:lft, :integer),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      parent_id: Ekylibre::Record::Column.new(:parent_id, :integer),
      rgt: Ekylibre::Record::Column.new(:rgt, :integer),
      sales_conditions: Ekylibre::Record::Column.new(:sales_conditions, :text),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    deposit_items: HashWithIndifferentAccess.new(
      amount: Ekylibre::Record::Column.new(:amount, :decimal, precision: 19, scale: 4, null: false, default: 1.0),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      currency: Ekylibre::Record::Column.new(:currency, :string, limit: 3, null: false),
      deposit_id: Ekylibre::Record::Column.new(:deposit_id, :integer, null: false),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      quantity: Ekylibre::Record::Column.new(:quantity, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    deposits: HashWithIndifferentAccess.new(
      accounted_at: Ekylibre::Record::Column.new(:accounted_at, :datetime),
      amount: Ekylibre::Record::Column.new(:amount, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      cash_id: Ekylibre::Record::Column.new(:cash_id, :integer, null: false),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      created_on: Ekylibre::Record::Column.new(:created_on, :date, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :text),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      in_cash: Ekylibre::Record::Column.new(:in_cash, :boolean, null: false),
      journal_entry_id: Ekylibre::Record::Column.new(:journal_entry_id, :integer),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      locked: Ekylibre::Record::Column.new(:locked, :boolean, null: false),
      mode_id: Ekylibre::Record::Column.new(:mode_id, :integer, null: false),
      number: Ekylibre::Record::Column.new(:number, :string),
      payments_count: Ekylibre::Record::Column.new(:payments_count, :integer, null: false, default: 0),
      responsible_id: Ekylibre::Record::Column.new(:responsible_id, :integer),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    districts: HashWithIndifferentAccess.new(
      code: Ekylibre::Record::Column.new(:code, :string),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    document_archives: HashWithIndifferentAccess.new(
      archived_at: Ekylibre::Record::Column.new(:archived_at, :datetime),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      document_id: Ekylibre::Record::Column.new(:document_id, :integer, null: false),
      file_content_text: Ekylibre::Record::Column.new(:file_content_text, :text),
      file_content_type: Ekylibre::Record::Column.new(:file_content_type, :string),
      file_file_name: Ekylibre::Record::Column.new(:file_file_name, :string),
      file_file_size: Ekylibre::Record::Column.new(:file_file_size, :integer),
      file_fingerprint: Ekylibre::Record::Column.new(:file_fingerprint, :string),
      file_pages_count: Ekylibre::Record::Column.new(:file_pages_count, :integer),
      file_updated_at: Ekylibre::Record::Column.new(:file_updated_at, :datetime),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      template_id: Ekylibre::Record::Column.new(:template_id, :integer),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    document_templates: HashWithIndifferentAccess.new(
      active: Ekylibre::Record::Column.new(:active, :boolean, null: false),
      archiving: Ekylibre::Record::Column.new(:archiving, :string, limit: 63, null: false),
      by_default: Ekylibre::Record::Column.new(:by_default, :boolean, null: false),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      formats: Ekylibre::Record::Column.new(:formats, :string),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      language: Ekylibre::Record::Column.new(:language, :string, limit: 3, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      managed: Ekylibre::Record::Column.new(:managed, :boolean, null: false),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      nature: Ekylibre::Record::Column.new(:nature, :string, limit: 63, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    documents: HashWithIndifferentAccess.new(
      archives_count: Ekylibre::Record::Column.new(:archives_count, :integer, null: false, default: 0),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      key: Ekylibre::Record::Column.new(:key, :string, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      nature: Ekylibre::Record::Column.new(:nature, :string, limit: 63, null: false),
      number: Ekylibre::Record::Column.new(:number, :string, limit: 63, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    entities: HashWithIndifferentAccess.new(
      active: Ekylibre::Record::Column.new(:active, :boolean, null: false, default: true),
      activity_code: Ekylibre::Record::Column.new(:activity_code, :string, limit: 32),
      attorney: Ekylibre::Record::Column.new(:attorney, :boolean, null: false),
      attorney_account_id: Ekylibre::Record::Column.new(:attorney_account_id, :integer),
      authorized_payments_count: Ekylibre::Record::Column.new(:authorized_payments_count, :integer),
      born_on: Ekylibre::Record::Column.new(:born_on, :date),
      client: Ekylibre::Record::Column.new(:client, :boolean, null: false),
      client_account_id: Ekylibre::Record::Column.new(:client_account_id, :integer),
      country: Ekylibre::Record::Column.new(:country, :string, limit: 2),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      currency: Ekylibre::Record::Column.new(:currency, :string, null: false),
      dead_on: Ekylibre::Record::Column.new(:dead_on, :date),
      deliveries_conditions: Ekylibre::Record::Column.new(:deliveries_conditions, :string, limit: 60),
      description: Ekylibre::Record::Column.new(:description, :text),
      discount_percentage: Ekylibre::Record::Column.new(:discount_percentage, :decimal, precision: 19, scale: 4),
      first_met_on: Ekylibre::Record::Column.new(:first_met_on, :date),
      first_name: Ekylibre::Record::Column.new(:first_name, :string),
      full_name: Ekylibre::Record::Column.new(:full_name, :string, null: false),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      invoices_count: Ekylibre::Record::Column.new(:invoices_count, :integer),
      language: Ekylibre::Record::Column.new(:language, :string, limit: 3, null: false, default: "???"),
      last_name: Ekylibre::Record::Column.new(:last_name, :string, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      locked: Ekylibre::Record::Column.new(:locked, :boolean, null: false),
      nature: Ekylibre::Record::Column.new(:nature, :string, null: false),
      number: Ekylibre::Record::Column.new(:number, :string, limit: 64),
      of_company: Ekylibre::Record::Column.new(:of_company, :boolean, null: false),
      origin: Ekylibre::Record::Column.new(:origin, :string),
      payment_delay: Ekylibre::Record::Column.new(:payment_delay, :string),
      payment_mode_id: Ekylibre::Record::Column.new(:payment_mode_id, :integer),
      picture_content_type: Ekylibre::Record::Column.new(:picture_content_type, :string),
      picture_file_name: Ekylibre::Record::Column.new(:picture_file_name, :string),
      picture_file_size: Ekylibre::Record::Column.new(:picture_file_size, :integer),
      picture_updated_at: Ekylibre::Record::Column.new(:picture_updated_at, :datetime),
      proposer_id: Ekylibre::Record::Column.new(:proposer_id, :integer),
      prospect: Ekylibre::Record::Column.new(:prospect, :boolean, null: false),
      reduction_percentage: Ekylibre::Record::Column.new(:reduction_percentage, :decimal, precision: 19, scale: 4),
      reminder_submissive: Ekylibre::Record::Column.new(:reminder_submissive, :boolean, null: false),
      responsible_id: Ekylibre::Record::Column.new(:responsible_id, :integer),
      sale_price_listing_id: Ekylibre::Record::Column.new(:sale_price_listing_id, :integer),
      siren: Ekylibre::Record::Column.new(:siren, :string, limit: 9),
      soundex: Ekylibre::Record::Column.new(:soundex, :string, limit: 4),
      supplier: Ekylibre::Record::Column.new(:supplier, :boolean, null: false),
      supplier_account_id: Ekylibre::Record::Column.new(:supplier_account_id, :integer),
      transporter: Ekylibre::Record::Column.new(:transporter, :boolean, null: false),
      type: Ekylibre::Record::Column.new(:type, :string),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      vat_number: Ekylibre::Record::Column.new(:vat_number, :string, limit: 15),
      vat_subjected: Ekylibre::Record::Column.new(:vat_subjected, :boolean, null: false, default: true),
      webpass: Ekylibre::Record::Column.new(:webpass, :string)
    ),
    entity_addresses: HashWithIndifferentAccess.new(
      by_default: Ekylibre::Record::Column.new(:by_default, :boolean, null: false),
      canal: Ekylibre::Record::Column.new(:canal, :string, limit: 16, null: false),
      code: Ekylibre::Record::Column.new(:code, :string, limit: 4),
      coordinate: Ekylibre::Record::Column.new(:coordinate, :string, limit: 511, null: false),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      deleted_at: Ekylibre::Record::Column.new(:deleted_at, :datetime),
      entity_id: Ekylibre::Record::Column.new(:entity_id, :integer, null: false),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      mail_area_id: Ekylibre::Record::Column.new(:mail_area_id, :integer),
      mail_auto_update: Ekylibre::Record::Column.new(:mail_auto_update, :boolean, null: false),
      mail_country: Ekylibre::Record::Column.new(:mail_country, :string, limit: 2),
      mail_geolocation: Ekylibre::Record::Column.new(:mail_geolocation, :spatial),
      mail_line_1: Ekylibre::Record::Column.new(:mail_line_1, :string),
      mail_line_2: Ekylibre::Record::Column.new(:mail_line_2, :string),
      mail_line_3: Ekylibre::Record::Column.new(:mail_line_3, :string),
      mail_line_4: Ekylibre::Record::Column.new(:mail_line_4, :string),
      mail_line_5: Ekylibre::Record::Column.new(:mail_line_5, :string),
      mail_line_6: Ekylibre::Record::Column.new(:mail_line_6, :string),
      name: Ekylibre::Record::Column.new(:name, :string),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    entity_links: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :text),
      entity_1_id: Ekylibre::Record::Column.new(:entity_1_id, :integer, null: false),
      entity_2_id: Ekylibre::Record::Column.new(:entity_2_id, :integer, null: false),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      nature: Ekylibre::Record::Column.new(:nature, :string, null: false),
      started_at: Ekylibre::Record::Column.new(:started_at, :datetime),
      stopped_at: Ekylibre::Record::Column.new(:stopped_at, :datetime),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    establishments: HashWithIndifferentAccess.new(
      code: Ekylibre::Record::Column.new(:code, :string),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :text),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    events: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :text),
      duration: Ekylibre::Record::Column.new(:duration, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      meeting_nature_id: Ekylibre::Record::Column.new(:meeting_nature_id, :integer),
      name: Ekylibre::Record::Column.new(:name, :text),
      place: Ekylibre::Record::Column.new(:place, :string),
      procedure_id: Ekylibre::Record::Column.new(:procedure_id, :integer),
      started_at: Ekylibre::Record::Column.new(:started_at, :datetime, null: false),
      stopped_at: Ekylibre::Record::Column.new(:stopped_at, :datetime),
      type: Ekylibre::Record::Column.new(:type, :string),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    financial_years: HashWithIndifferentAccess.new(
      closed: Ekylibre::Record::Column.new(:closed, :boolean, null: false),
      code: Ekylibre::Record::Column.new(:code, :string, limit: 12, null: false),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      currency: Ekylibre::Record::Column.new(:currency, :string, limit: 3),
      currency_precision: Ekylibre::Record::Column.new(:currency_precision, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      last_journal_entry_id: Ekylibre::Record::Column.new(:last_journal_entry_id, :integer),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      started_on: Ekylibre::Record::Column.new(:started_on, :date, null: false),
      stopped_on: Ekylibre::Record::Column.new(:stopped_on, :date, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    incidents: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :text),
      gravity: Ekylibre::Record::Column.new(:gravity, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      nature: Ekylibre::Record::Column.new(:nature, :string, null: false),
      observed_at: Ekylibre::Record::Column.new(:observed_at, :datetime, null: false),
      priority: Ekylibre::Record::Column.new(:priority, :integer),
      state: Ekylibre::Record::Column.new(:state, :string),
      target_id: Ekylibre::Record::Column.new(:target_id, :integer, null: false),
      target_type: Ekylibre::Record::Column.new(:target_type, :string, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    incoming_deliveries: HashWithIndifferentAccess.new(
      address_id: Ekylibre::Record::Column.new(:address_id, :integer),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      mode_id: Ekylibre::Record::Column.new(:mode_id, :integer),
      number: Ekylibre::Record::Column.new(:number, :string),
      purchase_id: Ekylibre::Record::Column.new(:purchase_id, :integer),
      received_at: Ekylibre::Record::Column.new(:received_at, :datetime),
      reference_number: Ekylibre::Record::Column.new(:reference_number, :string),
      sender_id: Ekylibre::Record::Column.new(:sender_id, :integer, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      weight: Ekylibre::Record::Column.new(:weight, :decimal, precision: 19, scale: 4)
    ),
    incoming_delivery_items: HashWithIndifferentAccess.new(
      container_id: Ekylibre::Record::Column.new(:container_id, :integer),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      delivery_id: Ekylibre::Record::Column.new(:delivery_id, :integer, null: false),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      move_id: Ekylibre::Record::Column.new(:move_id, :integer),
      product_id: Ekylibre::Record::Column.new(:product_id, :integer, null: false),
      purchase_item_id: Ekylibre::Record::Column.new(:purchase_item_id, :integer),
      quantity: Ekylibre::Record::Column.new(:quantity, :decimal, precision: 19, scale: 4, null: false, default: 1.0),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    incoming_delivery_modes: HashWithIndifferentAccess.new(
      code: Ekylibre::Record::Column.new(:code, :string, limit: 8, null: false),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :text),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    incoming_payment_modes: HashWithIndifferentAccess.new(
      active: Ekylibre::Record::Column.new(:active, :boolean),
      attorney_journal_id: Ekylibre::Record::Column.new(:attorney_journal_id, :integer),
      cash_id: Ekylibre::Record::Column.new(:cash_id, :integer),
      commission_account_id: Ekylibre::Record::Column.new(:commission_account_id, :integer),
      commission_base_amount: Ekylibre::Record::Column.new(:commission_base_amount, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      commission_percentage: Ekylibre::Record::Column.new(:commission_percentage, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      depositables_account_id: Ekylibre::Record::Column.new(:depositables_account_id, :integer),
      depositables_journal_id: Ekylibre::Record::Column.new(:depositables_journal_id, :integer),
      detail_payments: Ekylibre::Record::Column.new(:detail_payments, :boolean, null: false),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, limit: 50, null: false),
      position: Ekylibre::Record::Column.new(:position, :integer),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      with_accounting: Ekylibre::Record::Column.new(:with_accounting, :boolean, null: false),
      with_commission: Ekylibre::Record::Column.new(:with_commission, :boolean, null: false),
      with_deposit: Ekylibre::Record::Column.new(:with_deposit, :boolean, null: false)
    ),
    incoming_payments: HashWithIndifferentAccess.new(
      accounted_at: Ekylibre::Record::Column.new(:accounted_at, :datetime),
      affair_id: Ekylibre::Record::Column.new(:affair_id, :integer),
      amount: Ekylibre::Record::Column.new(:amount, :decimal, precision: 19, scale: 4, null: false),
      bank_account_number: Ekylibre::Record::Column.new(:bank_account_number, :string),
      bank_check_number: Ekylibre::Record::Column.new(:bank_check_number, :string),
      bank_name: Ekylibre::Record::Column.new(:bank_name, :string),
      commission_account_id: Ekylibre::Record::Column.new(:commission_account_id, :integer),
      commission_amount: Ekylibre::Record::Column.new(:commission_amount, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      created_on: Ekylibre::Record::Column.new(:created_on, :date),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      currency: Ekylibre::Record::Column.new(:currency, :string, limit: 3, null: false),
      deposit_id: Ekylibre::Record::Column.new(:deposit_id, :integer),
      downpayment: Ekylibre::Record::Column.new(:downpayment, :boolean, null: false, default: true),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      journal_entry_id: Ekylibre::Record::Column.new(:journal_entry_id, :integer),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      mode_id: Ekylibre::Record::Column.new(:mode_id, :integer, null: false),
      number: Ekylibre::Record::Column.new(:number, :string),
      paid_on: Ekylibre::Record::Column.new(:paid_on, :date),
      payer_id: Ekylibre::Record::Column.new(:payer_id, :integer),
      receipt: Ekylibre::Record::Column.new(:receipt, :text),
      received: Ekylibre::Record::Column.new(:received, :boolean, null: false, default: true),
      responsible_id: Ekylibre::Record::Column.new(:responsible_id, :integer),
      scheduled: Ekylibre::Record::Column.new(:scheduled, :boolean, null: false),
      to_bank_on: Ekylibre::Record::Column.new(:to_bank_on, :date, null: false, default: 0001-01-01),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    inventories: HashWithIndifferentAccess.new(
      accounted_at: Ekylibre::Record::Column.new(:accounted_at, :datetime),
      changes_reflected: Ekylibre::Record::Column.new(:changes_reflected, :boolean),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      created_on: Ekylibre::Record::Column.new(:created_on, :date, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :text),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      journal_entry_id: Ekylibre::Record::Column.new(:journal_entry_id, :integer),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      moved_on: Ekylibre::Record::Column.new(:moved_on, :date),
      number: Ekylibre::Record::Column.new(:number, :string, limit: 16),
      responsible_id: Ekylibre::Record::Column.new(:responsible_id, :integer),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    inventory_items: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      inventory_id: Ekylibre::Record::Column.new(:inventory_id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      move_id: Ekylibre::Record::Column.new(:move_id, :integer),
      product_id: Ekylibre::Record::Column.new(:product_id, :integer, null: false),
      quantity: Ekylibre::Record::Column.new(:quantity, :decimal, precision: 19, scale: 4, null: false),
      theoric_quantity: Ekylibre::Record::Column.new(:theoric_quantity, :decimal, precision: 19, scale: 4, null: false),
      tracking_id: Ekylibre::Record::Column.new(:tracking_id, :integer),
      unit: Ekylibre::Record::Column.new(:unit, :string),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      warehouse_id: Ekylibre::Record::Column.new(:warehouse_id, :integer, null: false)
    ),
    journal_entries: HashWithIndifferentAccess.new(
      absolute_credit: Ekylibre::Record::Column.new(:absolute_credit, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      absolute_currency: Ekylibre::Record::Column.new(:absolute_currency, :string, limit: 3),
      absolute_debit: Ekylibre::Record::Column.new(:absolute_debit, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      balance: Ekylibre::Record::Column.new(:balance, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      created_on: Ekylibre::Record::Column.new(:created_on, :date, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      credit: Ekylibre::Record::Column.new(:credit, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      currency: Ekylibre::Record::Column.new(:currency, :string, limit: 3),
      debit: Ekylibre::Record::Column.new(:debit, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      financial_year_id: Ekylibre::Record::Column.new(:financial_year_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      journal_id: Ekylibre::Record::Column.new(:journal_id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      number: Ekylibre::Record::Column.new(:number, :string, null: false),
      printed_on: Ekylibre::Record::Column.new(:printed_on, :date, null: false),
      real_credit: Ekylibre::Record::Column.new(:real_credit, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      real_currency: Ekylibre::Record::Column.new(:real_currency, :string, limit: 3),
      real_currency_rate: Ekylibre::Record::Column.new(:real_currency_rate, :decimal, precision: 19, scale: 10, null: false, default: 0.0),
      real_debit: Ekylibre::Record::Column.new(:real_debit, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      resource_id: Ekylibre::Record::Column.new(:resource_id, :integer),
      resource_type: Ekylibre::Record::Column.new(:resource_type, :string),
      state: Ekylibre::Record::Column.new(:state, :string, limit: 32, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    journal_entry_items: HashWithIndifferentAccess.new(
      absolute_credit: Ekylibre::Record::Column.new(:absolute_credit, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      absolute_currency: Ekylibre::Record::Column.new(:absolute_currency, :string, limit: 3, null: false),
      absolute_debit: Ekylibre::Record::Column.new(:absolute_debit, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      account_id: Ekylibre::Record::Column.new(:account_id, :integer, null: false),
      balance: Ekylibre::Record::Column.new(:balance, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      bank_statement_id: Ekylibre::Record::Column.new(:bank_statement_id, :integer),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      credit: Ekylibre::Record::Column.new(:credit, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      cumulated_absolute_credit: Ekylibre::Record::Column.new(:cumulated_absolute_credit, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      cumulated_absolute_debit: Ekylibre::Record::Column.new(:cumulated_absolute_debit, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      currency: Ekylibre::Record::Column.new(:currency, :string, limit: 3, null: false),
      debit: Ekylibre::Record::Column.new(:debit, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      description: Ekylibre::Record::Column.new(:description, :text),
      entry_id: Ekylibre::Record::Column.new(:entry_id, :integer, null: false),
      entry_number: Ekylibre::Record::Column.new(:entry_number, :string, null: false),
      financial_year_id: Ekylibre::Record::Column.new(:financial_year_id, :integer, null: false),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      journal_id: Ekylibre::Record::Column.new(:journal_id, :integer, null: false),
      letter: Ekylibre::Record::Column.new(:letter, :string, limit: 8),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      position: Ekylibre::Record::Column.new(:position, :integer),
      printed_on: Ekylibre::Record::Column.new(:printed_on, :date, null: false),
      real_credit: Ekylibre::Record::Column.new(:real_credit, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      real_currency: Ekylibre::Record::Column.new(:real_currency, :string, limit: 3, null: false),
      real_currency_rate: Ekylibre::Record::Column.new(:real_currency_rate, :decimal, precision: 19, scale: 10, null: false, default: 0.0),
      real_debit: Ekylibre::Record::Column.new(:real_debit, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      state: Ekylibre::Record::Column.new(:state, :string, limit: 32, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    journals: HashWithIndifferentAccess.new(
      closed_on: Ekylibre::Record::Column.new(:closed_on, :date, null: false),
      code: Ekylibre::Record::Column.new(:code, :string, limit: 4, null: false),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      currency: Ekylibre::Record::Column.new(:currency, :string, limit: 3),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      nature: Ekylibre::Record::Column.new(:nature, :string, limit: 16, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    listing_node_items: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      nature: Ekylibre::Record::Column.new(:nature, :string, limit: 8, null: false),
      node_id: Ekylibre::Record::Column.new(:node_id, :integer, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      value: Ekylibre::Record::Column.new(:value, :text)
    ),
    listing_nodes: HashWithIndifferentAccess.new(
      attribute_name: Ekylibre::Record::Column.new(:attribute_name, :string),
      condition_operator: Ekylibre::Record::Column.new(:condition_operator, :string),
      condition_value: Ekylibre::Record::Column.new(:condition_value, :string),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      depth: Ekylibre::Record::Column.new(:depth, :integer, null: false, default: 0),
      exportable: Ekylibre::Record::Column.new(:exportable, :boolean, null: false, default: true),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      item_listing_id: Ekylibre::Record::Column.new(:item_listing_id, :integer),
      item_listing_node_id: Ekylibre::Record::Column.new(:item_listing_node_id, :integer),
      item_nature: Ekylibre::Record::Column.new(:item_nature, :string, limit: 8),
      item_value: Ekylibre::Record::Column.new(:item_value, :text),
      key: Ekylibre::Record::Column.new(:key, :string),
      label: Ekylibre::Record::Column.new(:label, :string, null: false),
      lft: Ekylibre::Record::Column.new(:lft, :integer),
      listing_id: Ekylibre::Record::Column.new(:listing_id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      nature: Ekylibre::Record::Column.new(:nature, :string, null: false),
      parent_id: Ekylibre::Record::Column.new(:parent_id, :integer),
      position: Ekylibre::Record::Column.new(:position, :integer),
      rgt: Ekylibre::Record::Column.new(:rgt, :integer),
      sql_type: Ekylibre::Record::Column.new(:sql_type, :string),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    listings: HashWithIndifferentAccess.new(
      conditions: Ekylibre::Record::Column.new(:conditions, :text),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :text),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      mail: Ekylibre::Record::Column.new(:mail, :text),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      query: Ekylibre::Record::Column.new(:query, :text),
      root_model: Ekylibre::Record::Column.new(:root_model, :string, null: false),
      source: Ekylibre::Record::Column.new(:source, :text),
      story: Ekylibre::Record::Column.new(:story, :text),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    logs: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :text),
      event: Ekylibre::Record::Column.new(:event, :string, null: false),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      observed_at: Ekylibre::Record::Column.new(:observed_at, :datetime, null: false),
      origin_id: Ekylibre::Record::Column.new(:origin_id, :integer),
      origin_object: Ekylibre::Record::Column.new(:origin_object, :text),
      origin_type: Ekylibre::Record::Column.new(:origin_type, :string),
      owner_id: Ekylibre::Record::Column.new(:owner_id, :integer),
      owner_object: Ekylibre::Record::Column.new(:owner_object, :text),
      owner_type: Ekylibre::Record::Column.new(:owner_type, :string),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    mandates: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      entity_id: Ekylibre::Record::Column.new(:entity_id, :integer, null: false),
      family: Ekylibre::Record::Column.new(:family, :string, null: false),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      organization: Ekylibre::Record::Column.new(:organization, :string, null: false),
      started_on: Ekylibre::Record::Column.new(:started_on, :date),
      stopped_on: Ekylibre::Record::Column.new(:stopped_on, :date),
      title: Ekylibre::Record::Column.new(:title, :string, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    meeting_natures: HashWithIndifferentAccess.new(
      active: Ekylibre::Record::Column.new(:active, :boolean, null: false, default: true),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      duration: Ekylibre::Record::Column.new(:duration, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      usage: Ekylibre::Record::Column.new(:usage, :string, limit: 64)
    ),
    meeting_participations: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      meeting_id: Ekylibre::Record::Column.new(:meeting_id, :integer, null: false),
      participant_id: Ekylibre::Record::Column.new(:participant_id, :integer, null: false),
      state: Ekylibre::Record::Column.new(:state, :string),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    observations: HashWithIndifferentAccess.new(
      author_id: Ekylibre::Record::Column.new(:author_id, :integer, null: false),
      content: Ekylibre::Record::Column.new(:content, :text, null: false),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      importance: Ekylibre::Record::Column.new(:importance, :string, limit: 10, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      observed_at: Ekylibre::Record::Column.new(:observed_at, :datetime, null: false),
      subject_id: Ekylibre::Record::Column.new(:subject_id, :integer, null: false),
      subject_type: Ekylibre::Record::Column.new(:subject_type, :string, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    operation_tasks: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      expression: Ekylibre::Record::Column.new(:expression, :text),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      indicator_datum_id: Ekylibre::Record::Column.new(:indicator_datum_id, :integer),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      operand_id: Ekylibre::Record::Column.new(:operand_id, :integer),
      operand_quantity: Ekylibre::Record::Column.new(:operand_quantity, :decimal, precision: 19, scale: 4),
      operand_unit: Ekylibre::Record::Column.new(:operand_unit, :string),
      operation_id: Ekylibre::Record::Column.new(:operation_id, :integer, null: false),
      parent_id: Ekylibre::Record::Column.new(:parent_id, :integer),
      prorated: Ekylibre::Record::Column.new(:prorated, :boolean, null: false),
      subject_id: Ekylibre::Record::Column.new(:subject_id, :integer, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      verb: Ekylibre::Record::Column.new(:verb, :string, null: false)
    ),
    outgoing_deliveries: HashWithIndifferentAccess.new(
      address_id: Ekylibre::Record::Column.new(:address_id, :integer),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      mode_id: Ekylibre::Record::Column.new(:mode_id, :integer),
      number: Ekylibre::Record::Column.new(:number, :string),
      recipient_id: Ekylibre::Record::Column.new(:recipient_id, :integer, null: false),
      reference_number: Ekylibre::Record::Column.new(:reference_number, :string),
      sale_id: Ekylibre::Record::Column.new(:sale_id, :integer),
      sent_at: Ekylibre::Record::Column.new(:sent_at, :datetime),
      transport_id: Ekylibre::Record::Column.new(:transport_id, :integer),
      transporter_id: Ekylibre::Record::Column.new(:transporter_id, :integer),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      weight: Ekylibre::Record::Column.new(:weight, :decimal, precision: 19, scale: 4)
    ),
    outgoing_delivery_items: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      delivery_id: Ekylibre::Record::Column.new(:delivery_id, :integer, null: false),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      move_id: Ekylibre::Record::Column.new(:move_id, :integer),
      product_id: Ekylibre::Record::Column.new(:product_id, :integer, null: false),
      quantity: Ekylibre::Record::Column.new(:quantity, :decimal, precision: 19, scale: 4, null: false, default: 1.0),
      sale_item_id: Ekylibre::Record::Column.new(:sale_item_id, :integer),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    outgoing_delivery_modes: HashWithIndifferentAccess.new(
      code: Ekylibre::Record::Column.new(:code, :string, limit: 8, null: false),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :text),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      with_transport: Ekylibre::Record::Column.new(:with_transport, :boolean, null: false)
    ),
    outgoing_payment_modes: HashWithIndifferentAccess.new(
      active: Ekylibre::Record::Column.new(:active, :boolean, null: false),
      attorney_journal_id: Ekylibre::Record::Column.new(:attorney_journal_id, :integer),
      cash_id: Ekylibre::Record::Column.new(:cash_id, :integer),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, limit: 50, null: false),
      position: Ekylibre::Record::Column.new(:position, :integer),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      with_accounting: Ekylibre::Record::Column.new(:with_accounting, :boolean, null: false)
    ),
    outgoing_payments: HashWithIndifferentAccess.new(
      accounted_at: Ekylibre::Record::Column.new(:accounted_at, :datetime),
      affair_id: Ekylibre::Record::Column.new(:affair_id, :integer),
      amount: Ekylibre::Record::Column.new(:amount, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      bank_check_number: Ekylibre::Record::Column.new(:bank_check_number, :string),
      cash_id: Ekylibre::Record::Column.new(:cash_id, :integer, null: false),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      created_on: Ekylibre::Record::Column.new(:created_on, :date),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      currency: Ekylibre::Record::Column.new(:currency, :string, limit: 3, null: false),
      delivered: Ekylibre::Record::Column.new(:delivered, :boolean, null: false, default: true),
      downpayment: Ekylibre::Record::Column.new(:downpayment, :boolean, null: false, default: true),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      journal_entry_id: Ekylibre::Record::Column.new(:journal_entry_id, :integer),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      mode_id: Ekylibre::Record::Column.new(:mode_id, :integer, null: false),
      number: Ekylibre::Record::Column.new(:number, :string),
      paid_on: Ekylibre::Record::Column.new(:paid_on, :date),
      payee_id: Ekylibre::Record::Column.new(:payee_id, :integer, null: false),
      responsible_id: Ekylibre::Record::Column.new(:responsible_id, :integer, null: false),
      to_bank_on: Ekylibre::Record::Column.new(:to_bank_on, :date, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    preferences: HashWithIndifferentAccess.new(
      boolean_value: Ekylibre::Record::Column.new(:boolean_value, :boolean),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      decimal_value: Ekylibre::Record::Column.new(:decimal_value, :decimal, precision: 19, scale: 4),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      integer_value: Ekylibre::Record::Column.new(:integer_value, :integer),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      nature: Ekylibre::Record::Column.new(:nature, :string, limit: 8, null: false, default: "u"),
      record_value_id: Ekylibre::Record::Column.new(:record_value_id, :integer),
      record_value_type: Ekylibre::Record::Column.new(:record_value_type, :string),
      string_value: Ekylibre::Record::Column.new(:string_value, :text),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      user_id: Ekylibre::Record::Column.new(:user_id, :integer)
    ),
    prescriptions: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      delivered_on: Ekylibre::Record::Column.new(:delivered_on, :date),
      description: Ekylibre::Record::Column.new(:description, :text),
      document_id: Ekylibre::Record::Column.new(:document_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      prescriptor_id: Ekylibre::Record::Column.new(:prescriptor_id, :integer),
      reference_number: Ekylibre::Record::Column.new(:reference_number, :string),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    procedure_variables: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      indicator: Ekylibre::Record::Column.new(:indicator, :string, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      measure_quantity: Ekylibre::Record::Column.new(:measure_quantity, :decimal, precision: 19, scale: 4, null: false),
      measure_unit: Ekylibre::Record::Column.new(:measure_unit, :string, null: false),
      procedure_id: Ekylibre::Record::Column.new(:procedure_id, :integer, null: false),
      role: Ekylibre::Record::Column.new(:role, :string, null: false),
      target_id: Ekylibre::Record::Column.new(:target_id, :integer, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    procedures: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      incident_id: Ekylibre::Record::Column.new(:incident_id, :integer),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      natures: Ekylibre::Record::Column.new(:natures, :string, null: false),
      nomen: Ekylibre::Record::Column.new(:nomen, :string, null: false),
      prescription_id: Ekylibre::Record::Column.new(:prescription_id, :integer),
      production_id: Ekylibre::Record::Column.new(:production_id, :integer, null: false),
      provisional: Ekylibre::Record::Column.new(:provisional, :boolean, null: false),
      provisional_procedure_id: Ekylibre::Record::Column.new(:provisional_procedure_id, :integer),
      state: Ekylibre::Record::Column.new(:state, :string, null: false, default: "undone"),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    product_indicator_data: HashWithIndifferentAccess.new(
      boolean_value: Ekylibre::Record::Column.new(:boolean_value, :boolean, null: false),
      choice_value: Ekylibre::Record::Column.new(:choice_value, :string),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      decimal_value: Ekylibre::Record::Column.new(:decimal_value, :decimal, precision: 19, scale: 4),
      geometry_value: Ekylibre::Record::Column.new(:geometry_value, :spatial),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      indicator: Ekylibre::Record::Column.new(:indicator, :string, null: false),
      indicator_datatype: Ekylibre::Record::Column.new(:indicator_datatype, :string, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      measure_value_unit: Ekylibre::Record::Column.new(:measure_value_unit, :string),
      measure_value_value: Ekylibre::Record::Column.new(:measure_value_value, :decimal, precision: 19, scale: 4),
      measured_at: Ekylibre::Record::Column.new(:measured_at, :datetime, null: false),
      product_id: Ekylibre::Record::Column.new(:product_id, :integer, null: false),
      string_value: Ekylibre::Record::Column.new(:string_value, :text),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    product_links: HashWithIndifferentAccess.new(
      carried_id: Ekylibre::Record::Column.new(:carried_id, :integer, null: false),
      carrier_id: Ekylibre::Record::Column.new(:carrier_id, :integer, null: false),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      operation_task_id: Ekylibre::Record::Column.new(:operation_task_id, :integer),
      started_at: Ekylibre::Record::Column.new(:started_at, :datetime),
      stopped_at: Ekylibre::Record::Column.new(:stopped_at, :datetime),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    product_localizations: HashWithIndifferentAccess.new(
      arrival_cause: Ekylibre::Record::Column.new(:arrival_cause, :string),
      container_id: Ekylibre::Record::Column.new(:container_id, :integer),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      departure_cause: Ekylibre::Record::Column.new(:departure_cause, :string),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      nature: Ekylibre::Record::Column.new(:nature, :string, null: false),
      operation_task_id: Ekylibre::Record::Column.new(:operation_task_id, :integer),
      product_id: Ekylibre::Record::Column.new(:product_id, :integer, null: false),
      started_at: Ekylibre::Record::Column.new(:started_at, :datetime),
      stopped_at: Ekylibre::Record::Column.new(:stopped_at, :datetime),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    product_memberships: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      group_id: Ekylibre::Record::Column.new(:group_id, :integer, null: false),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      member_id: Ekylibre::Record::Column.new(:member_id, :integer, null: false),
      operation_task_id: Ekylibre::Record::Column.new(:operation_task_id, :integer),
      started_at: Ekylibre::Record::Column.new(:started_at, :datetime, null: false),
      stopped_at: Ekylibre::Record::Column.new(:stopped_at, :datetime),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    product_moves: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      initial: Ekylibre::Record::Column.new(:initial, :boolean, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      population_delta: Ekylibre::Record::Column.new(:population_delta, :decimal, precision: 19, scale: 4, null: false),
      product_id: Ekylibre::Record::Column.new(:product_id, :integer, null: false),
      started_at: Ekylibre::Record::Column.new(:started_at, :datetime),
      stopped_at: Ekylibre::Record::Column.new(:stopped_at, :datetime),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    product_nature_variant_indicator_data: HashWithIndifferentAccess.new(
      boolean_value: Ekylibre::Record::Column.new(:boolean_value, :boolean, null: false),
      choice_value: Ekylibre::Record::Column.new(:choice_value, :string),
      computation_method: Ekylibre::Record::Column.new(:computation_method, :string, null: false),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      decimal_value: Ekylibre::Record::Column.new(:decimal_value, :decimal, precision: 19, scale: 4),
      geometry_value: Ekylibre::Record::Column.new(:geometry_value, :spatial),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      indicator: Ekylibre::Record::Column.new(:indicator, :string, null: false),
      indicator_datatype: Ekylibre::Record::Column.new(:indicator_datatype, :string, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      measure_value_unit: Ekylibre::Record::Column.new(:measure_value_unit, :string),
      measure_value_value: Ekylibre::Record::Column.new(:measure_value_value, :decimal, precision: 19, scale: 4),
      string_value: Ekylibre::Record::Column.new(:string_value, :text),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      variant_id: Ekylibre::Record::Column.new(:variant_id, :integer, null: false)
    ),
    product_nature_variants: HashWithIndifferentAccess.new(
      active: Ekylibre::Record::Column.new(:active, :boolean, null: false),
      commercial_description: Ekylibre::Record::Column.new(:commercial_description, :text),
      commercial_name: Ekylibre::Record::Column.new(:commercial_name, :string, null: false),
      contour: Ekylibre::Record::Column.new(:contour, :string),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      frozen_indicators: Ekylibre::Record::Column.new(:frozen_indicators, :text),
      horizontal_rotation: Ekylibre::Record::Column.new(:horizontal_rotation, :integer, null: false, default: 0),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string),
      nature_id: Ekylibre::Record::Column.new(:nature_id, :integer, null: false),
      nature_name: Ekylibre::Record::Column.new(:nature_name, :string, null: false),
      number: Ekylibre::Record::Column.new(:number, :string),
      picture_content_type: Ekylibre::Record::Column.new(:picture_content_type, :string),
      picture_file_name: Ekylibre::Record::Column.new(:picture_file_name, :string),
      picture_file_size: Ekylibre::Record::Column.new(:picture_file_size, :integer),
      picture_updated_at: Ekylibre::Record::Column.new(:picture_updated_at, :datetime),
      unit_name: Ekylibre::Record::Column.new(:unit_name, :string, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      variable_indicators: Ekylibre::Record::Column.new(:variable_indicators, :text)
    ),
    product_natures: HashWithIndifferentAccess.new(
      abilities: Ekylibre::Record::Column.new(:abilities, :text),
      active: Ekylibre::Record::Column.new(:active, :boolean, null: false),
      asset_account_id: Ekylibre::Record::Column.new(:asset_account_id, :integer),
      charge_account_id: Ekylibre::Record::Column.new(:charge_account_id, :integer),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      depreciable: Ekylibre::Record::Column.new(:depreciable, :boolean, null: false),
      derivative_of: Ekylibre::Record::Column.new(:derivative_of, :string, limit: 127),
      description: Ekylibre::Record::Column.new(:description, :text),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      indicators: Ekylibre::Record::Column.new(:indicators, :text),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      nomen: Ekylibre::Record::Column.new(:nomen, :string, limit: 127),
      number: Ekylibre::Record::Column.new(:number, :string, limit: 31, null: false),
      population_counting: Ekylibre::Record::Column.new(:population_counting, :string, null: false),
      product_account_id: Ekylibre::Record::Column.new(:product_account_id, :integer),
      purchasable: Ekylibre::Record::Column.new(:purchasable, :boolean, null: false),
      reductible: Ekylibre::Record::Column.new(:reductible, :boolean, null: false),
      saleable: Ekylibre::Record::Column.new(:saleable, :boolean, null: false),
      stock_account_id: Ekylibre::Record::Column.new(:stock_account_id, :integer),
      storable: Ekylibre::Record::Column.new(:storable, :boolean, null: false),
      subscribing: Ekylibre::Record::Column.new(:subscribing, :boolean, null: false),
      subscription_duration: Ekylibre::Record::Column.new(:subscription_duration, :string),
      subscription_nature_id: Ekylibre::Record::Column.new(:subscription_nature_id, :integer),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      variety: Ekylibre::Record::Column.new(:variety, :string, limit: 127, null: false)
    ),
    product_price_listings: HashWithIndifferentAccess.new(
      by_default: Ekylibre::Record::Column.new(:by_default, :boolean, null: false),
      code: Ekylibre::Record::Column.new(:code, :string, limit: 8),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :text),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    product_prices: HashWithIndifferentAccess.new(
      amount: Ekylibre::Record::Column.new(:amount, :decimal, precision: 19, scale: 4, null: false),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      currency: Ekylibre::Record::Column.new(:currency, :string, limit: 3, null: false),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      listing_id: Ekylibre::Record::Column.new(:listing_id, :integer),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      pretax_amount: Ekylibre::Record::Column.new(:pretax_amount, :decimal, precision: 19, scale: 4, null: false),
      product_id: Ekylibre::Record::Column.new(:product_id, :integer),
      started_at: Ekylibre::Record::Column.new(:started_at, :datetime),
      stopped_at: Ekylibre::Record::Column.new(:stopped_at, :datetime),
      supplier_id: Ekylibre::Record::Column.new(:supplier_id, :integer, null: false),
      tax_id: Ekylibre::Record::Column.new(:tax_id, :integer, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      variant_id: Ekylibre::Record::Column.new(:variant_id, :integer, null: false)
    ),
    product_process_phases: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :string),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      nature: Ekylibre::Record::Column.new(:nature, :string, null: false),
      phase_delay: Ekylibre::Record::Column.new(:phase_delay, :string),
      position: Ekylibre::Record::Column.new(:position, :integer),
      process_id: Ekylibre::Record::Column.new(:process_id, :integer, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    product_processes: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :string),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      nature: Ekylibre::Record::Column.new(:nature, :string, null: false),
      repeatable: Ekylibre::Record::Column.new(:repeatable, :boolean, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      variety: Ekylibre::Record::Column.new(:variety, :string, limit: 127, null: false)
    ),
    production_supports: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      exclusive: Ekylibre::Record::Column.new(:exclusive, :boolean, null: false),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      production_id: Ekylibre::Record::Column.new(:production_id, :integer, null: false),
      started_at: Ekylibre::Record::Column.new(:started_at, :datetime),
      stopped_at: Ekylibre::Record::Column.new(:stopped_at, :datetime),
      storage_id: Ekylibre::Record::Column.new(:storage_id, :integer, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    productions: HashWithIndifferentAccess.new(
      activity_id: Ekylibre::Record::Column.new(:activity_id, :integer, null: false),
      campaign_id: Ekylibre::Record::Column.new(:campaign_id, :integer, null: false),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      position: Ekylibre::Record::Column.new(:position, :integer),
      product_nature_id: Ekylibre::Record::Column.new(:product_nature_id, :integer, null: false),
      started_at: Ekylibre::Record::Column.new(:started_at, :datetime),
      state: Ekylibre::Record::Column.new(:state, :string),
      static_support: Ekylibre::Record::Column.new(:static_support, :boolean, null: false),
      stopped_at: Ekylibre::Record::Column.new(:stopped_at, :datetime),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    products: HashWithIndifferentAccess.new(
      active: Ekylibre::Record::Column.new(:active, :boolean, null: false),
      address_id: Ekylibre::Record::Column.new(:address_id, :integer),
      asset_id: Ekylibre::Record::Column.new(:asset_id, :integer),
      born_at: Ekylibre::Record::Column.new(:born_at, :datetime),
      content_indicator: Ekylibre::Record::Column.new(:content_indicator, :string),
      content_indicator_unit: Ekylibre::Record::Column.new(:content_indicator_unit, :string),
      content_maximal_quantity: Ekylibre::Record::Column.new(:content_maximal_quantity, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      content_nature_id: Ekylibre::Record::Column.new(:content_nature_id, :integer),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      dead_at: Ekylibre::Record::Column.new(:dead_at, :datetime),
      description: Ekylibre::Record::Column.new(:description, :text),
      external: Ekylibre::Record::Column.new(:external, :boolean, null: false),
      father_id: Ekylibre::Record::Column.new(:father_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      identification_number: Ekylibre::Record::Column.new(:identification_number, :string),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      mother_id: Ekylibre::Record::Column.new(:mother_id, :integer),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      nature_id: Ekylibre::Record::Column.new(:nature_id, :integer, null: false),
      number: Ekylibre::Record::Column.new(:number, :string, null: false),
      owner_id: Ekylibre::Record::Column.new(:owner_id, :integer, null: false),
      parent_id: Ekylibre::Record::Column.new(:parent_id, :integer),
      picture_content_type: Ekylibre::Record::Column.new(:picture_content_type, :string),
      picture_file_name: Ekylibre::Record::Column.new(:picture_file_name, :string),
      picture_file_size: Ekylibre::Record::Column.new(:picture_file_size, :integer),
      picture_updated_at: Ekylibre::Record::Column.new(:picture_updated_at, :datetime),
      reservoir: Ekylibre::Record::Column.new(:reservoir, :boolean, null: false),
      tracking_id: Ekylibre::Record::Column.new(:tracking_id, :integer),
      type: Ekylibre::Record::Column.new(:type, :string),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      variant_id: Ekylibre::Record::Column.new(:variant_id, :integer, null: false),
      variety: Ekylibre::Record::Column.new(:variety, :string, limit: 127, null: false),
      work_number: Ekylibre::Record::Column.new(:work_number, :string)
    ),
    professions: HashWithIndifferentAccess.new(
      code: Ekylibre::Record::Column.new(:code, :string),
      commercial: Ekylibre::Record::Column.new(:commercial, :boolean, null: false),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    purchase_items: HashWithIndifferentAccess.new(
      account_id: Ekylibre::Record::Column.new(:account_id, :integer, null: false),
      amount: Ekylibre::Record::Column.new(:amount, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      annotation: Ekylibre::Record::Column.new(:annotation, :text),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      position: Ekylibre::Record::Column.new(:position, :integer),
      pretax_amount: Ekylibre::Record::Column.new(:pretax_amount, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      price_amount: Ekylibre::Record::Column.new(:price_amount, :decimal, precision: 19, scale: 4, null: false),
      price_id: Ekylibre::Record::Column.new(:price_id, :integer, null: false),
      price_template_id: Ekylibre::Record::Column.new(:price_template_id, :integer),
      product_id: Ekylibre::Record::Column.new(:product_id, :integer, null: false),
      purchase_id: Ekylibre::Record::Column.new(:purchase_id, :integer, null: false),
      quantity: Ekylibre::Record::Column.new(:quantity, :decimal, precision: 19, scale: 4, null: false, default: 1.0),
      tax_id: Ekylibre::Record::Column.new(:tax_id, :integer, null: false),
      tracking_id: Ekylibre::Record::Column.new(:tracking_id, :integer),
      tracking_serial: Ekylibre::Record::Column.new(:tracking_serial, :string),
      unit: Ekylibre::Record::Column.new(:unit, :string),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      warehouse_id: Ekylibre::Record::Column.new(:warehouse_id, :integer)
    ),
    purchase_natures: HashWithIndifferentAccess.new(
      active: Ekylibre::Record::Column.new(:active, :boolean, null: false, default: true),
      by_default: Ekylibre::Record::Column.new(:by_default, :boolean, null: false),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      currency: Ekylibre::Record::Column.new(:currency, :string, limit: 3),
      description: Ekylibre::Record::Column.new(:description, :text),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      journal_id: Ekylibre::Record::Column.new(:journal_id, :integer),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      with_accounting: Ekylibre::Record::Column.new(:with_accounting, :boolean, null: false)
    ),
    purchases: HashWithIndifferentAccess.new(
      accounted_at: Ekylibre::Record::Column.new(:accounted_at, :datetime),
      affair_id: Ekylibre::Record::Column.new(:affair_id, :integer),
      amount: Ekylibre::Record::Column.new(:amount, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      confirmed_on: Ekylibre::Record::Column.new(:confirmed_on, :date),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      created_on: Ekylibre::Record::Column.new(:created_on, :date),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      currency: Ekylibre::Record::Column.new(:currency, :string, limit: 3),
      delivery_address_id: Ekylibre::Record::Column.new(:delivery_address_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :text),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      invoiced_on: Ekylibre::Record::Column.new(:invoiced_on, :date),
      journal_entry_id: Ekylibre::Record::Column.new(:journal_entry_id, :integer),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      nature_id: Ekylibre::Record::Column.new(:nature_id, :integer),
      number: Ekylibre::Record::Column.new(:number, :string, limit: 64, null: false),
      planned_on: Ekylibre::Record::Column.new(:planned_on, :date),
      pretax_amount: Ekylibre::Record::Column.new(:pretax_amount, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      reference_number: Ekylibre::Record::Column.new(:reference_number, :string),
      responsible_id: Ekylibre::Record::Column.new(:responsible_id, :integer),
      state: Ekylibre::Record::Column.new(:state, :string, limit: 64),
      supplier_id: Ekylibre::Record::Column.new(:supplier_id, :integer, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    roles: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      rights: Ekylibre::Record::Column.new(:rights, :text),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    sale_items: HashWithIndifferentAccess.new(
      account_id: Ekylibre::Record::Column.new(:account_id, :integer),
      amount: Ekylibre::Record::Column.new(:amount, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      annotation: Ekylibre::Record::Column.new(:annotation, :text),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      entity_id: Ekylibre::Record::Column.new(:entity_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      label: Ekylibre::Record::Column.new(:label, :text),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      origin_id: Ekylibre::Record::Column.new(:origin_id, :integer),
      position: Ekylibre::Record::Column.new(:position, :integer),
      pretax_amount: Ekylibre::Record::Column.new(:pretax_amount, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      price_amount: Ekylibre::Record::Column.new(:price_amount, :decimal, precision: 19, scale: 4),
      price_id: Ekylibre::Record::Column.new(:price_id, :integer, null: false),
      price_template_id: Ekylibre::Record::Column.new(:price_template_id, :integer),
      product_id: Ekylibre::Record::Column.new(:product_id, :integer, null: false),
      quantity: Ekylibre::Record::Column.new(:quantity, :decimal, precision: 19, scale: 4, null: false, default: 1.0),
      reduction_origin_id: Ekylibre::Record::Column.new(:reduction_origin_id, :integer),
      reduction_percentage: Ekylibre::Record::Column.new(:reduction_percentage, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      sale_id: Ekylibre::Record::Column.new(:sale_id, :integer, null: false),
      tax_id: Ekylibre::Record::Column.new(:tax_id, :integer),
      tracking_id: Ekylibre::Record::Column.new(:tracking_id, :integer),
      unit: Ekylibre::Record::Column.new(:unit, :string),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      warehouse_id: Ekylibre::Record::Column.new(:warehouse_id, :integer)
    ),
    sale_natures: HashWithIndifferentAccess.new(
      active: Ekylibre::Record::Column.new(:active, :boolean, null: false, default: true),
      by_default: Ekylibre::Record::Column.new(:by_default, :boolean, null: false),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      currency: Ekylibre::Record::Column.new(:currency, :string, limit: 3),
      description: Ekylibre::Record::Column.new(:description, :text),
      downpayment: Ekylibre::Record::Column.new(:downpayment, :boolean, null: false),
      downpayment_minimum: Ekylibre::Record::Column.new(:downpayment_minimum, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      downpayment_percentage: Ekylibre::Record::Column.new(:downpayment_percentage, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      expiration_delay: Ekylibre::Record::Column.new(:expiration_delay, :string, null: false),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      journal_id: Ekylibre::Record::Column.new(:journal_id, :integer),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      payment_delay: Ekylibre::Record::Column.new(:payment_delay, :string, null: false),
      payment_mode_complement: Ekylibre::Record::Column.new(:payment_mode_complement, :text),
      payment_mode_id: Ekylibre::Record::Column.new(:payment_mode_id, :integer),
      sales_conditions: Ekylibre::Record::Column.new(:sales_conditions, :text),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      with_accounting: Ekylibre::Record::Column.new(:with_accounting, :boolean, null: false)
    ),
    sales: HashWithIndifferentAccess.new(
      accounted_at: Ekylibre::Record::Column.new(:accounted_at, :datetime),
      address_id: Ekylibre::Record::Column.new(:address_id, :integer),
      affair_id: Ekylibre::Record::Column.new(:affair_id, :integer),
      amount: Ekylibre::Record::Column.new(:amount, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      annotation: Ekylibre::Record::Column.new(:annotation, :text),
      client_id: Ekylibre::Record::Column.new(:client_id, :integer, null: false),
      conclusion: Ekylibre::Record::Column.new(:conclusion, :text),
      confirmed_on: Ekylibre::Record::Column.new(:confirmed_on, :date),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      created_on: Ekylibre::Record::Column.new(:created_on, :date, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      credit: Ekylibre::Record::Column.new(:credit, :boolean, null: false),
      currency: Ekylibre::Record::Column.new(:currency, :string, limit: 3),
      delivery_address_id: Ekylibre::Record::Column.new(:delivery_address_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :text),
      downpayment_amount: Ekylibre::Record::Column.new(:downpayment_amount, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      expiration_delay: Ekylibre::Record::Column.new(:expiration_delay, :string),
      expired_on: Ekylibre::Record::Column.new(:expired_on, :date),
      function_title: Ekylibre::Record::Column.new(:function_title, :string),
      has_downpayment: Ekylibre::Record::Column.new(:has_downpayment, :boolean, null: false),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      initial_number: Ekylibre::Record::Column.new(:initial_number, :string, limit: 64),
      introduction: Ekylibre::Record::Column.new(:introduction, :text),
      invoice_address_id: Ekylibre::Record::Column.new(:invoice_address_id, :integer),
      invoiced_on: Ekylibre::Record::Column.new(:invoiced_on, :date),
      journal_entry_id: Ekylibre::Record::Column.new(:journal_entry_id, :integer),
      letter_format: Ekylibre::Record::Column.new(:letter_format, :boolean, null: false, default: true),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      nature_id: Ekylibre::Record::Column.new(:nature_id, :integer),
      number: Ekylibre::Record::Column.new(:number, :string, limit: 64, null: false),
      origin_id: Ekylibre::Record::Column.new(:origin_id, :integer),
      payment_delay: Ekylibre::Record::Column.new(:payment_delay, :string, null: false),
      payment_on: Ekylibre::Record::Column.new(:payment_on, :date),
      pretax_amount: Ekylibre::Record::Column.new(:pretax_amount, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      reference_number: Ekylibre::Record::Column.new(:reference_number, :string),
      responsible_id: Ekylibre::Record::Column.new(:responsible_id, :integer),
      state: Ekylibre::Record::Column.new(:state, :string, limit: 64, null: false),
      subject: Ekylibre::Record::Column.new(:subject, :string),
      sum_method: Ekylibre::Record::Column.new(:sum_method, :string, limit: 8, null: false, default: "wt"),
      transporter_id: Ekylibre::Record::Column.new(:transporter_id, :integer),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    schema_migrations: HashWithIndifferentAccess.new(
      version: Ekylibre::Record::Column.new(:version, :string, null: false)
    ),
    sequences: HashWithIndifferentAccess.new(
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      last_cweek: Ekylibre::Record::Column.new(:last_cweek, :integer),
      last_month: Ekylibre::Record::Column.new(:last_month, :integer),
      last_number: Ekylibre::Record::Column.new(:last_number, :integer),
      last_year: Ekylibre::Record::Column.new(:last_year, :integer),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      number_format: Ekylibre::Record::Column.new(:number_format, :string, null: false),
      number_increment: Ekylibre::Record::Column.new(:number_increment, :integer, null: false, default: 1),
      number_start: Ekylibre::Record::Column.new(:number_start, :integer, null: false, default: 1),
      period: Ekylibre::Record::Column.new(:period, :string, null: false, default: "number"),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      usage: Ekylibre::Record::Column.new(:usage, :string)
    ),
    sessions: HashWithIndifferentAccess.new(
      data: Ekylibre::Record::Column.new(:data, :text),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      session_id: Ekylibre::Record::Column.new(:session_id, :string),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime)
    ),
    spatial_ref_sys: HashWithIndifferentAccess.new(
      auth_name: Ekylibre::Record::Column.new(:auth_name, :string, limit: 256),
      auth_srid: Ekylibre::Record::Column.new(:auth_srid, :integer),
      proj4text: Ekylibre::Record::Column.new(:proj4text, :string, limit: 2048),
      srid: Ekylibre::Record::Column.new(:srid, :integer, null: false),
      srtext: Ekylibre::Record::Column.new(:srtext, :string, limit: 2048)
    ),
    subscription_natures: HashWithIndifferentAccess.new(
      actual_number: Ekylibre::Record::Column.new(:actual_number, :integer),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :text),
      entity_link_direction: Ekylibre::Record::Column.new(:entity_link_direction, :string, limit: 31),
      entity_link_nature: Ekylibre::Record::Column.new(:entity_link_nature, :string, limit: 127),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      nature: Ekylibre::Record::Column.new(:nature, :string, null: false),
      reduction_percentage: Ekylibre::Record::Column.new(:reduction_percentage, :decimal, precision: 19, scale: 4),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    subscriptions: HashWithIndifferentAccess.new(
      address_id: Ekylibre::Record::Column.new(:address_id, :integer),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :text),
      first_number: Ekylibre::Record::Column.new(:first_number, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      last_number: Ekylibre::Record::Column.new(:last_number, :integer),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      nature_id: Ekylibre::Record::Column.new(:nature_id, :integer),
      number: Ekylibre::Record::Column.new(:number, :string),
      product_nature_id: Ekylibre::Record::Column.new(:product_nature_id, :integer),
      quantity: Ekylibre::Record::Column.new(:quantity, :decimal, precision: 19, scale: 4),
      sale_id: Ekylibre::Record::Column.new(:sale_id, :integer),
      sale_item_id: Ekylibre::Record::Column.new(:sale_item_id, :integer),
      started_on: Ekylibre::Record::Column.new(:started_on, :date),
      stopped_on: Ekylibre::Record::Column.new(:stopped_on, :date),
      subscriber_id: Ekylibre::Record::Column.new(:subscriber_id, :integer),
      suspended: Ekylibre::Record::Column.new(:suspended, :boolean, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    tax_declarations: HashWithIndifferentAccess.new(
      accounted_at: Ekylibre::Record::Column.new(:accounted_at, :datetime),
      acquisition_amount: Ekylibre::Record::Column.new(:acquisition_amount, :decimal, precision: 19, scale: 4),
      address: Ekylibre::Record::Column.new(:address, :string),
      amount: Ekylibre::Record::Column.new(:amount, :decimal, precision: 19, scale: 4),
      assimilated_taxes_amount: Ekylibre::Record::Column.new(:assimilated_taxes_amount, :decimal, precision: 19, scale: 4),
      balance_amount: Ekylibre::Record::Column.new(:balance_amount, :decimal, precision: 19, scale: 4),
      collected_amount: Ekylibre::Record::Column.new(:collected_amount, :decimal, precision: 19, scale: 4),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      declared_on: Ekylibre::Record::Column.new(:declared_on, :date),
      deferred_payment: Ekylibre::Record::Column.new(:deferred_payment, :boolean),
      financial_year_id: Ekylibre::Record::Column.new(:financial_year_id, :integer),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      journal_entry_id: Ekylibre::Record::Column.new(:journal_entry_id, :integer),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      nature: Ekylibre::Record::Column.new(:nature, :string, null: false, default: "normal"),
      paid_amount: Ekylibre::Record::Column.new(:paid_amount, :decimal, precision: 19, scale: 4),
      paid_on: Ekylibre::Record::Column.new(:paid_on, :date),
      started_on: Ekylibre::Record::Column.new(:started_on, :date),
      stopped_on: Ekylibre::Record::Column.new(:stopped_on, :date),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    taxes: HashWithIndifferentAccess.new(
      amount: Ekylibre::Record::Column.new(:amount, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      collected_account_id: Ekylibre::Record::Column.new(:collected_account_id, :integer),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :text),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      included: Ekylibre::Record::Column.new(:included, :boolean, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      nature: Ekylibre::Record::Column.new(:nature, :string, limit: 16, null: false),
      paid_account_id: Ekylibre::Record::Column.new(:paid_account_id, :integer),
      reductible: Ekylibre::Record::Column.new(:reductible, :boolean, null: false, default: true),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    trackings: HashWithIndifferentAccess.new(
      active: Ekylibre::Record::Column.new(:active, :boolean, null: false, default: true),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :text),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      name: Ekylibre::Record::Column.new(:name, :string, null: false),
      producer_id: Ekylibre::Record::Column.new(:producer_id, :integer),
      product_id: Ekylibre::Record::Column.new(:product_id, :integer),
      serial: Ekylibre::Record::Column.new(:serial, :string),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    transfers: HashWithIndifferentAccess.new(
      accounted_at: Ekylibre::Record::Column.new(:accounted_at, :datetime),
      affair_id: Ekylibre::Record::Column.new(:affair_id, :integer),
      amount: Ekylibre::Record::Column.new(:amount, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      client_id: Ekylibre::Record::Column.new(:client_id, :integer, null: false),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      created_on: Ekylibre::Record::Column.new(:created_on, :date),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      currency: Ekylibre::Record::Column.new(:currency, :string, limit: 3, null: false),
      description: Ekylibre::Record::Column.new(:description, :string),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      journal_entry_id: Ekylibre::Record::Column.new(:journal_entry_id, :integer),
      label: Ekylibre::Record::Column.new(:label, :string),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      started_on: Ekylibre::Record::Column.new(:started_on, :date),
      stopped_on: Ekylibre::Record::Column.new(:stopped_on, :date),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    ),
    transports: HashWithIndifferentAccess.new(
      amount: Ekylibre::Record::Column.new(:amount, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      created_on: Ekylibre::Record::Column.new(:created_on, :date),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :text),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      number: Ekylibre::Record::Column.new(:number, :string),
      pretax_amount: Ekylibre::Record::Column.new(:pretax_amount, :decimal, precision: 19, scale: 4, null: false, default: 0.0),
      purchase_id: Ekylibre::Record::Column.new(:purchase_id, :integer),
      reference_number: Ekylibre::Record::Column.new(:reference_number, :string),
      responsible_id: Ekylibre::Record::Column.new(:responsible_id, :integer),
      transport_on: Ekylibre::Record::Column.new(:transport_on, :date),
      transporter_id: Ekylibre::Record::Column.new(:transporter_id, :integer, null: false),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer),
      weight: Ekylibre::Record::Column.new(:weight, :decimal, precision: 19, scale: 4)
    ),
    users: HashWithIndifferentAccess.new(
      administrator: Ekylibre::Record::Column.new(:administrator, :boolean, null: false, default: true),
      arrived_on: Ekylibre::Record::Column.new(:arrived_on, :date),
      authentication_token: Ekylibre::Record::Column.new(:authentication_token, :string),
      commercial: Ekylibre::Record::Column.new(:commercial, :boolean),
      confirmation_sent_at: Ekylibre::Record::Column.new(:confirmation_sent_at, :datetime),
      confirmation_token: Ekylibre::Record::Column.new(:confirmation_token, :string),
      confirmed_at: Ekylibre::Record::Column.new(:confirmed_at, :datetime),
      created_at: Ekylibre::Record::Column.new(:created_at, :datetime, null: false),
      creator_id: Ekylibre::Record::Column.new(:creator_id, :integer),
      current_sign_in_at: Ekylibre::Record::Column.new(:current_sign_in_at, :datetime),
      current_sign_in_ip: Ekylibre::Record::Column.new(:current_sign_in_ip, :string),
      departed_at: Ekylibre::Record::Column.new(:departed_at, :datetime),
      department_id: Ekylibre::Record::Column.new(:department_id, :integer),
      description: Ekylibre::Record::Column.new(:description, :text),
      email: Ekylibre::Record::Column.new(:email, :string, null: false),
      employed: Ekylibre::Record::Column.new(:employed, :boolean, null: false),
      employment: Ekylibre::Record::Column.new(:employment, :string),
      encrypted_password: Ekylibre::Record::Column.new(:encrypted_password, :string, null: false, default: ""),
      establishment_id: Ekylibre::Record::Column.new(:establishment_id, :integer),
      failed_attempts: Ekylibre::Record::Column.new(:failed_attempts, :integer, default: 0),
      first_name: Ekylibre::Record::Column.new(:first_name, :string, null: false),
      id: Ekylibre::Record::Column.new(:id, :integer, null: false),
      language: Ekylibre::Record::Column.new(:language, :string, limit: 3, null: false, default: "???"),
      last_name: Ekylibre::Record::Column.new(:last_name, :string, null: false),
      last_sign_in_at: Ekylibre::Record::Column.new(:last_sign_in_at, :datetime),
      last_sign_in_ip: Ekylibre::Record::Column.new(:last_sign_in_ip, :string),
      lock_version: Ekylibre::Record::Column.new(:lock_version, :integer, null: false, default: 0),
      locked: Ekylibre::Record::Column.new(:locked, :boolean, null: false),
      locked_at: Ekylibre::Record::Column.new(:locked_at, :datetime),
      maximal_grantable_reduction_percentage: Ekylibre::Record::Column.new(:maximal_grantable_reduction_percentage, :decimal, precision: 19, scale: 4, null: false, default: 5.0),
      office: Ekylibre::Record::Column.new(:office, :string),
      person_id: Ekylibre::Record::Column.new(:person_id, :integer),
      profession_id: Ekylibre::Record::Column.new(:profession_id, :integer),
      remember_created_at: Ekylibre::Record::Column.new(:remember_created_at, :datetime),
      reset_password_sent_at: Ekylibre::Record::Column.new(:reset_password_sent_at, :datetime),
      reset_password_token: Ekylibre::Record::Column.new(:reset_password_token, :string),
      rights: Ekylibre::Record::Column.new(:rights, :text),
      role_id: Ekylibre::Record::Column.new(:role_id, :integer, null: false),
      sign_in_count: Ekylibre::Record::Column.new(:sign_in_count, :integer, default: 0),
      unconfirmed_email: Ekylibre::Record::Column.new(:unconfirmed_email, :string),
      unlock_token: Ekylibre::Record::Column.new(:unlock_token, :string),
      updated_at: Ekylibre::Record::Column.new(:updated_at, :datetime, null: false),
      updater_id: Ekylibre::Record::Column.new(:updater_id, :integer)
    )
  )

end
