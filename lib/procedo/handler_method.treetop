module Procedo
  grammar HandlerMethod

    rule expression
      additive / primary
    end

    rule multitive
        head:primary space? "*" space? operand:multitive <Multiplication>
      / head:primary space? "/" space? operand:multitive <Division>
      / primary
    end

    rule additive
        head:multitive space? "+" space? operand:additive <Addition>
      / head:multitive space? "-" space? operand:additive <Substraction>
      / multitive
    end

    rule primary
      value / numeric / reading / "(" space? expression space? ")" <Expression>
    end

    rule reading
      individual_measure_reading / individual_reading / whole_measure_reading / whole_reading
    end

    rule individual_measure_reading
      actor ".." indicator "(" unit ")" <IndividualMeasureReading>
    end

    rule whole_measure_reading
      actor "." indicator "(" unit ")" <WholeMeasureReading>
    end

    rule individual_reading
      actor ".." indicator <IndividualReading>
    end

    rule whole_reading
      actor "." indicator <WholeReading>
    end

    rule actor
      self / variable
    end

    rule variable
      [a-z] [a-z0-9]* ('_' [a-z0-9]+)* <Variable>
    end

    rule indicator
      [a-z] [a-z0-9]* ('_' [a-z0-9]+)* <Indicator>
    end

    rule unit
      [a-z] [a-z0-9]* ('_' [a-z0-9]+)* <Unit>
    end

    rule numeric
      ([1-9] [0-9]* / '0') ('.' [0-9]+)? <Numeric>
    end

    rule space
      [\s\n]*
    end

    rule self
      "self" <Self>
    end

    rule value
      "value" <Value>
    end

  end
end
