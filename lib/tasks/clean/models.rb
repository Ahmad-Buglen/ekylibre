#
desc "Update models list file in lib/models.rb"
task :models => :environment do
  print " - Models: "

  models = CleanSupport.models_in_file
  models_code = "  @@models = ["+models.collect{|m| ":"+m.name.underscore}.join(", ")+"]\n"

  symodels = models.collect{|x| x.name.underscore.to_sym}

  errors = 0
  models_file = Rails.root.join("lib", "ekylibre", "models.rb")
  require models_file
  refs = Ekylibre.references
  refs_code = ""
  for model in models
    m = model.name.underscore.to_sym
    cols = []
    model.columns.sort{|a,b| a.name <=> b.name}.each do |column|
      c = column.name.to_sym
      if c.to_s.match(/_id$/)
        val = (refs[m].is_a?(Hash) ? refs[m][c] : nil)
        val = ((val.nil? or val.blank?) ? "''" : val.inspect)
        if c == :parent_id
          val = ":#{m}"
        elsif [:creator_id, :updater_id].include? c
          val = ":user"
        elsif model.columns_hash.keys.include?(c.to_s[0..-4]+"_type")
          val = "\"#{c.to_s[0..-4]}_type\""
        elsif symodels.include? c.to_s[0..-4].to_sym
          val = ":#{c.to_s[0..-4]}"
        end
        errors += 1 if val == "''"
        cols << "      :#{c} => #{val}"
      end
    end
    refs_code += "\n    :#{m} => {\n"+cols.join(",\n")+"\n    },"
  end
  refs_code = "  @@references = {"+refs_code[0..-2]+"\n  }\n"


  schema_code  = "@@schema = HashWithIndifferentAccess.new(\n"
  schema_code << Ekylibre::Record::Base.connection.tables.sort.collect do |table|
    table_code  = "#{table}: HashWithIndifferentAccess.new(\n"
    table_code << Ekylibre::Record::Base.connection.columns(table).sort{|a,b| a.name <=> b.name }.collect do |column|
      column_code  = "#{column.name}: {"
      column_code << "name: :#{column.name}"
      column_code << ", type: :#{column.type}"
      if column.type == :decimal
        column_code << ", precision: #{column.precision}"
        column_code << ", scale: #{column.scale}"
      end
      if column.type == :string and column.limit.to_i != 255
        column_code << ", limit: #{column.limit}"
      end
      if column.null.is_a? FalseClass
        column_code << ", null: false"
      end
      if column.default
        if column.type == :string
          column_code << ", default: #{column.default.inspect}"
        else
          column_code << ", default: #{column.default.to_s}"
        end
      end
      column_code << "}"
      column_code
    end.join(",\n").dig
    table_code << ")"
    table_code
  end.join(",\n").dig
  schema_code << ")\n"



  File.open(models_file, "wb") do |f|
    f.write("# Autogenerated from Ekylibre (`rake clean:models` or `rake clean`)\n")
    f.write("module Ekylibre\n")
    f.write("  mattr_reader :models, :references, :schema\n")

    f.write("  # List of all models\n")
    f.write(models_code)
    f.write("\n")

    f.write("  # List of all references\n")
    f.write(refs_code)
    f.write("\n")

    f.write("  # Schema\n")
    f.write(schema_code.dig)
    f.write("\n")

    f.write("end\n")
  end

  print "#{errors.to_s.rjust(3)} errors\n"
end
