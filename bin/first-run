#!/usr/bin/env ruby
require_relative '../config/environment'

require 'optparse'
require 'pathname'

options = {}
OptionParser.new do |opts|
  opts.banner = ("Usage: #{$PROGRAM_NAME} build [options] <directory>\n" +
                 "       #{$PROGRAM_NAME} check [options] <file>\n" +
                 "       #{$PROGRAM_NAME} seed  [options] <file>"
                 )

  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end
end.parse!

task = ARGV.shift.to_sym

if task == :build
  raise "Need directory argument" unless ARGV.any?
  directory = Pathname.new(File.expand_path(ARGV.shift))
  raise "Invalid directory: #{directory}" unless directory.exist?
  Ekylibre::FirstRun.build(directory)
elsif task == :check
  raise "Need file argument" unless ARGV.any?
  file = Pathname.new(File.expand_path(ARGV.shift))
  raise "Invalid file: #{file}" unless file.exist?
  issues = Ekylibre::FirstRun.check(file)
  for issue in issues
    puts "[#{issue.level}] #{issue.message}"
  end
  if issues.detect{|i| i.level == :error }
    puts "#{file} is invalid. See errors above."
  else
    puts "#{file} is valid."
  end
elsif task == :seed
  raise "Need file argument" unless ARGV.any?
  file = Pathname.new(File.expand_path(ARGV.shift))
  raise "Invalid file: #{file}" unless file.exist?
  Ekylibre::FirstRun.seed(file)
else
  raise "Unknown task: #{task}"
end
